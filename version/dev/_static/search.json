[
    {
        "objectID": "index",
        "href": "index.html#pyansys-tools-variable-interop",
        "title": "PyAnsys Tools Variable Interop",
        "section": "PyAnsys Tools Variable Interop",
        "text": "PyAnsys Tools Variable Interop contains definitions of the basic variables, types,\nmetadata, and values intended to provide interoperability between all products that\noptionally choose to participate.\nPyAnsys Tools Variable Interop"
    },
    {
        "objectID": "index",
        "href": "index.html#characteristics",
        "title": "PyAnsys Tools Variable Interop > Characteristics",
        "section": "Characteristics",
        "text": "PyAnsys Tools Variable Interop has these key characteristics:\nSupports a minimal but complete set of formally defined data types for engineering work.\nOffers a standard base implementation in each supported language that matches the style and intent of\nthe given language.\nImplements the same standard data types and conversion rules as all ModelCenter products.\nProvides the following capabilities:\nTo/from an “API” string (not intended for UI layer) to allow data transfer in human-readable format\nacross products and regions\nTo/from human-readable display strings\nTo/from binary blocks that are platform agnostic\nImplicit conversion to/from language primitives for lossless conversions\nExplicit conversion for lossy conversions\nUses the visitor pattern to make it easy and\nreliable to add and reuse new operations with compile-time semantics. A data type library can\neither make it easy to add new data types or make it easy to add new operations to the existing\ndata types. It is extremely hard to make both possible at the same time. Because this library\nmakes it easy to add new operations to the existing data types, adding new data types is not easy.\nDefines strongly the most commonly reused metadata.\nProvides a generic dictionary for custom metadata.\nCharacteristics"
    },
    {
        "objectID": "index",
        "href": "index.html#top-level-items",
        "title": "PyAnsys Tools Variable Interop > Top-level items",
        "section": "Top-level items",
        "text": "Descriptions follow of the top-level items in PyAnsys Tools Variable Interop:\nThe base metadata type that all variable types extend is\nCommonVariableMetadata. Metadata is defined as the information\nabout a variable that is static and does not change when a\ncomponent or workflow is run.\nThe value interface is IVariableValue. These values are defined so that\nPyAnsys Tools Variable Interop knows how to properly convert from one type to\nthe other via language operators. Lossless conversions are implicit. Operations\nthat are lossy, such as converting a real value to an integer, are explicit.\nExplicit conversions can throw an exception if there is an overflow or other\n“bad data” situation.\nTop-level items\nCommonVariableMetadata\nIVariableValue"
    },
    {
        "objectID": "index",
        "href": "index.html#project-background",
        "title": "PyAnsys Tools Variable Interop > Project background",
        "section": "Project background",
        "text": "After 20 years of work on integration problems, a holistic review was performed around the\nconcept of a variable in some legacy codebases. No less than two dozen classes that represent a\nvariable were found. There were many more switch statements, where one data type needed to be\nconverted to another. This inconsistency brings about the following problems:\nThe behavior of one capability within the product suite does not match that of other\ncapabilities, leading to confusion, bugs, and lost time.\nSwitch statements are notorious for introducing bugs. People tend to cut and paste them, leading\nto subtle maintenance issues as one is modified and the other diverges. There is no compile-time\ntype checking.\nSlight differences in data types (int32 versus int64) can lead to unexpected bugs, including disastrous\n“bad data with no error” class issues.\nSeemingly simple tasks like reliably converting to a string or byte buffer and back are\nsurprisingly hard to do correctly in all edge cases. Worse, even if you get a “correct”\nimplementation, if it doesn’t match what is used at an API boundary by a different capability\nor product, errors ensue.\nThe standards and the standard implementations in several languages came out of this review.\nProject background"
    },
    {
        "objectID": "index",
        "href": "index.html#documentation-and-issues",
        "title": "PyAnsys Tools Variable Interop > Documentation and issues",
        "section": "Documentation and issues",
        "text": "Documentation for the latest stable release of this package is hosted at\nPyAnsys Tools Variable Interop documentation.\nIn the upper right corner of the documentation’s title bar, there is an option for switching from\nviewing the documentation for the latest stable release to viewing the documentation for the development\nversion or previously released versions.\nOn the PyAnsys Tools Variable Interop Issues page,\nyou can create issues to report bugs and request new features. On the\nPyAnsys Tools Variable Interop Discussions\npage or the Discussions page on the Ansys Developer portal, you\ncan post questions, share ideas, and get community feedback.\nTo reach the project support team, email pyansys.core@ansys.com.\nDocumentation and issues"
    },
    {
        "objectID": "index",
        "href": "index.html#installation",
        "title": "PyAnsys Tools Variable Interop > Installation",
        "section": "Installation",
        "text": "The pyansys-tools-variableinterop package currently supports Python\n3.9 through 3.12 on Windows, MacOS, and Linux.\nYou can install this package with this command:\nAlternatively, install the latest version from the pyansys-tools-variableinterop GitHub repository\nwith this command:\nTo install a local development version of the project, run these commands:\nInstallation\npyansys-tools-variableinterop"
    },
    {
        "objectID": "index",
        "href": "index.html#documentation-building",
        "title": "PyAnsys Tools Variable Interop > Documentation building",
        "section": "Documentation building",
        "text": "Install the required dependencies for building the documentation with this\ncommand:\nBuild and view documentation with the one or more commands for your\noperating system:\nDocumentation building"
    },
    {
        "objectID": "index",
        "href": "index.html#testing",
        "title": "PyAnsys Tools Variable Interop > Testing",
        "section": "Testing",
        "text": "Install the dependencies required for testing with this command:\nRun the tests via pytest with this command:\nTesting"
    },
    {
        "objectID": "index",
        "href": "index.html#usage",
        "title": "PyAnsys Tools Variable Interop > Usage",
        "section": "Usage",
        "text": "You can create values and metadata like any other Python object:\nUsage"
    },
    {
        "objectID": "index",
        "href": "index.html#license",
        "title": "PyAnsys Tools Variable Interop > License",
        "section": "License",
        "text": "PyAnsys Tools Variable Interop is licensed under the MIT license.\nLicense"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/implicit_coercion/index",
        "href": "api/ansys/tools/variableinterop/utils/implicit_coercion/index.html#the-implicit_coercionpy-module",
        "title": "The implicit_coercion.py module",
        "section": "The implicit_coercion.py module",
        "text": "The implicit_coercion.py module\nimplicit_coercion.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/implicit_coercion/index",
        "href": "api/ansys/tools/variableinterop/utils/implicit_coercion/index.html#summary",
        "title": "The implicit_coercion.py module > Summary",
        "section": "Summary",
        "text": "implicit_coerce_single\nAttempt to coerce the argument into the given type.\nimplicit_coerce\nUse to decorate functions using the PEP 484 typing system to try and coerce any\nSummary\nimplicit_coerce_single\nimplicit_coerce"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/implicit_coercion/index",
        "href": "api/ansys/tools/variableinterop/utils/implicit_coercion/index.html#description",
        "title": "The implicit_coercion.py module > Description",
        "section": "Description",
        "text": "Provides utilities for implicitly coercing arbitrary Python objects into the\nappropriate IVariableValue type.\nDescription\nIVariableValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/implicit_coercion/index",
        "href": "api/ansys/tools/variableinterop/utils/implicit_coercion/index.html#module-detail",
        "title": "The implicit_coercion.py module > Module detail",
        "section": "Module detail",
        "text": "Attempt to coerce the argument into the given type.\nThis function uses implicit semantics in that lossy conversions are\nnot considered (such as int64->real64 because precision may be lost).\nObject to attempt to convert.\nType of object to convert to. The type must be IVariableValue or\nsomething derived from it.\nConverted object\nIf the argument cannot be converted to the supplied type.\nUse to decorate functions using the PEP 484 typing system to try and coerce any\narguments that accept the IVariableValue type or any derived type into an\nacceptable value.\nFunction to decorate.\nWrapper function.\nModule detail\nAny\ntype\nIVariableValue\nAny\nTypeError\nIVariableValue\nAny\nAny"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/implicit_coercion/index",
        "href": "api/ansys/tools/variableinterop/utils/implicit_coercion/index.html#implicit_coercion.implicit_coerce_single",
        "title": "The implicit_coercion.py module > Module detail > implicit_coerce_single",
        "section": "Module detail > implicit_coerce_single",
        "text": "implicit_coercion.implicit_coerce_single(arg: Any, arg_type: type) -> Any\n\nAttempt to coerce the argument into the given type.\n\nThis function uses implicit semantics in that lossy conversions are\nnot considered (such as int64->real64 because precision may be lost).\n\nParameters\n\narg\n\nAny\n\nObject to attempt to convert.\n\narg_type\n\ntype\n\nType of object to convert to. The type must be IVariableValue or\nsomething derived from it.\n\nReturns\n\nAny\n\nConverted object\n\nRaises\n\nTypeError\n\nIf the argument cannot be converted to the supplied type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/implicit_coercion/index",
        "href": "api/ansys/tools/variableinterop/utils/implicit_coercion/index.html#implicit_coercion.implicit_coerce",
        "title": "The implicit_coercion.py module > Module detail > implicit_coerce",
        "section": "Module detail > implicit_coerce",
        "text": "implicit_coercion.implicit_coerce(func: Any) -> Any\n\nUse to decorate functions using the PEP 484 typing system to try and coerce any\narguments that accept the IVariableValue type or any derived type into an\nacceptable value.\n\nParameters\n\nfunc\n\nAny\n\nFunction to decorate.\n\nReturns\n\nAny\n\nWrapper function.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata",
        "href": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata.html#filearraymetadata",
        "title": "FileArrayMetadata",
        "section": "FileArrayMetadata",
        "text": "Bases: ansys.tools.variableinterop.file_metadata.FileMetadata\nProvides metadata for the FileArray variable type.\nFileArrayMetadata\nFileArrayMetadata\nansys.tools.variableinterop.file_metadata.FileMetadata\nFileArray"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata",
        "href": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata.html#ansys.tools.variableinterop.file_array_metadata.FileArrayMetadata",
        "title": "FileArrayMetadata > FileArrayMetadata > FileArrayMetadata",
        "section": "FileArrayMetadata > FileArrayMetadata",
        "text": "class ansys.tools.variableinterop.file_array_metadata.FileArrayMetadata\n\nBases: ansys.tools.variableinterop.file_metadata.FileMetadata\n\nProvides metadata for the FileArray variable type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata",
        "href": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata.html#overview",
        "title": "FileArrayMetadata > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nvariable_type\nVariable type of the object.\nOverview\naccept\nvariable_type"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata",
        "href": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata.html#import-detail",
        "title": "FileArrayMetadata > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata",
        "href": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata.html#property-detail",
        "title": "FileArrayMetadata > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata",
        "href": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata.html#FileArrayMetadata.variable_type",
        "title": "FileArrayMetadata > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property FileArrayMetadata.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata",
        "href": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata.html#method-detail",
        "title": "FileArrayMetadata > Method detail",
        "section": "Method detail",
        "text": "Invoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nMethod detail\nIVariableMetadataVisitor\nT\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata",
        "href": "api/ansys/tools/variableinterop/file_array_metadata/FileArrayMetadata.html#FileArrayMetadata.accept",
        "title": "FileArrayMetadata > Method detail > accept",
        "section": "Method detail > accept",
        "text": "FileArrayMetadata.accept(visitor: ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor[ansys.tools.variableinterop.ivariablemetadata_visitor.T]) -> ansys.tools.variableinterop.ivariablemetadata_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableMetadataVisitor[T]\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/index",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/index.html#the-api_string_to_value_visitorpy-module",
        "title": "The api_string_to_value_visitor.py module",
        "section": "The api_string_to_value_visitor.py module",
        "text": "The api_string_to_value_visitor.py module\napi_string_to_value_visitor.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/index",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/index.html#summary",
        "title": "The api_string_to_value_visitor.py module > Summary",
        "section": "Summary",
        "text": "APIStringToValueVisitor\nVisits variable type enumeration values, producing a variable value from a\nSummary\nAPIStringToValueVisitor"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/index",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/index.html#description",
        "title": "The api_string_to_value_visitor.py module > Description",
        "section": "Description",
        "text": "Provides a variable type pseudo-visitor that parses values from strings.\nThe pseudo-visitor is constructed with the string to parse and then accepted by the\nappropriate variable type. When visiting, it attempts to parse the string into the\nvisited type. For more information on why this pattern is better than bare switch\nstatements, see IVariableTypePseudoVisitor.\nDescription\nIVariableTypePseudoVisitor"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#booleanarrayvalue",
        "title": "BooleanArrayValue",
        "section": "BooleanArrayValue",
        "text": "Bases: ansys.tools.variableinterop.variable_value.CommonArrayValue[numpy.bool_]\nStores a value as a BooleanArrayValue variable type.\nIn Python, a BooleanArrayValue type is implemented by extending NumPy’s ndarray type.\nThis means that they decay naturally into numpy.ndarray objects when using NumPy’s\narray operators.\nBooleanArrayValue\nBooleanArrayValue\nansys.tools.variableinterop.variable_value.CommonArrayValue\nnumpy.bool_\nBooleanArrayValue\nBooleanArrayValue\nndarray\nnumpy.ndarray"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#ansys.tools.variableinterop.array_values.BooleanArrayValue",
        "title": "BooleanArrayValue > BooleanArrayValue > BooleanArrayValue",
        "section": "BooleanArrayValue > BooleanArrayValue",
        "text": "class ansys.tools.variableinterop.array_values.BooleanArrayValue\n\nBases: ansys.tools.variableinterop.variable_value.CommonArrayValue[numpy.bool_]\n\nStores a value as a BooleanArrayValue variable type.\n\nIn Python, a BooleanArrayValue type is implemented by extending NumPy’s ndarray type.\nThis means that they decay naturally into numpy.ndarray objects when using NumPy’s\narray operators.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#overview",
        "title": "BooleanArrayValue > Overview",
        "section": "Overview",
        "text": "clone\naccept\nto_real_array_value\nConvert this value to a RealArrayValue type.\nto_integer_array_value\nConvert this value to an IntegerArrayValue type.\nto_string_array_value\nConvert this value to a StringArrayValue type.\nto_api_string\nto_display_string\nvariable_type\nfrom_api_string\nConvert an API-formatted string to a BooleanArrayValue type.\n__eq__\nOverview\nclone\naccept\nto_real_array_value\nRealArrayValue\nto_integer_array_value\nIntegerArrayValue\nto_string_array_value\nStringArrayValue\nto_api_string\nto_display_string\nvariable_type\nfrom_api_string\nBooleanArrayValue\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#import-detail",
        "title": "BooleanArrayValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#property-detail",
        "title": "BooleanArrayValue > Property detail",
        "section": "Property detail",
        "text": "Property detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#BooleanArrayValue.variable_type",
        "title": "BooleanArrayValue > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property BooleanArrayValue.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#method-detail",
        "title": "BooleanArrayValue > Method detail",
        "section": "Method detail",
        "text": "Convert this value to a RealArrayValue type.\nRealArrayValue type with the same values converted to real numbers.\nConvert this value to an IntegerArrayValue type.\nIntegerArrayValue type with the same values converted to integers.\nConvert this value to a StringArrayValue type.\nStringArrayValue type with the same values converted to strings.\nConvert an API-formatted string to a BooleanArrayValue type.\nAPI string to parse.\nResult of parsing the BooleanArrayValue type.\nMethod detail\nRealArrayValue\nRealArrayValue\nRealArrayValue\nIntegerArrayValue\nIntegerArrayValue\nIntegerArrayValue\nStringArrayValue\nStringArrayValue\nStringArrayValue\nBooleanArrayValue\npython:str\nBooleanArrayValue\nBooleanArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#BooleanArrayValue.__eq__",
        "title": "BooleanArrayValue > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "BooleanArrayValue.__eq__(other) -> bool\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#BooleanArrayValue.clone",
        "title": "BooleanArrayValue > Method detail > clone",
        "section": "Method detail > clone",
        "text": "BooleanArrayValue.clone() -> BooleanArrayValue\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#BooleanArrayValue.accept",
        "title": "BooleanArrayValue > Method detail > accept",
        "section": "Method detail > accept",
        "text": "BooleanArrayValue.accept(visitor: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[T]) -> T\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#BooleanArrayValue.to_real_array_value",
        "title": "BooleanArrayValue > Method detail > to_real_array_value",
        "section": "Method detail > to_real_array_value",
        "text": "BooleanArrayValue.to_real_array_value() -> RealArrayValue\n\nConvert this value to a RealArrayValue type.\n\nReturns\n\nRealArrayValue\n\nRealArrayValue type with the same values converted to real numbers.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#BooleanArrayValue.to_integer_array_value",
        "title": "BooleanArrayValue > Method detail > to_integer_array_value",
        "section": "Method detail > to_integer_array_value",
        "text": "BooleanArrayValue.to_integer_array_value() -> IntegerArrayValue\n\nConvert this value to an IntegerArrayValue type.\n\nReturns\n\nIntegerArrayValue\n\nIntegerArrayValue type with the same values converted to integers.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#BooleanArrayValue.to_string_array_value",
        "title": "BooleanArrayValue > Method detail > to_string_array_value",
        "section": "Method detail > to_string_array_value",
        "text": "BooleanArrayValue.to_string_array_value() -> StringArrayValue\n\nConvert this value to a StringArrayValue type.\n\nReturns\n\nStringArrayValue\n\nStringArrayValue type with the same values converted to strings.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#BooleanArrayValue.to_api_string",
        "title": "BooleanArrayValue > Method detail > to_api_string",
        "section": "Method detail > to_api_string",
        "text": "BooleanArrayValue.to_api_string(context: ansys.tools.variableinterop.isave_context.ISaveContext | None = None) -> str\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#BooleanArrayValue.from_api_string",
        "title": "BooleanArrayValue > Method detail > from_api_string",
        "section": "Method detail > from_api_string",
        "text": "static BooleanArrayValue.from_api_string(value: str) -> BooleanArrayValue\n\nConvert an API-formatted string to a BooleanArrayValue type.\n\nParameters\n\nvalue\n\npython:str\n\nAPI string to parse.\n\nReturns\n\nBooleanArrayValue\n\nResult of parsing the BooleanArrayValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/BooleanArrayValue.html#BooleanArrayValue.to_display_string",
        "title": "BooleanArrayValue > Method detail > to_display_string",
        "section": "Method detail > to_display_string",
        "text": "BooleanArrayValue.to_display_string(locale_name: str) -> str\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil",
        "href": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil.html#arraytofromstringutil",
        "title": "ArrayToFromStringUtil",
        "section": "ArrayToFromStringUtil",
        "text": "Provides utility methods for converting CommonValueArray objects to and from\nstring representations.\nArrayToFromStringUtil\nArrayToFromStringUtil\nCommonValueArray"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil",
        "href": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil.html#ansys.tools.variableinterop.utils.array_to_from_string_util.ArrayToFromStringUtil",
        "title": "ArrayToFromStringUtil > ArrayToFromStringUtil > ArrayToFromStringUtil",
        "section": "ArrayToFromStringUtil > ArrayToFromStringUtil",
        "text": "class ansys.tools.variableinterop.utils.array_to_from_string_util.ArrayToFromStringUtil\n\nProvides utility methods for converting CommonValueArray objects to and from\nstring representations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil",
        "href": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil.html#overview",
        "title": "ArrayToFromStringUtil > Overview",
        "section": "Overview",
        "text": "value_to_string\nConvert an array value to a string representation of it.\nstring_to_value\nConvert a string into a CommonValueArray object.\nOverview\nvalue_to_string\nstring_to_value\nCommonValueArray"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil",
        "href": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil.html#import-detail",
        "title": "ArrayToFromStringUtil > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil",
        "href": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil.html#method-detail",
        "title": "ArrayToFromStringUtil > Method detail",
        "section": "Method detail",
        "text": "Convert an array value to a string representation of it.\nThe stringify_action() method allows converting the value arbitrarily, so both\nAPI and display strings can use this method.\nArray value to convert.\nAction to use to convert each individual value in the array.\nGenerated string.\nConvert a string into a CommonValueArray object.\nThe valueify_action() method allows converting the value arbitrarily, so both\nAPI and display strings can use this method.\nString value to parse.\nAction that takes either a shape or a list of initial values and creates a new\narray of the correct type.\nAction used to parse each individual value to the correct type.\nA new array object with the parsed values.\nMethod detail\nstringify_action()\nNDArray\nCallable\npython:str\nCommonValueArray\nvalueify_action()\npython:str\nCallable\nAny\nCommonArrayValue\nCallable\npython:str\nIVariableValue\nCommonArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil",
        "href": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil.html#ArrayToFromStringUtil.value_to_string",
        "title": "ArrayToFromStringUtil > Method detail > value_to_string",
        "section": "Method detail > value_to_string",
        "text": "static ArrayToFromStringUtil.value_to_string(value: numpy.typing.NDArray, stringify_action: Callable) -> str\n\nConvert an array value to a string representation of it.\n\nThe stringify_action() method allows converting the value arbitrarily, so both\nAPI and display strings can use this method.\n\nParameters\n\nvalue\n\nNDArray\n\nArray value to convert.\n\nstringify_action\n\nCallable\n\nAction to use to convert each individual value in the array.\n\nReturns\n\npython:str\n\nGenerated string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil",
        "href": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/ArrayToFromStringUtil.html#ArrayToFromStringUtil.string_to_value",
        "title": "ArrayToFromStringUtil > Method detail > string_to_value",
        "section": "Method detail > string_to_value",
        "text": "static ArrayToFromStringUtil.string_to_value(value: str, create_action: Callable[[Any], ansys.tools.variableinterop.variable_value.CommonArrayValue], valueify_action: Callable[[str], ansys.tools.variableinterop.variable_value.IVariableValue]) -> ansys.tools.variableinterop.variable_value.CommonArrayValue\n\nConvert a string into a CommonValueArray object.\n\nThe valueify_action() method allows converting the value arbitrarily, so both\nAPI and display strings can use this method.\n\nParameters\n\nvalue\n\npython:str\n\nString value to parse.\n\ncreate_action\n\nCallable[[Any], CommonArrayValue]\n\nAction that takes either a shape or a list of initial values and creates a new\narray of the correct type.\n\nvalueify_action\n\nCallable[[python:str], IVariableValue]\n\nAction used to parse each individual value to the correct type.\n\nReturns\n\nCommonArrayValue\n\nA new array object with the parsed values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata.html#booleanmetadata",
        "title": "BooleanMetadata",
        "section": "BooleanMetadata",
        "text": "Bases: ansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata\nProvides metadata for BOOLEAN and BOOLEAN_ARRAY variable types.\nBooleanMetadata\nBooleanMetadata\nansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata\nBOOLEAN\nBOOLEAN_ARRAY"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata.html#ansys.tools.variableinterop.scalar_metadata.BooleanMetadata",
        "title": "BooleanMetadata > BooleanMetadata > BooleanMetadata",
        "section": "BooleanMetadata > BooleanMetadata",
        "text": "class ansys.tools.variableinterop.scalar_metadata.BooleanMetadata\n\nBases: ansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata\n\nProvides metadata for BOOLEAN and BOOLEAN_ARRAY variable types.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata.html#overview",
        "title": "BooleanMetadata > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nequals\nDetermine if the object is equal to the metadata.\nvariable_type\nVariable type of the object.\n__eq__\nDetermine if the object is equal to the metadata.\nOverview\naccept\nequals\nvariable_type\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata.html#import-detail",
        "title": "BooleanMetadata > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata.html#property-detail",
        "title": "BooleanMetadata > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata.html#BooleanMetadata.variable_type",
        "title": "BooleanMetadata > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property BooleanMetadata.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata.html#method-detail",
        "title": "BooleanMetadata > Method detail",
        "section": "Method detail",
        "text": "Determine if the object is equal to the metadata.\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nDetermine if the object is equal to the metadata.\nOther object to compare this object to.\nTrue if the metadata objects are equal, False otherwise.\nMethod detail\nIVariableMetadataVisitor\nT\nT\nAny\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata.html#BooleanMetadata.__eq__",
        "title": "BooleanMetadata > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "BooleanMetadata.__eq__(other)\n\nDetermine if the object is equal to the metadata.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata.html#BooleanMetadata.accept",
        "title": "BooleanMetadata > Method detail > accept",
        "section": "Method detail > accept",
        "text": "BooleanMetadata.accept(visitor: ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor[ansys.tools.variableinterop.ivariablemetadata_visitor.T]) -> ansys.tools.variableinterop.ivariablemetadata_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableMetadataVisitor[T]\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/BooleanMetadata.html#BooleanMetadata.equals",
        "title": "BooleanMetadata > Method detail > equals",
        "section": "Method detail > equals",
        "text": "BooleanMetadata.equals(other: Any) -> bool\n\nDetermine if the object is equal to the metadata.\n\nParameters\n\nother\n\nAny\n\nOther object to compare this object to.\n\nReturns\n\nbool\n\nTrue if the metadata objects are equal, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#commonvariablemetadata",
        "title": "CommonVariableMetadata",
        "section": "CommonVariableMetadata",
        "text": "Bases: abc.ABC\nProvides metadata common to all variables.\nWhile users may have additional metadata, this core set is defined by Ansys\ninteroperability guidelines to allow a common understanding between products of some\nhigh-use properties. These guidelines do not exclude defining additional or more\nspecific metadata as needed.\nCommonVariableMetadata\nCommonVariableMetadata\nabc.ABC"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#ansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata",
        "title": "CommonVariableMetadata > CommonVariableMetadata > CommonVariableMetadata",
        "section": "CommonVariableMetadata > CommonVariableMetadata",
        "text": "class ansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata\n\nBases: abc.ABC\n\nProvides metadata common to all variables.\n\nWhile users may have additional metadata, this core set is defined by Ansys\ninteroperability guidelines to allow a common understanding between products of some\nhigh-use properties. These guidelines do not exclude defining additional or more\nspecific metadata as needed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#overview",
        "title": "CommonVariableMetadata > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nequals\nDetermine if the object is equal to the metadata.\nclone\nGet a deep copy of the metadata.\nget_default_value\nGet the default value that should be used for a variable described by this\nruntime_convert\nConvert the value of the variable to the appropriate type for this metadata.\ndescription\nDescription of the variable.\ncustom_metadata\nCustom metadata stored in a dictionary.\nvariable_type\nVariable type of the object.\n__eq__\nDetermine if the object is equal to the metadata.\nOverview\naccept\nequals\nclone\nget_default_value\nruntime_convert\ndescription\ncustom_metadata\nvariable_type\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#import-detail",
        "title": "CommonVariableMetadata > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#property-detail",
        "title": "CommonVariableMetadata > Property detail",
        "section": "Property detail",
        "text": "Description of the variable.\nCustom metadata stored in a dictionary.\nVariable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#CommonVariableMetadata.description",
        "title": "CommonVariableMetadata > Property detail > description",
        "section": "Property detail > description",
        "text": "property CommonVariableMetadata.description: str\n\nDescription of the variable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#CommonVariableMetadata.custom_metadata",
        "title": "CommonVariableMetadata > Property detail > custom_metadata",
        "section": "Property detail > custom_metadata",
        "text": "property CommonVariableMetadata.custom_metadata: Dict[str, ansys.tools.variableinterop.variable_value.IVariableValue]\n\nCustom metadata stored in a dictionary.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#CommonVariableMetadata.variable_type",
        "title": "CommonVariableMetadata > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property CommonVariableMetadata.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nAbstractmethod\n\n\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#method-detail",
        "title": "CommonVariableMetadata > Method detail",
        "section": "Method detail",
        "text": "Determine if the object is equal to the metadata.\nDetermine if the object is equal to the metadata.\nOther object to compare this object to.\nTrue if the metadata objects are equal, False otherwise.\nGet a deep copy of the metadata.\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nGet the default value that should be used for a variable described by this\nmetadata.\nThe metadata may have set the lower bound, upper bound, or\nenumerated values, which restricts what values are valid. This\nmethod selects a valid default value.\nIf the type’s default value (such as 0 or an empty string) is a\nvalid value for the metadata, use it.\nIf the metadata has enumerated values, select the first\nenumerated value that is valid per the other restrictions.\nIf the metadata has a lower bound and it is valid, use it.\nIf metadata does not have a lower bound but does have an\nupper bound, use the upper bound.\nIf no value is valid, use the type’s default value.\nConvert the value of the variable to the appropriate type for this metadata.\nValue to convert\nValue converted to the appropriate type.\nMethod detail\nAny\nTrue\nFalse\nIVariableMetadataVisitor\nT\nT\n0\nIVariableValue\nIVariableValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#CommonVariableMetadata.__eq__",
        "title": "CommonVariableMetadata > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "CommonVariableMetadata.__eq__(other)\n\nDetermine if the object is equal to the metadata.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#CommonVariableMetadata.equals",
        "title": "CommonVariableMetadata > Method detail > equals",
        "section": "Method detail > equals",
        "text": "CommonVariableMetadata.equals(other: Any) -> bool\n\nDetermine if the object is equal to the metadata.\n\nParameters\n\nother\n\nAny\n\nOther object to compare this object to.\n\nReturns\n\nbool\n\nTrue if the metadata objects are equal, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#CommonVariableMetadata.clone",
        "title": "CommonVariableMetadata > Method detail > clone",
        "section": "Method detail > clone",
        "text": "CommonVariableMetadata.clone() -> CommonVariableMetadata\n\nGet a deep copy of the metadata.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#CommonVariableMetadata.accept",
        "title": "CommonVariableMetadata > Method detail > accept",
        "section": "Method detail > accept",
        "text": "abstract CommonVariableMetadata.accept(visitor: ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor[ansys.tools.variableinterop.ivariablemetadata_visitor.T]) -> ansys.tools.variableinterop.ivariablemetadata_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableMetadataVisitor[T]\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#CommonVariableMetadata.get_default_value",
        "title": "CommonVariableMetadata > Method detail > get_default_value",
        "section": "Method detail > get_default_value",
        "text": "CommonVariableMetadata.get_default_value() -> ansys.tools.variableinterop.variable_value.IVariableValue\n\nGet the default value that should be used for a variable described by this\nmetadata.\n\nThe metadata may have set the lower bound, upper bound, or\nenumerated values, which restricts what values are valid. This\nmethod selects a valid default value.\n\nIf the type’s default value (such as 0 or an empty string) is a\nvalid value for the metadata, use it.\n\nIf the metadata has enumerated values, select the first\nenumerated value that is valid per the other restrictions.\n\nIf the metadata has a lower bound and it is valid, use it.\n\nIf metadata does not have a lower bound but does have an\nupper bound, use the upper bound.\n\nIf no value is valid, use the type’s default value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/CommonVariableMetadata.html#CommonVariableMetadata.runtime_convert",
        "title": "CommonVariableMetadata > Method detail > runtime_convert",
        "section": "Method detail > runtime_convert",
        "text": "CommonVariableMetadata.runtime_convert(source: ansys.tools.variableinterop.variable_value.IVariableValue) -> ansys.tools.variableinterop.variable_value.IVariableValue\n\nConvert the value of the variable to the appropriate type for this metadata.\n\nParameters\n\nsource\n\nIVariableValue\n\nValue to convert\n\nReturns\n\nIVariableValue\n\nValue converted to the appropriate type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata.html#stringmetadata",
        "title": "StringMetadata",
        "section": "StringMetadata",
        "text": "Bases: ansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata\nProvides common metadata for STRING and STRING_ARRAY variable types.\nStringMetadata\nStringMetadata\nansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata\nSTRING\nSTRING_ARRAY"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata.html#ansys.tools.variableinterop.scalar_metadata.StringMetadata",
        "title": "StringMetadata > StringMetadata > StringMetadata",
        "section": "StringMetadata > StringMetadata",
        "text": "class ansys.tools.variableinterop.scalar_metadata.StringMetadata\n\nBases: ansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata\n\nProvides common metadata for STRING and STRING_ARRAY variable types.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata.html#overview",
        "title": "StringMetadata > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nequals\nDetermine if the object is equal to the metadata.\nvariable_type\nVariable type of the object.\nenumerated_values\nList of enumerated values.\nenumerated_aliases\nList of enumerated aliases.\n__eq__\nDetermine if the object is equal to the metadata.\nOverview\naccept\nequals\nvariable_type\nenumerated_values\nenumerated_aliases\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata.html#import-detail",
        "title": "StringMetadata > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata.html#property-detail",
        "title": "StringMetadata > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nList of enumerated values.\nThis list may be empty to imply that there are no enumerated values.\nList of enumerated values.\nList of enumerated aliases.\nThis list may be empty to imply that there are no enumerated aliases.\nList of enumerated aliases.\nProperty detail\nVariableType\nList\nStringValue\nList\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata.html#StringMetadata.variable_type",
        "title": "StringMetadata > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property StringMetadata.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata.html#StringMetadata.enumerated_values",
        "title": "StringMetadata > Property detail > enumerated_values",
        "section": "Property detail > enumerated_values",
        "text": "property StringMetadata.enumerated_values: List[ansys.tools.variableinterop.scalar_values.StringValue]\n\nList of enumerated values.\n\nThis list may be empty to imply that there are no enumerated values.\n\nReturns\n\nList[StringValue]\n\nList of enumerated values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata.html#StringMetadata.enumerated_aliases",
        "title": "StringMetadata > Property detail > enumerated_aliases",
        "section": "Property detail > enumerated_aliases",
        "text": "property StringMetadata.enumerated_aliases: List[str]\n\nList of enumerated aliases.\n\nThis list may be empty to imply that there are no enumerated aliases.\n\nReturns\n\nList[python:str]\n\nList of enumerated aliases.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata.html#method-detail",
        "title": "StringMetadata > Method detail",
        "section": "Method detail",
        "text": "Determine if the object is equal to the metadata.\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nDetermine if the object is equal to the metadata.\nOther object to compare this object to.\nTrue if the metadata objects are equal, False otherwise.\nMethod detail\nIVariableMetadataVisitor\nT\nT\nAny\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata.html#StringMetadata.__eq__",
        "title": "StringMetadata > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "StringMetadata.__eq__(other)\n\nDetermine if the object is equal to the metadata.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata.html#StringMetadata.accept",
        "title": "StringMetadata > Method detail > accept",
        "section": "Method detail > accept",
        "text": "StringMetadata.accept(visitor: ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor[ansys.tools.variableinterop.ivariablemetadata_visitor.T]) -> ansys.tools.variableinterop.ivariablemetadata_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableMetadataVisitor[T]\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/StringMetadata.html#StringMetadata.equals",
        "title": "StringMetadata > Method detail > equals",
        "section": "Method detail > equals",
        "text": "StringMetadata.equals(other: Any) -> bool\n\nDetermine if the object is equal to the metadata.\n\nParameters\n\nother\n\nAny\n\nOther object to compare this object to.\n\nReturns\n\nbool\n\nTrue if the metadata objects are equal, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_scope/index",
        "href": "api/ansys/tools/variableinterop/file_scope/index.html#the-file_scopepy-module",
        "title": "The file_scope.py module",
        "section": "The file_scope.py module",
        "text": "The file_scope.py module\nfile_scope.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_scope/index",
        "href": "api/ansys/tools/variableinterop/file_scope/index.html#summary",
        "title": "The file_scope.py module > Summary",
        "section": "Summary",
        "text": "FileScope\nProvides an abstract base for file scopes.\nSummary\nFileScope"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_scope/index",
        "href": "api/ansys/tools/variableinterop/file_scope/index.html#description",
        "title": "The file_scope.py module > Description",
        "section": "Description",
        "text": "Implements the FileScope class.\nDescription\nFileScope"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/index",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/index.html#the-numeric_metadatapy-module",
        "title": "The numeric_metadata.py module",
        "section": "The numeric_metadata.py module",
        "text": "The numeric_metadata.py module\nnumeric_metadata.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/index",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/index.html#summary",
        "title": "The numeric_metadata.py module > Summary",
        "section": "Summary",
        "text": "NumericMetadata\nProvides a generic base for all numeric metadata implementations.\nSummary\nNumericMetadata"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/index",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/index.html#description",
        "title": "The numeric_metadata.py module > Description",
        "section": "Description",
        "text": "Defines the NumericMetadata class.\nDescription\nNumericMetadata"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/scalar_value_conversion/index.html#the-scalar_value_conversionpy-module",
        "title": "The scalar_value_conversion.py module",
        "section": "The scalar_value_conversion.py module",
        "text": "The scalar_value_conversion.py module\nscalar_value_conversion.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/scalar_value_conversion/index.html#summary",
        "title": "The scalar_value_conversion.py module > Summary",
        "section": "Summary",
        "text": "to_boolean_value\nConvert the given value to a BooleanValue type.\nto_integer_value\nConvert the given value to an IntegerValue type.\nto_real_value\nConvert the given value to a RealValue type.\nto_string_value\nConvert the given value to a StringValue type.\nSummary\nto_boolean_value\nBooleanValue\nto_integer_value\nIntegerValue\nto_real_value\nRealValue\nto_string_value\nStringValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/scalar_value_conversion/index.html#description",
        "title": "The scalar_value_conversion.py module > Description",
        "section": "Description",
        "text": "Defines scalar value visitors.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/scalar_value_conversion/index.html#module-detail",
        "title": "The scalar_value_conversion.py module > Module detail",
        "section": "Module detail",
        "text": "Convert the given value to a BooleanValue type.\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\nOther value to convert to a BooleanValue type.\nValue as a BooleanValue type.\nConvert the given value to an IntegerValue type.\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\nOther value to convert to an IntegerValue type.\nValue as an IntegerValue type.\nConvert the given value to a RealValue type.\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\nOther value to convert to a RealValue type.\nValue as a RealValue type.\nConvert the given value to a StringValue type.\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\nOther value to convert to a StringValue type.\nValue as a StringValue type.\nModule detail\nBooleanValue\nIVariableValue\nBooleanValue\nBooleanValue\nBooleanValue\nIntegerValue\nIVariableValue\nIntegerValue\nIntegerValue\nIntegerValue\nRealValue\nIncompatibleTypesException\nIVariableValue\nRealValue\nRealValue\nRealValue\nStringValue\nIVariableValue\nStringValue\nStringValue\nStringValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/scalar_value_conversion/index.html#scalar_value_conversion.to_boolean_value",
        "title": "The scalar_value_conversion.py module > Module detail > to_boolean_value",
        "section": "Module detail > to_boolean_value",
        "text": "scalar_value_conversion.to_boolean_value(other: ansys.tools.variableinterop.variable_value.IVariableValue) -> ansys.tools.variableinterop.scalar_values.BooleanValue\n\nConvert the given value to a BooleanValue type.\n\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\n\nParameters\n\nother\n\nIVariableValue\n\nOther value to convert to a BooleanValue type.\n\nReturns\n\nBooleanValue\n\nValue as a BooleanValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/scalar_value_conversion/index.html#scalar_value_conversion.to_integer_value",
        "title": "The scalar_value_conversion.py module > Module detail > to_integer_value",
        "section": "Module detail > to_integer_value",
        "text": "scalar_value_conversion.to_integer_value(other: ansys.tools.variableinterop.variable_value.IVariableValue) -> ansys.tools.variableinterop.scalar_values.IntegerValue\n\nConvert the given value to an IntegerValue type.\n\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\n\nParameters\n\nother\n\nIVariableValue\n\nOther value to convert to an IntegerValue type.\n\nReturns\n\nIntegerValue\n\nValue as an IntegerValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/scalar_value_conversion/index.html#scalar_value_conversion.to_real_value",
        "title": "The scalar_value_conversion.py module > Module detail > to_real_value",
        "section": "Module detail > to_real_value",
        "text": "scalar_value_conversion.to_real_value(other: ansys.tools.variableinterop.variable_value.IVariableValue) -> ansys.tools.variableinterop.scalar_values.RealValue\n\nConvert the given value to a RealValue type.\n\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\n\nParameters\n\nother\n\nIVariableValue\n\nOther value to convert to a RealValue type.\n\nReturns\n\nRealValue\n\nValue as a RealValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/scalar_value_conversion/index.html#scalar_value_conversion.to_string_value",
        "title": "The scalar_value_conversion.py module > Module detail > to_string_value",
        "section": "Module detail > to_string_value",
        "text": "scalar_value_conversion.to_string_value(other: ansys.tools.variableinterop.variable_value.IVariableValue) -> ansys.tools.variableinterop.scalar_values.StringValue\n\nConvert the given value to a StringValue type.\n\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\n\nParameters\n\nother\n\nIVariableValue\n\nOther value to convert to a StringValue type.\n\nReturns\n\nStringValue\n\nValue as a StringValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/index",
        "href": "api/index.html#api-reference",
        "title": "API reference",
        "section": "API reference",
        "text": "This section describes pyansys-tools-variableinterop endpoints, their capabilities, and how\nto interact with them programmatically.\nAPI reference"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/index",
        "href": "api/ansys/tools/variableinterop/variable_type/index.html#the-variable_typepy-module",
        "title": "The variable_type.py module",
        "section": "The variable_type.py module",
        "text": "The variable_type.py module\nvariable_type.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/index",
        "href": "api/ansys/tools/variableinterop/variable_type/index.html#summary",
        "title": "The variable_type.py module > Summary",
        "section": "Summary",
        "text": "VariableType\nProvides an enumeration of the possible variable types.\nSummary\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/index",
        "href": "api/ansys/tools/variableinterop/variable_type/index.html#description",
        "title": "The variable_type.py module > Description",
        "section": "Description",
        "text": "Defines the VariableType class.\nDescription\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/array_value_conversion/index.html#the-array_value_conversionpy-module",
        "title": "The array_value_conversion.py module",
        "section": "The array_value_conversion.py module",
        "text": "The array_value_conversion.py module\narray_value_conversion.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/array_value_conversion/index.html#summary",
        "title": "The array_value_conversion.py module > Summary",
        "section": "Summary",
        "text": "to_boolean_array_value\nConvert the given value to a BooleanArrayValue type.\nto_integer_array_value\nConvert the given value to an IntegerArrayValue type.\nto_real_array_value\nConvert the given value to a RealArrayValue type.\nto_string_array_value\nConvert the given value to a StringArrayValue type.\nSummary\nto_boolean_array_value\nBooleanArrayValue\nto_integer_array_value\nIntegerArrayValue\nto_real_array_value\nRealArrayValue\nto_string_array_value\nStringArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/array_value_conversion/index.html#description",
        "title": "The array_value_conversion.py module > Description",
        "section": "Description",
        "text": "Defines array value visitors.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/array_value_conversion/index.html#module-detail",
        "title": "The array_value_conversion.py module > Module detail",
        "section": "Module detail",
        "text": "Convert the given value to a BooleanArrayValue type.\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\nOther value to convert to a BooleanArrayValue type.\nValue as a BooleanArrayValue type.\nConvert the given value to an IntegerArrayValue type.\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\nOther value to convert to an IntegerArrayValue type.\nValue as an IntegerArrayValue type.\nConvert the given value to a RealArrayValue type.\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\nOther value to convert to a RealArrayValue type.\nValue as a RealArrayValue type.\nConvert the given value to a StringArrayValue type.\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\nOther value to convert to a StringArrayValue type.\nValue as a StringArrayValue type.\nModule detail\nBooleanArrayValue\nIncompatibleTypesException\nIVariableValue\nBooleanArrayValue\nBooleanArrayValue\nBooleanArrayValue\nIntegerArrayValue\nIncompatibleTypesException\nIVariableValue\nIntegerArrayValue\nIntegerArrayValue\nIntegerArrayValue\nRealArrayValue\nIncompatibleTypesException\nIVariableValue\nRealArrayValue\nRealArrayValue\nRealArrayValue\nStringArrayValue\nIncompatibleTypesException\nIVariableValue\nStringArrayValue\nStringArrayValue\nStringArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/array_value_conversion/index.html#array_value_conversion.to_boolean_array_value",
        "title": "The array_value_conversion.py module > Module detail > to_boolean_array_value",
        "section": "Module detail > to_boolean_array_value",
        "text": "array_value_conversion.to_boolean_array_value(other: ansys.tools.variableinterop.variable_value.IVariableValue) -> ansys.tools.variableinterop.array_values.BooleanArrayValue\n\nConvert the given value to a BooleanArrayValue type.\n\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\n\nParameters\n\nother\n\nIVariableValue\n\nOther value to convert to a BooleanArrayValue type.\n\nReturns\n\nBooleanArrayValue\n\nValue as a BooleanArrayValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/array_value_conversion/index.html#array_value_conversion.to_integer_array_value",
        "title": "The array_value_conversion.py module > Module detail > to_integer_array_value",
        "section": "Module detail > to_integer_array_value",
        "text": "array_value_conversion.to_integer_array_value(other: ansys.tools.variableinterop.variable_value.IVariableValue) -> ansys.tools.variableinterop.array_values.IntegerArrayValue\n\nConvert the given value to an IntegerArrayValue type.\n\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\n\nParameters\n\nother\n\nIVariableValue\n\nOther value to convert to an IntegerArrayValue type.\n\nReturns\n\nIntegerArrayValue\n\nValue as an IntegerArrayValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/array_value_conversion/index.html#array_value_conversion.to_real_array_value",
        "title": "The array_value_conversion.py module > Module detail > to_real_array_value",
        "section": "Module detail > to_real_array_value",
        "text": "array_value_conversion.to_real_array_value(other: ansys.tools.variableinterop.variable_value.IVariableValue) -> ansys.tools.variableinterop.array_values.RealArrayValue\n\nConvert the given value to a RealArrayValue type.\n\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\n\nParameters\n\nother\n\nIVariableValue\n\nOther value to convert to a RealArrayValue type.\n\nReturns\n\nRealArrayValue\n\nValue as a RealArrayValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_value_conversion/index",
        "href": "api/ansys/tools/variableinterop/array_value_conversion/index.html#array_value_conversion.to_string_array_value",
        "title": "The array_value_conversion.py module > Module detail > to_string_array_value",
        "section": "Module detail > to_string_array_value",
        "text": "array_value_conversion.to_string_array_value(other: ansys.tools.variableinterop.variable_value.IVariableValue) -> ansys.tools.variableinterop.array_values.StringArrayValue\n\nConvert the given value to a StringArrayValue type.\n\nThe conversion is performed according to the type interoperability specifications.\nNote that some conversions are lossy (resulting in a loss of precision),\nand some conversions are not possible (raises IncompatibleTypesException).\n\nParameters\n\nother\n\nIVariableValue\n\nOther value to convert to a StringArrayValue type.\n\nReturns\n\nStringArrayValue\n\nValue as a StringArrayValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/StringValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/StringValue.html#stringvalue",
        "title": "StringValue",
        "section": "StringValue",
        "text": "Bases: numpy.str_, ansys.tools.variableinterop.variable_value.IVariableValue\nStores a value as an IVariableValue variable type.\nIn Python, the IntegerValue type is implemented by extending NumPy’s str\\_ type.\nThis means that they decay naturally into numpy.str\\_ objects when used with other\ntypes of operators. It also means that they inherit many of the NumPy behaviors, which\nmay be slightly different from the behaviors specified in the variable interop standards.\nFor example, when converting from string to integer, values parseable as floating-\npoint numbers are rejected instead of parsed as such and then rounded. If you want the\nvariable interop standard conversions, use the from_api_string() method on any given\nvariable interop type to get an instance of that type, which should decompose\nnaturally to the analogous NumPy type.\nStringValue\nStringValue\nnumpy.str_\nansys.tools.variableinterop.variable_value.IVariableValue\nIVariableValue\nIntegerValue\nstr\\_\nnumpy.str\\_\nfrom_api_string()"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/StringValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/StringValue.html#ansys.tools.variableinterop.scalar_values.StringValue",
        "title": "StringValue > StringValue > StringValue",
        "section": "StringValue > StringValue",
        "text": "class ansys.tools.variableinterop.scalar_values.StringValue\n\nBases: numpy.str_, ansys.tools.variableinterop.variable_value.IVariableValue\n\nStores a value as an IVariableValue variable type.\n\nIn Python, the IntegerValue type is implemented by extending NumPy’s str\\_ type.\nThis means that they decay naturally into numpy.str\\_ objects when used with other\ntypes of operators. It also means that they inherit many of the NumPy behaviors, which\nmay be slightly different from the behaviors specified in the variable interop standards.\nFor example, when converting from string to integer, values parseable as floating-\npoint numbers are rejected instead of parsed as such and then rounded. If you want the\nvariable interop standard conversions, use the from_api_string() method on any given\nvariable interop type to get an instance of that type, which should decompose\nnaturally to the analogous NumPy type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/StringValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/StringValue.html#overview",
        "title": "StringValue > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nto_api_string\nConvert the value to an API string.\nto_display_string\nConvert the value to a formatted string.\nvariable_type\nVariable type of the object.\nfrom_api_string\nConvert an API string back to a string value.\nOverview\naccept\nto_api_string\nto_display_string\nvariable_type\nfrom_api_string"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/StringValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/StringValue.html#import-detail",
        "title": "StringValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/StringValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/StringValue.html#property-detail",
        "title": "StringValue > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/StringValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/StringValue.html#StringValue.variable_type",
        "title": "StringValue > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property StringValue.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/StringValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/StringValue.html#method-detail",
        "title": "StringValue > Method detail",
        "section": "Method detail",
        "text": "Invoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nConvert the value to an API string.\nString appropriate for use in files and APIs.\nConvert an API string back to a string value.\nThe string is stored exactly as specified. No escaping is performed\nas with the from_formatted string() method.\nString to convert.\nConvert the value to a formatted string.\nLocale to format the string in.\nString appropriate for use in user-facing areas.\nMethod detail\nIVariableValueVisitor\nT\npython:str\nfrom_formatted string()\npython:str\npython:str\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/StringValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/StringValue.html#StringValue.accept",
        "title": "StringValue > Method detail > accept",
        "section": "Method detail > accept",
        "text": "StringValue.accept(visitor: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[ansys.tools.variableinterop.ivariable_visitor.T]) -> ansys.tools.variableinterop.ivariable_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableValueVisitor\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/StringValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/StringValue.html#StringValue.to_api_string",
        "title": "StringValue > Method detail > to_api_string",
        "section": "Method detail > to_api_string",
        "text": "StringValue.to_api_string(context: ansys.tools.variableinterop.isave_context.ISaveContext | None = None) -> str\n\nConvert the value to an API string.\n\nReturns\n\npython:str\n\nString appropriate for use in files and APIs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/StringValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/StringValue.html#StringValue.from_api_string",
        "title": "StringValue > Method detail > from_api_string",
        "section": "Method detail > from_api_string",
        "text": "static StringValue.from_api_string(value: str) -> StringValue\n\nConvert an API string back to a string value.\n\nThe string is stored exactly as specified. No escaping is performed\nas with the from_formatted string() method.\n\nParameters\n\nvalue\n\npython:str\n\nString to convert.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/StringValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/StringValue.html#StringValue.to_display_string",
        "title": "StringValue > Method detail > to_display_string",
        "section": "Method detail > to_display_string",
        "text": "StringValue.to_display_string(locale_name: str) -> str\n\nConvert the value to a formatted string.\n\nParameters\n\nlocale_name\n\npython:str\n\nLocale to format the string in.\n\nReturns\n\npython:str\n\nString appropriate for use in user-facing areas.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ISaveContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ISaveContext.html#isavecontext",
        "title": "ISaveContext",
        "section": "ISaveContext",
        "text": "Bases: contextlib.AbstractContextManager, abc.ABC\nDefines an abstraction for a save medium.\nThis interface was defined to separate the concerns of being able to save large\nassociated content in other transfer mediums. It allows out-of-bound data to be\ntransferred. Examples include saving to a ZIP file or using an SCP side-channel on\nan SSH connection to send files or other large data objects.\nISaveContext\nISaveContext\ncontextlib.AbstractContextManager\nabc.ABC"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ISaveContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ISaveContext.html#ansys.tools.variableinterop.isave_context.ISaveContext",
        "title": "ISaveContext > ISaveContext > ISaveContext",
        "section": "ISaveContext > ISaveContext",
        "text": "class ansys.tools.variableinterop.isave_context.ISaveContext\n\nBases: contextlib.AbstractContextManager, abc.ABC\n\nDefines an abstraction for a save medium.\n\nThis interface was defined to separate the concerns of being able to save large\nassociated content in other transfer mediums. It allows out-of-bound data to be\ntransferred. Examples include saving to a ZIP file or using an SCP side-channel on\nan SSH connection to send files or other large data objects.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ISaveContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ISaveContext.html#overview",
        "title": "ISaveContext > Overview",
        "section": "Overview",
        "text": "save_file\nSave a file to the save medium.\nflush\nFlush any changes in the context to the underlying stream or file.\nclose\nClose the context.\n__exit__\nMagic method exit.\nOverview\nsave_file\nflush\nclose\n__exit__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ISaveContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ISaveContext.html#import-detail",
        "title": "ISaveContext > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ISaveContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ISaveContext.html#method-detail",
        "title": "ISaveContext > Method detail",
        "section": "Method detail",
        "text": "Magic method exit.\nSave a file to the save medium.\nIt is up to the ISaveContext implementation to decide how or when to send the actual\ndata. Some ISaveContext implementations may merely collect metadata as part of this\ncall and send the data on flush.\nFile on disk to send or include in the save.\nUnique ID for the file. The default value is None, in which case an ID\nis automatically generated and returned. This ID can be used with an equivalent\nILoadContext instance to load the contents on deserialization.\nID, either the one provided or the one otherwise generated.\nFlush any changes in the context to the underlying stream or file.\nClose the context.\nMethod detail\nISaveContext\nISaveContext\nUnion\nPathLike\npython:str\nOptional\npython:str\noptional\nNone\nILoadContext\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ISaveContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ISaveContext.html#ISaveContext.__exit__",
        "title": "ISaveContext > Method detail > __exit__",
        "section": "Method detail > __exit__",
        "text": "ISaveContext.__exit__(__exc_type: Type[BaseException] | None, __exc_value: BaseException | None, __traceback: types.TracebackType | None) -> bool | None\n\nMagic method exit.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ISaveContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ISaveContext.html#ISaveContext.save_file",
        "title": "ISaveContext > Method detail > save_file",
        "section": "Method detail > save_file",
        "text": "abstract ISaveContext.save_file(source: os.PathLike | str, content_id: str | None = None) -> str\n\nSave a file to the save medium.\n\nIt is up to the ISaveContext implementation to decide how or when to send the actual\ndata. Some ISaveContext implementations may merely collect metadata as part of this\ncall and send the data on flush.\n\nParameters\n\nsource\n\nUnion[PathLike, python:str]\n\nFile on disk to send or include in the save.\n\ncontent_id\n\nOptional[python:str], optional\n\nUnique ID for the file. The default value is None, in which case an ID\nis automatically generated and returned. This ID can be used with an equivalent\nILoadContext instance to load the contents on deserialization.\n\nReturns\n\npython:str\n\nID, either the one provided or the one otherwise generated.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ISaveContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ISaveContext.html#ISaveContext.flush",
        "title": "ISaveContext > Method detail > flush",
        "section": "Method detail > flush",
        "text": "abstract ISaveContext.flush() -> None\n\nFlush any changes in the context to the underlying stream or file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ISaveContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ISaveContext.html#ISaveContext.close",
        "title": "ISaveContext > Method detail > close",
        "section": "Method detail > close",
        "text": "abstract ISaveContext.close() -> None\n\nClose the context.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/index",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/index.html#the-non_managing_file_scopepy-module",
        "title": "The non_managing_file_scope.py module",
        "section": "The non_managing_file_scope.py module",
        "text": "The non_managing_file_scope.py module\nnon_managing_file_scope.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/index",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/index.html#summary",
        "title": "The non_managing_file_scope.py module > Summary",
        "section": "Summary",
        "text": "NonManagingFileScope\nProvides a simple file scope implementation that performs no management.\nSummary\nNonManagingFileScope"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/index",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/index.html#description",
        "title": "The non_managing_file_scope.py module > Description",
        "section": "Description",
        "text": "Defines the NonManagingFileScope class.\nDescription\nNonManagingFileScope"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata.html#integerarraymetadata",
        "title": "IntegerArrayMetadata",
        "section": "IntegerArrayMetadata",
        "text": "Bases: ansys.tools.variableinterop.scalar_metadata.IntegerMetadata\nProvides metadata for the IntegerArrayValue variable type.\nIntegerArrayMetadata\nIntegerArrayMetadata\nansys.tools.variableinterop.scalar_metadata.IntegerMetadata\nIntegerArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata.html#ansys.tools.variableinterop.array_metadata.IntegerArrayMetadata",
        "title": "IntegerArrayMetadata > IntegerArrayMetadata > IntegerArrayMetadata",
        "section": "IntegerArrayMetadata > IntegerArrayMetadata",
        "text": "class ansys.tools.variableinterop.array_metadata.IntegerArrayMetadata\n\nBases: ansys.tools.variableinterop.scalar_metadata.IntegerMetadata\n\nProvides metadata for the IntegerArrayValue variable type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata.html#overview",
        "title": "IntegerArrayMetadata > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nvariable_type\nVariable type of the object.\nOverview\naccept\nvariable_type"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata.html#import-detail",
        "title": "IntegerArrayMetadata > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata.html#property-detail",
        "title": "IntegerArrayMetadata > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata.html#IntegerArrayMetadata.variable_type",
        "title": "IntegerArrayMetadata > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property IntegerArrayMetadata.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata.html#method-detail",
        "title": "IntegerArrayMetadata > Method detail",
        "section": "Method detail",
        "text": "Invoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nMethod detail\nIVariableMetadataVisitor\nT\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/IntegerArrayMetadata.html#IntegerArrayMetadata.accept",
        "title": "IntegerArrayMetadata > Method detail > accept",
        "section": "Method detail > accept",
        "text": "IntegerArrayMetadata.accept(visitor: ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor[ansys.tools.variableinterop.ivariablemetadata_visitor.T]) -> ansys.tools.variableinterop.ivariablemetadata_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableMetadataVisitor[T]\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#stringarrayvalue",
        "title": "StringArrayValue",
        "section": "StringArrayValue",
        "text": "Bases: ansys.tools.variableinterop.variable_value.CommonArrayValue[numpy.str_]\nStores a value as a StringArrayValue variable type.\nIn Python, the StringArrayValue type is implemented by extending NumPy’s ndarray type.\nThis means that they decay naturally into numpy.ndarray objects when using NumPy’s\narray operators.\nStringArrayValue\nStringArrayValue\nansys.tools.variableinterop.variable_value.CommonArrayValue\nnumpy.str_\nStringArrayValue\nStringArrayValue\nndarray\nnumpy.ndarray"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#ansys.tools.variableinterop.array_values.StringArrayValue",
        "title": "StringArrayValue > StringArrayValue > StringArrayValue",
        "section": "StringArrayValue > StringArrayValue",
        "text": "class ansys.tools.variableinterop.array_values.StringArrayValue\n\nBases: ansys.tools.variableinterop.variable_value.CommonArrayValue[numpy.str_]\n\nStores a value as a StringArrayValue variable type.\n\nIn Python, the StringArrayValue type is implemented by extending NumPy’s ndarray type.\nThis means that they decay naturally into numpy.ndarray objects when using NumPy’s\narray operators.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#overview",
        "title": "StringArrayValue > Overview",
        "section": "Overview",
        "text": "clone\naccept\nto_real_array_value\nConvert the value to a RealArrayValue type.\nto_boolean_array_value\nConvert the value to a BooleanArrayValue type.\nto_integer_array_value\nConvert the value to an IntegerArrayValue type.\nto_api_string\nto_display_string\nvariable_type\nfrom_api_string\nConvert an API-formatted string to a StringArrayValue type.\n__eq__\nOverview\nclone\naccept\nto_real_array_value\nRealArrayValue\nto_boolean_array_value\nBooleanArrayValue\nto_integer_array_value\nIntegerArrayValue\nto_api_string\nto_display_string\nvariable_type\nfrom_api_string\nStringArrayValue\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#import-detail",
        "title": "StringArrayValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#property-detail",
        "title": "StringArrayValue > Property detail",
        "section": "Property detail",
        "text": "Property detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#StringArrayValue.variable_type",
        "title": "StringArrayValue > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property StringArrayValue.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#method-detail",
        "title": "StringArrayValue > Method detail",
        "section": "Method detail",
        "text": "Convert the value to a RealArrayValue type.\nRealArrayValue type with the same values converted to real numbers.\nConvert the value to a BooleanArrayValue type.\nBooleanArrayValue type with the same values converted to Boolean values.\nConvert the value to an IntegerArrayValue type.\nIntegerArrayValue type with the same values converted to integers.\nConvert an API-formatted string to a StringArrayValue type.\nAPI string to parse.\nResult of parsing the StringArrayValue type.\nMethod detail\nRealArrayValue\nRealArrayValue\nRealArrayValue\nBooleanArrayValue\nBooleanArrayValue\nBooleanArrayValue\nIntegerArrayValue\nIntegerArrayValue\nIntegerArrayValue\nStringArrayValue\npython:str\nStringArrayValue\nStringArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#StringArrayValue.__eq__",
        "title": "StringArrayValue > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "StringArrayValue.__eq__(other)\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#StringArrayValue.clone",
        "title": "StringArrayValue > Method detail > clone",
        "section": "Method detail > clone",
        "text": "StringArrayValue.clone() -> StringArrayValue\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#StringArrayValue.accept",
        "title": "StringArrayValue > Method detail > accept",
        "section": "Method detail > accept",
        "text": "StringArrayValue.accept(visitor: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[T]) -> T\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#StringArrayValue.to_real_array_value",
        "title": "StringArrayValue > Method detail > to_real_array_value",
        "section": "Method detail > to_real_array_value",
        "text": "StringArrayValue.to_real_array_value() -> RealArrayValue\n\nConvert the value to a RealArrayValue type.\n\nReturns\n\nRealArrayValue\n\nRealArrayValue type with the same values converted to real numbers.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#StringArrayValue.to_boolean_array_value",
        "title": "StringArrayValue > Method detail > to_boolean_array_value",
        "section": "Method detail > to_boolean_array_value",
        "text": "StringArrayValue.to_boolean_array_value() -> BooleanArrayValue\n\nConvert the value to a BooleanArrayValue type.\n\nReturns\n\nBooleanArrayValue\n\nBooleanArrayValue type with the same values converted to Boolean values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#StringArrayValue.to_integer_array_value",
        "title": "StringArrayValue > Method detail > to_integer_array_value",
        "section": "Method detail > to_integer_array_value",
        "text": "StringArrayValue.to_integer_array_value() -> IntegerArrayValue\n\nConvert the value to an IntegerArrayValue type.\n\nReturns\n\nIntegerArrayValue\n\nIntegerArrayValue type with the same values converted to integers.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#StringArrayValue.to_api_string",
        "title": "StringArrayValue > Method detail > to_api_string",
        "section": "Method detail > to_api_string",
        "text": "StringArrayValue.to_api_string(context: ansys.tools.variableinterop.isave_context.ISaveContext | None = None) -> str\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#StringArrayValue.from_api_string",
        "title": "StringArrayValue > Method detail > from_api_string",
        "section": "Method detail > from_api_string",
        "text": "static StringArrayValue.from_api_string(value: str) -> StringArrayValue\n\nConvert an API-formatted string to a StringArrayValue type.\n\nParameters\n\nvalue\n\npython:str\n\nAPI string to parse.\n\nReturns\n\nStringArrayValue\n\nResult of parsing the StringArrayValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/StringArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/StringArrayValue.html#StringArrayValue.to_display_string",
        "title": "StringArrayValue > Method detail > to_display_string",
        "section": "Method detail > to_display_string",
        "text": "StringArrayValue.to_display_string(locale_name: str) -> str\n\n"
    },
    {
        "objectID": "contributing/index",
        "href": "contributing/index.html#contribute",
        "title": "Contribute",
        "section": "Contribute",
        "text": "Overall guidance on contributing to a PyAnsys library appears in the\nContributing topic\nin the PyAnsys Developer’s Guide. Ensure that you are thoroughly familiar\nwith this guide before attempting to contribute to PyAnsys Tools Variable Interop.\nThe following contribution information is specific to PyAnsys Tools Variable Interop.\nContribute"
    },
    {
        "objectID": "contributing/index",
        "href": "contributing/index.html#installation",
        "title": "Contribute > Installation",
        "section": "Installation",
        "text": "The pyansys-tools-variableinterop package currently supports Python\n3.9 through 3.12 on Windows, MacOS, and Linux.\nYou can install the pyansys-tools-variableinterop package with this command:\nAlternatively, install the latest version from pyansys-tools-variableinterop GitHub with this command:\nFor a local development version, you can create a new virtual environment with this command:\nYou can then activate the virtual environment with the command appropriate for your operating system:\nNext, install the development version of the project with these commands:\nInstallation\npyansys-tools-variableinterop\npyansys-tools-variableinterop"
    },
    {
        "objectID": "contributing/index",
        "href": "contributing/index.html#documentation",
        "title": "Contribute > Documentation",
        "section": "Documentation",
        "text": "Install the required dependencies for the documentation with this command:\nFor building documentation, you run the usual rules provided in the Sphinx Makefile for your operating system:\nDocumentation"
    },
    {
        "objectID": "contributing/index",
        "href": "contributing/index.html#post-issues",
        "title": "Contribute > Post issues",
        "section": "Post issues",
        "text": "Use the PyAnsys Tools Variable Interop Issues page to submit questions,\nreport bugs, and request new features. When possible, use these issue\ntemplates:\nBug report template\nFeature request template\nDocumentation issue template\nExample request template\nIf your issue does not fit into one of these categories, create your own issue.\nTo reach the PyAnsys support team, email pyansys.core@ansys.com.\nPost issues"
    },
    {
        "objectID": "contributing/index",
        "href": "contributing/index.html#testing",
        "title": "Contribute > Testing",
        "section": "Testing",
        "text": "You can install the dependencies required for testing with this command:\nYou can then run the tests via pytest with this command:\nTesting\npytest"
    },
    {
        "objectID": "contributing/index",
        "href": "contributing/index.html#adhere-to-code-style",
        "title": "Contribute > Adhere to code style",
        "section": "Adhere to code style",
        "text": "PyAnsys Tools Variable Interop follows the PEP8 standard as indicated in the PyAnsys Developer’s Guide and implements style checking using\npre-commit.\nTo ensure your code meets minimum code styling standards, run these commands:\nYou can also install this as a pre-commit hook by running this command:\nThis way, it’s not possible for you to push code that fails the style checks:\nAdhere to code style"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/EmptyFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/EmptyFileValue.html#emptyfilevalue",
        "title": "EmptyFileValue",
        "section": "EmptyFileValue",
        "text": "Bases: LocalFileValue\nRepresents an empty file value.\nGenerally speaking, you should not create an instance of this class but instead use\nansys.tools.variableinterop.EMPTY_FILE.\nEmptyFileValue\nEmptyFileValue\nLocalFileValue\nansys.tools.variableinterop.EMPTY_FILE"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/EmptyFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/EmptyFileValue.html#ansys.tools.variableinterop.file_value.EmptyFileValue",
        "title": "EmptyFileValue > EmptyFileValue > EmptyFileValue",
        "section": "EmptyFileValue > EmptyFileValue",
        "text": "class ansys.tools.variableinterop.file_value.EmptyFileValue\n\nBases: LocalFileValue\n\nRepresents an empty file value.\n\nGenerally speaking, you should not create an instance of this class but instead use\nansys.tools.variableinterop.EMPTY_FILE.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/EmptyFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/EmptyFileValue.html#overview",
        "title": "EmptyFileValue > Overview",
        "section": "Overview",
        "text": "write_file\nWrite the file’s contents to a new file.\nget_contents\nRead the contents of the file as a string.\nactual_content_file_name\nGet the path to the file that this FileValue instance wraps.\nOverview\nwrite_file\nget_contents\nactual_content_file_name\nFileValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/EmptyFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/EmptyFileValue.html#import-detail",
        "title": "EmptyFileValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/EmptyFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/EmptyFileValue.html#property-detail",
        "title": "EmptyFileValue > Property detail",
        "section": "Property detail",
        "text": "Get the path to the file that this FileValue instance wraps.\nPathLike to the file.\nProperty detail\nFileValue\nOptional\nPathLike"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/EmptyFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/EmptyFileValue.html#EmptyFileValue.actual_content_file_name",
        "title": "EmptyFileValue > Property detail > actual_content_file_name",
        "section": "Property detail > actual_content_file_name",
        "text": "property EmptyFileValue.actual_content_file_name: os.PathLike | None\n\nGet the path to the file that this FileValue instance wraps.\n\nReturns\n\nOptional[PathLike]\n\nPathLike to the file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/EmptyFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/EmptyFileValue.html#method-detail",
        "title": "EmptyFileValue > Method detail",
        "section": "Method detail",
        "text": "Write the file’s contents to a new file.\nPath to the file to create.\nRead the contents of the file as a string.\nEncoding to use when reading. The default is None, in which case the\ncurrent locale’s encoding is used.\nContents of the file as a string.\nMethod detail\nPathLike\npython:None\nOptional\npython:str\noptional\nNone\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/EmptyFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/EmptyFileValue.html#EmptyFileValue.write_file",
        "title": "EmptyFileValue > Method detail > write_file",
        "section": "Method detail > write_file",
        "text": "abstract EmptyFileValue.write_file(file_name: os.PathLike) -> None\n\nAsync\n\n\n\nWrite the file’s contents to a new file.\n\nParameters\n\nfile_name\n\nPathLike\n\nPath to the file to create.\n\nReturns\n\npython:None\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/EmptyFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/EmptyFileValue.html#EmptyFileValue.get_contents",
        "title": "EmptyFileValue > Method detail > get_contents",
        "section": "Method detail > get_contents",
        "text": "abstract EmptyFileValue.get_contents(encoding: str | None) -> str\n\nAsync\n\n\n\nRead the contents of the file as a string.\n\nParameters\n\nencoding\n\nOptional[python:str], optional\n\nEncoding to use when reading. The default is None, in which case the\ncurrent locale’s encoding is used.\n\nReturns\n\npython:str\n\nContents of the file as a string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/var_type_array_check/index",
        "href": "api/ansys/tools/variableinterop/var_type_array_check/index.html#the-var_type_array_checkpy-module",
        "title": "The var_type_array_check.py module",
        "section": "The var_type_array_check.py module",
        "text": "The var_type_array_check.py module\nvar_type_array_check.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/var_type_array_check/index",
        "href": "api/ansys/tools/variableinterop/var_type_array_check/index.html#summary",
        "title": "The var_type_array_check.py module > Summary",
        "section": "Summary",
        "text": "var_type_is_array\nCheck whether the provided variable type is an array type.\nSummary\nvar_type_is_array"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/var_type_array_check/index",
        "href": "api/ansys/tools/variableinterop/var_type_array_check/index.html#description",
        "title": "The var_type_array_check.py module > Description",
        "section": "Description",
        "text": "Provides a method for checking whether a variable type is an array type.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/var_type_array_check/index",
        "href": "api/ansys/tools/variableinterop/var_type_array_check/index.html#module-detail",
        "title": "The var_type_array_check.py module > Module detail",
        "section": "Module detail",
        "text": "Check whether the provided variable type is an array type.\nVariable type of interest.\nTrue if the specified variable type is an array type, False otherwise.\nModule detail\nVariableType\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/var_type_array_check/index",
        "href": "api/ansys/tools/variableinterop/var_type_array_check/index.html#var_type_array_check.var_type_is_array",
        "title": "The var_type_array_check.py module > Module detail > var_type_is_array",
        "section": "Module detail > var_type_is_array",
        "text": "var_type_array_check.var_type_is_array(vartype: ansys.tools.variableinterop.variable_type.VariableType) -> bool\n\nCheck whether the provided variable type is an array type.\n\nParameters\n\nvartype\n\nVariableType\n\nVariable type of interest.\n\nReturns\n\nbool\n\nTrue if the specified variable type is an array type, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/index",
        "href": "api/ansys/tools/variableinterop/index.html#the-ansystoolsvariableinterop-library",
        "title": "The ansys.tools.variableinterop library",
        "section": "The ansys.tools.variableinterop library",
        "text": "The ansys.tools.variableinterop library\nansys.tools.variableinterop"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/index",
        "href": "api/ansys/tools/variableinterop/index.html#summary",
        "title": "The ansys.tools.variableinterop library > Summary",
        "section": "Summary",
        "text": "utils\nProvides utility methods and classes used by the main package.\napi_serialization\nDefines the ToAPIStringVisitor class.\napi_string_to_value_visitor\nProvides a variable type pseudo-visitor that parses values from strings.\narray_metadata\nDefines array metadata types.\narray_value_conversion\nDefines array value visitors.\narray_values\nDefines all array value implementations of the IVariableValue variable type.\ncommon_variable_metadata\nDefines the CommonVariableMetadata class.\nexceptions\nProvides custom exception types.\nfile_array_metadata\nDefines the FileArrayMetadata class.\nfile_array_value\nDefines the FileArrayValue class.\nfile_metadata\nDefines the FileMetadata class.\nfile_scope\nImplements the FileScope class.\nfile_value\nDefines the FileValue class.\nfrom_formatted_string_visitor\nDefines the FromFormattedStringVisitor class.\nisave_context\nDefines the ISaveContext class.\nivariable_type_pseudovisitor\nDefines and implements a pseudo-visitor pattern for variable types.\nivariable_visitor\nDefines the IVariableValueVisitor class.\nivariablemetadata_visitor\nDefines the IVariableMetadataVisitor class.\nnon_managing_file_scope\nDefines the NonManagingFileScope class.\nnumeric_metadata\nDefines the NumericMetadata class.\nscalar_metadata\nDefines scalar metadata types.\nscalar_value_conversion\nDefines scalar value visitors.\nscalar_values\nDefines all scalar value implementations of the IVariableValue variable type.\nvalue_from_formatted_string\nProvides a method for converting a formatted string to a value.\nvar_type_array_check\nProvides a method for checking whether a variable type is an array type.\nvariable_state\nDefines the VariableState class.\nvariable_type\nDefines the VariableType class.\nvariable_value\nDefines the IVariableValue class and related classes.\nvartype_arrays_and_elements\nDefines functions for determining the correct array type for a scalar type and vice-\n__version__\nansys.tools.variableinterop version.\nSummary\nutils\napi_serialization\nToAPIStringVisitor\napi_string_to_value_visitor\narray_metadata\narray_value_conversion\narray_values\nIVariableValue\ncommon_variable_metadata\nCommonVariableMetadata\nexceptions\nfile_array_metadata\nFileArrayMetadata\nfile_array_value\nFileArrayValue\nfile_metadata\nFileMetadata\nfile_scope\nFileScope\nfile_value\nFileValue\nfrom_formatted_string_visitor\nFromFormattedStringVisitor\nisave_context\nISaveContext\nivariable_type_pseudovisitor\nivariable_visitor\nIVariableValueVisitor\nivariablemetadata_visitor\nIVariableMetadataVisitor\nnon_managing_file_scope\nNonManagingFileScope\nnumeric_metadata\nNumericMetadata\nscalar_metadata\nscalar_value_conversion\nscalar_values\nIVariableValue\nvalue_from_formatted_string\nvar_type_array_check\nvariable_state\nVariableState\nvariable_type\nVariableType\nvariable_value\nIVariableValue\nvartype_arrays_and_elements\n__version__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/index",
        "href": "api/ansys/tools/variableinterop/index.html#description",
        "title": "The ansys.tools.variableinterop library > Description",
        "section": "Description",
        "text": "This library contains definitions of the basic variables, types, metadata, and values\nintended to provide interoperability between all products that optionally choose to\nparticipate.\nFor high-level project documentation with examples and installation instructions, see\nhttp://variableinterop.docs.pyansys.com.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/index",
        "href": "api/ansys/tools/variableinterop/index.html#module-detail",
        "title": "The ansys.tools.variableinterop library > Module detail",
        "section": "Module detail",
        "text": "ansys.tools.variableinterop version.\nModule detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/index",
        "href": "api/ansys/tools/variableinterop/index.html#variableinterop.__version__",
        "title": "The ansys.tools.variableinterop library > Module detail > __version__",
        "section": "Module detail > __version__",
        "text": "variableinterop.__version__\n\nansys.tools.variableinterop version.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata.html#numericmetadata",
        "title": "NumericMetadata",
        "section": "NumericMetadata",
        "text": "Bases: ansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata, abc.ABC\nProvides a generic base for all numeric metadata implementations.\nNumericMetadata\nNumericMetadata\nansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata\nabc.ABC"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata.html#ansys.tools.variableinterop.numeric_metadata.NumericMetadata",
        "title": "NumericMetadata > NumericMetadata > NumericMetadata",
        "section": "NumericMetadata > NumericMetadata",
        "text": "class ansys.tools.variableinterop.numeric_metadata.NumericMetadata\n\nBases: ansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata, abc.ABC\n\nProvides a generic base for all numeric metadata implementations.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata.html#overview",
        "title": "NumericMetadata > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nequals\nDetermine if a given metadata is equal to this metadata.\nunits\nUnits of the variable.\ndisplay_format\nDisplay format of the variable.\n__eq__\nDetermine if the object is equal to the metadata.\nOverview\naccept\nequals\nunits\ndisplay_format\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata.html#import-detail",
        "title": "NumericMetadata > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata.html#property-detail",
        "title": "NumericMetadata > Property detail",
        "section": "Property detail",
        "text": "Units of the variable.\nDisplay format of the variable.\nProperty detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata.html#NumericMetadata.units",
        "title": "NumericMetadata > Property detail > units",
        "section": "Property detail > units",
        "text": "property NumericMetadata.units: str\n\nUnits of the variable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata.html#NumericMetadata.display_format",
        "title": "NumericMetadata > Property detail > display_format",
        "section": "Property detail > display_format",
        "text": "property NumericMetadata.display_format: str\n\nDisplay format of the variable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata.html#method-detail",
        "title": "NumericMetadata > Method detail",
        "section": "Method detail",
        "text": "Determine if the object is equal to the metadata.\nDetermine if a given metadata is equal to this metadata.\nGiven metadata to compare this metadate to.\nTrue if the two objects are equal, False otherwise.\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nMethod detail\nAny\nTrue\nFalse\nIVariableMetadataVisitor\nT\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata.html#NumericMetadata.__eq__",
        "title": "NumericMetadata > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "NumericMetadata.__eq__(other)\n\nDetermine if the object is equal to the metadata.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata.html#NumericMetadata.equals",
        "title": "NumericMetadata > Method detail > equals",
        "section": "Method detail > equals",
        "text": "NumericMetadata.equals(other: Any) -> bool\n\nDetermine if a given metadata is equal to this metadata.\n\nParameters\n\nother\n\nAny\n\nGiven metadata to compare this metadate to.\n\nReturns\n\nbool\n\nTrue if the two objects are equal, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata",
        "href": "api/ansys/tools/variableinterop/numeric_metadata/NumericMetadata.html#NumericMetadata.accept",
        "title": "NumericMetadata > Method detail > accept",
        "section": "Method detail > accept",
        "text": "abstract NumericMetadata.accept(visitor: ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor[ansys.tools.variableinterop.ivariablemetadata_visitor.T]) -> ansys.tools.variableinterop.ivariablemetadata_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableMetadataVisitor[T]\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/index",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/index.html#the-common_variable_metadatapy-module",
        "title": "The common_variable_metadata.py module",
        "section": "The common_variable_metadata.py module",
        "text": "The common_variable_metadata.py module\ncommon_variable_metadata.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/index",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/index.html#summary",
        "title": "The common_variable_metadata.py module > Summary",
        "section": "Summary",
        "text": "CommonVariableMetadata\nProvides metadata common to all variables.\nSummary\nCommonVariableMetadata"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/common_variable_metadata/index",
        "href": "api/ansys/tools/variableinterop/common_variable_metadata/index.html#description",
        "title": "The common_variable_metadata.py module > Description",
        "section": "Description",
        "text": "Defines the CommonVariableMetadata class.\nDescription\nCommonVariableMetadata"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#apistringtovaluevisitor",
        "title": "APIStringToValueVisitor",
        "section": "APIStringToValueVisitor",
        "text": "Bases: ansys.tools.variableinterop.ivariable_type_pseudovisitor.IVariableTypePseudoVisitor\nVisits variable type enumeration values, producing a variable value from a\nstring.\nAPIStringToValueVisitor\nAPIStringToValueVisitor\nansys.tools.variableinterop.ivariable_type_pseudovisitor.IVariableTypePseudoVisitor"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#ansys.tools.variableinterop.api_string_to_value_visitor.APIStringToValueVisitor",
        "title": "APIStringToValueVisitor > APIStringToValueVisitor > APIStringToValueVisitor",
        "section": "APIStringToValueVisitor > APIStringToValueVisitor",
        "text": "class ansys.tools.variableinterop.api_string_to_value_visitor.APIStringToValueVisitor(source: str, fscope: ansys.tools.variableinterop.file_scope.FileScope | None = None, save_context: ansys.tools.variableinterop.isave_context.ILoadContext | None = None)\n\nBases: ansys.tools.variableinterop.ivariable_type_pseudovisitor.IVariableTypePseudoVisitor\n\nVisits variable type enumeration values, producing a variable value from a\nstring.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#overview",
        "title": "APIStringToValueVisitor > Overview",
        "section": "Overview",
        "text": "visit_unknown\nVisit the UNKNOWN variable type.\nvisit_int\nProduce an IntegerValue type from the API string format.\nvisit_real\nProduce a RealValue type from the API string format.\nvisit_boolean\nProduce a BooleanValue type from the API string format.\nvisit_string\nProduce a StringValue type from the API string format.\nvisit_file\nProduce a FileValue type from the API string format.\nvisit_int_array\nProduce an IntegerArrayValue type from the API string format.\nvisit_real_array\nProduce a RealArrayValue type from the API string format.\nvisit_bool_array\nProduce a BooleanArrayValue from the API string format.\nvisit_string_array\nProduce a StringArrayValue type from the API string format.\nvisit_file_array\nProduce a FileArrayValue type from the API string format.\nOverview\nvisit_unknown\nUNKNOWN\nvisit_int\nIntegerValue\nvisit_real\nRealValue\nvisit_boolean\nBooleanValue\nvisit_string\nStringValue\nvisit_file\nFileValue\nvisit_int_array\nIntegerArrayValue\nvisit_real_array\nRealArrayValue\nvisit_bool_array\nBooleanArrayValue\nvisit_string_array\nStringArrayValue\nvisit_file_array\nFileArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#import-detail",
        "title": "APIStringToValueVisitor > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#method-detail",
        "title": "APIStringToValueVisitor > Method detail",
        "section": "Method detail",
        "text": "Visit the UNKNOWN variable type.\nGiven that variables of the UNKNOWN type cannot actually be produced,\nthis method always raises NotImplementedError.\nNever returns; always raises NotImplementedError.\nAlways.\nProduce an IntegerValue type from the API string format.\nIntegerValue type with a value determined by the specified string.\nProduce a RealValue type from the API string format.\nRealValue type with a value determined by the specified string.\nProduce a BooleanValue type from the API string format.\nBooleanValue type with a value determined by the specified string.\nProduce a StringValue type from the API string format.\nStringValue type with a value determined by the specified string.\nProduce a FileValue type from the API string format.\nFileValue type with a value determined by the specified string.\nProduce an IntegerArrayValue type from the API string format.\nIntegerArrayValue type with a value determined by the specified string.\nProduce a RealArrayValue type from the API string format.\nRealArrayValue type with a value determined by the specified string.\nProduce a BooleanArrayValue from the API string format.\nBooleanArrayValue type with a value determined by the specified string.\nProduce a StringArrayValue type from the API string format.\nStringArrayValue type with a value determined by the specified string.\nProduce a FileArrayValue type from the API string format.\nFileArrayValue type with a value determined by the specified string.\nMethod detail\nUNKNOWN\nUNKNOWN\nNotImplementedError\npython:None\nNotImplementedError\nNotImplementedError\nIntegerValue\nIntegerValue\nIntegerValue\nRealValue\nRealValue\nRealValue\nBooleanValue\nBooleanValue\nBooleanValue\nStringValue\nStringValue\nStringValue\nFileValue\nFileValue\nFileValue\nIntegerArrayValue\nIntegerArrayValue\nIntegerArrayValue\nRealArrayValue\nRealArrayValue\nRealArrayValue\nBooleanArrayValue\nBooleanArrayValue\nBooleanArrayValue\nStringArrayValue\nStringArrayValue\nStringArrayValue\nFileArrayValue\nFileArrayValue\nFileArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#APIStringToValueVisitor.visit_unknown",
        "title": "APIStringToValueVisitor > Method detail > visit_unknown",
        "section": "Method detail > visit_unknown",
        "text": "abstract APIStringToValueVisitor.visit_unknown() -> None\n\nVisit the UNKNOWN variable type.\n\nGiven that variables of the UNKNOWN type cannot actually be produced,\nthis method always raises NotImplementedError.\n\nReturns\n\npython:None\n\nNever returns; always raises NotImplementedError.\n\nRaises\n\nNotImplementedError\n\nAlways.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#APIStringToValueVisitor.visit_int",
        "title": "APIStringToValueVisitor > Method detail > visit_int",
        "section": "Method detail > visit_int",
        "text": "APIStringToValueVisitor.visit_int() -> ansys.tools.variableinterop.scalar_values.IntegerValue\n\nProduce an IntegerValue type from the API string format.\n\nReturns\n\nIntegerValue\n\nIntegerValue type with a value determined by the specified string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#APIStringToValueVisitor.visit_real",
        "title": "APIStringToValueVisitor > Method detail > visit_real",
        "section": "Method detail > visit_real",
        "text": "APIStringToValueVisitor.visit_real() -> ansys.tools.variableinterop.scalar_values.RealValue\n\nProduce a RealValue type from the API string format.\n\nReturns\n\nRealValue\n\nRealValue type with a value determined by the specified string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#APIStringToValueVisitor.visit_boolean",
        "title": "APIStringToValueVisitor > Method detail > visit_boolean",
        "section": "Method detail > visit_boolean",
        "text": "APIStringToValueVisitor.visit_boolean() -> ansys.tools.variableinterop.scalar_values.BooleanValue\n\nProduce a BooleanValue type from the API string format.\n\nReturns\n\nBooleanValue\n\nBooleanValue type with a value determined by the specified string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#APIStringToValueVisitor.visit_string",
        "title": "APIStringToValueVisitor > Method detail > visit_string",
        "section": "Method detail > visit_string",
        "text": "APIStringToValueVisitor.visit_string() -> ansys.tools.variableinterop.scalar_values.StringValue\n\nProduce a StringValue type from the API string format.\n\nReturns\n\nStringValue\n\nStringValue type with a value determined by the specified string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#APIStringToValueVisitor.visit_file",
        "title": "APIStringToValueVisitor > Method detail > visit_file",
        "section": "Method detail > visit_file",
        "text": "APIStringToValueVisitor.visit_file() -> ansys.tools.variableinterop.file_value.FileValue\n\nProduce a FileValue type from the API string format.\n\nReturns\n\nFileValue\n\nFileValue type with a value determined by the specified string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#APIStringToValueVisitor.visit_int_array",
        "title": "APIStringToValueVisitor > Method detail > visit_int_array",
        "section": "Method detail > visit_int_array",
        "text": "APIStringToValueVisitor.visit_int_array() -> ansys.tools.variableinterop.array_values.IntegerArrayValue\n\nProduce an IntegerArrayValue type from the API string format.\n\nReturns\n\nIntegerArrayValue\n\nIntegerArrayValue type with a value determined by the specified string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#APIStringToValueVisitor.visit_real_array",
        "title": "APIStringToValueVisitor > Method detail > visit_real_array",
        "section": "Method detail > visit_real_array",
        "text": "APIStringToValueVisitor.visit_real_array() -> ansys.tools.variableinterop.array_values.RealArrayValue\n\nProduce a RealArrayValue type from the API string format.\n\nReturns\n\nRealArrayValue\n\nRealArrayValue type with a value determined by the specified string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#APIStringToValueVisitor.visit_bool_array",
        "title": "APIStringToValueVisitor > Method detail > visit_bool_array",
        "section": "Method detail > visit_bool_array",
        "text": "APIStringToValueVisitor.visit_bool_array() -> ansys.tools.variableinterop.array_values.BooleanArrayValue\n\nProduce a BooleanArrayValue from the API string format.\n\nReturns\n\nBooleanArrayValue\n\nBooleanArrayValue type with a value determined by the specified string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#APIStringToValueVisitor.visit_string_array",
        "title": "APIStringToValueVisitor > Method detail > visit_string_array",
        "section": "Method detail > visit_string_array",
        "text": "APIStringToValueVisitor.visit_string_array() -> ansys.tools.variableinterop.array_values.StringArrayValue\n\nProduce a StringArrayValue type from the API string format.\n\nReturns\n\nStringArrayValue\n\nStringArrayValue type with a value determined by the specified string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor",
        "href": "api/ansys/tools/variableinterop/api_string_to_value_visitor/APIStringToValueVisitor.html#APIStringToValueVisitor.visit_file_array",
        "title": "APIStringToValueVisitor > Method detail > visit_file_array",
        "section": "Method detail > visit_file_array",
        "text": "APIStringToValueVisitor.visit_file_array() -> ansys.tools.variableinterop.file_array_value.FileArrayValue\n\nProduce a FileArrayValue type from the API string format.\n\nReturns\n\nFileArrayValue\n\nFileArrayValue type with a value determined by the specified string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#nonmanagingfilescope",
        "title": "NonManagingFileScope",
        "section": "NonManagingFileScope",
        "text": "Bases: ansys.tools.variableinterop.file_scope.FileScope, ansys.tools.variableinterop.isave_context.ISaveContext, ansys.tools.variableinterop.isave_context.ILoadContext\nProvides a simple file scope implementation that performs no management.\nThis file scope allows you to create FileValue instances that are backed by arbitrary\npreexisting files on disk. It is up to the caller to ensure that the file remains in place\nand unchanged for the lifespan of the FileValue instance and that the file is deleted at\nan appropriate time. Because of these restrictions, it is generally not recommended using\nthis file scope except for referencing permanently installed files.\nThis file scope also serves as a “pass-through” save context. Because the files are\nassumed to be managed externally such that they are permanent (or at least not deleted\nwhile in use), the save context takes no action to save them but simply passes through\ntheir current location on disk as an identifier.\nNonManagingFileScope\nNonManagingFileScope\nansys.tools.variableinterop.file_scope.FileScope\nansys.tools.variableinterop.isave_context.ISaveContext\nansys.tools.variableinterop.isave_context.ILoadContext\nFileValue\nFileValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#ansys.tools.variableinterop.non_managing_file_scope.NonManagingFileScope",
        "title": "NonManagingFileScope > NonManagingFileScope > NonManagingFileScope",
        "section": "NonManagingFileScope > NonManagingFileScope",
        "text": "class ansys.tools.variableinterop.non_managing_file_scope.NonManagingFileScope\n\nBases: ansys.tools.variableinterop.file_scope.FileScope, ansys.tools.variableinterop.isave_context.ISaveContext, ansys.tools.variableinterop.isave_context.ILoadContext\n\nProvides a simple file scope implementation that performs no management.\n\nThis file scope allows you to create FileValue instances that are backed by arbitrary\npreexisting files on disk. It is up to the caller to ensure that the file remains in place\nand unchanged for the lifespan of the FileValue instance and that the file is deleted at\nan appropriate time. Because of these restrictions, it is generally not recommended using\nthis file scope except for referencing permanently installed files.\n\nThis file scope also serves as a “pass-through” save context. Because the files are\nassumed to be managed externally such that they are permanent (or at least not deleted\nwhile in use), the save context takes no action to save them but simply passes through\ntheir current location on disk as an identifier.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#overview",
        "title": "NonManagingFileScope > Overview",
        "section": "Overview",
        "text": "read_from_file\nRead the contents of a file and create a new FileValue object backed by a\nto_api_string_file_store\nSerialize a FileValue instance in this scope to an API string.\nfrom_api_object\nCreate a FileScope instance from a map of API strings.\nsave_file\nSave a file to the save medium.\nload_file\nLoad a file from the load medium.\nflush\nFlush any changes in the context to the underlying stream or file.\nclose\nClose the FileScope instance, cleaning up any files it contains.\nOverview\nread_from_file\nFileValue\nto_api_string_file_store\nFileValue\nfrom_api_object\nFileScope\nsave_file\nload_file\nflush\nclose\nFileScope"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#import-detail",
        "title": "NonManagingFileScope > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#method-detail",
        "title": "NonManagingFileScope > Method detail",
        "section": "Method detail",
        "text": "Read the contents of a file and create a new FileValue object backed by a\nfile in this scope.\nPath to the file to read.\nMIME type of the file. The default is None, which indicates that the file\ndoes not have a MIME type or that the type is not known.\nEncoding of the file. The default is None, which indicates that the file\ndoes not have a text encoding (for example, because it is a binary file.)\nNew FileValue object with the contents of the specified file, backed by this scope.\nSerialize a FileValue instance in this scope to an API string.\nFileValue instance to serialize.\nAPI string representing the FileValue instance.\nCreate a FileScope instance from a map of API strings.\nMap of API strings that define the scope.\nLoad context to read the file contents from.\nSave a file to the save medium.\nIt is up to the ISaveContext implementation to decide how or when to send the actual\ndata. Some ISaveContext implementations may merely collect metadata as part of this\ncall and send the data on flush.\nFile on disk to send or include in the save.\nUnique ID for the file. The default value is None, in which case an ID\nis automatically generated and returned. This ID can be used with an equivalent\nILoadContext instance to load the contents on deserialization.\nID, either the one provided or the one otherwise generated.\nLoad a file from the load medium.\nThe ILoadContext implementation decides how or when to send the actual\ndata. Some ILoadContexts implementations may merely collect metadata as\npart of this call and send the data on flush.\nID generated by an equivalent ISaveContext instance to save a file into this\ncontext.\nPath to the loaded file.\nFlush any changes in the context to the underlying stream or file.\nClose the FileScope instance, cleaning up any files it contains.\nMethod detail\nFileValue\nPathLike\nOptional\npython:str\noptional\nOptional\npython:str\noptional\nFileValue\nFileValue\nFileValue\nFileValue\nFileValue\npython:str\nFileValue\nFileScope\nDict\npython:str\nOptional\npython:str\nILoadContext\nISaveContext\nISaveContext\nUnion\nPathLike\npython:str\nOptional\npython:str\noptional\nNone\nILoadContext\npython:str\nILoadContext\nILoadContexts\nOptional\npython:str\nISaveContext\nOptional\nPathLike\nFileScope"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#NonManagingFileScope.read_from_file",
        "title": "NonManagingFileScope > Method detail > read_from_file",
        "section": "Method detail > read_from_file",
        "text": "NonManagingFileScope.read_from_file(to_read: os.PathLike, mime_type: str | None, encoding: str | None) -> ansys.tools.variableinterop.file_value.FileValue\n\nRead the contents of a file and create a new FileValue object backed by a\nfile in this scope.\n\nParameters\n\nto_read\n\nPathLike\n\nPath to the file to read.\n\nmime_type\n\nOptional[python:str], optional\n\nMIME type of the file. The default is None, which indicates that the file\ndoes not have a MIME type or that the type is not known.\n\nencoding\n\nOptional[python:str], optional\n\nEncoding of the file. The default is None, which indicates that the file\ndoes not have a text encoding (for example, because it is a binary file.)\n\nReturns\n\nFileValue\n\nNew FileValue object with the contents of the specified file, backed by this scope.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#NonManagingFileScope.to_api_string_file_store",
        "title": "NonManagingFileScope > Method detail > to_api_string_file_store",
        "section": "Method detail > to_api_string_file_store",
        "text": "NonManagingFileScope.to_api_string_file_store(file_var: ansys.tools.variableinterop.file_value.FileValue) -> str\n\nSerialize a FileValue instance in this scope to an API string.\n\nParameters\n\nfile_var\n\nFileValue\n\nFileValue instance to serialize.\n\nReturns\n\npython:str\n\nAPI string representing the FileValue instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#NonManagingFileScope.from_api_object",
        "title": "NonManagingFileScope > Method detail > from_api_object",
        "section": "Method detail > from_api_object",
        "text": "NonManagingFileScope.from_api_object(api_object: Dict[str, str | None], load_context: ansys.tools.variableinterop.isave_context.ILoadContext) -> ansys.tools.variableinterop.file_value.FileValue\n\nCreate a FileScope instance from a map of API strings.\n\nParameters\n\napi_object\n\nDict[python:str, Optional[python:str]]\n\nMap of API strings that define the scope.\n\nload_context\n\nILoadContext\n\nLoad context to read the file contents from.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#NonManagingFileScope.save_file",
        "title": "NonManagingFileScope > Method detail > save_file",
        "section": "Method detail > save_file",
        "text": "NonManagingFileScope.save_file(source: os.PathLike | str, content_id: str | None) -> str\n\nSave a file to the save medium.\n\nIt is up to the ISaveContext implementation to decide how or when to send the actual\ndata. Some ISaveContext implementations may merely collect metadata as part of this\ncall and send the data on flush.\n\nParameters\n\nsource\n\nUnion[PathLike, python:str]\n\nFile on disk to send or include in the save.\n\ncontent_id\n\nOptional[python:str], optional\n\nUnique ID for the file. The default value is None, in which case an ID\nis automatically generated and returned. This ID can be used with an equivalent\nILoadContext instance to load the contents on deserialization.\n\nReturns\n\npython:str\n\nID, either the one provided or the one otherwise generated.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#NonManagingFileScope.load_file",
        "title": "NonManagingFileScope > Method detail > load_file",
        "section": "Method detail > load_file",
        "text": "NonManagingFileScope.load_file(content_id: str | None) -> os.PathLike | None\n\nLoad a file from the load medium.\n\nThe ILoadContext implementation decides how or when to send the actual\ndata. Some ILoadContexts implementations may merely collect metadata as\npart of this call and send the data on flush.\n\nParameters\n\ncontent_id\n\nOptional[python:str]\n\nID generated by an equivalent ISaveContext instance to save a file into this\ncontext.\n\nReturns\n\nOptional[PathLike]\n\nPath to the loaded file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#NonManagingFileScope.flush",
        "title": "NonManagingFileScope > Method detail > flush",
        "section": "Method detail > flush",
        "text": "NonManagingFileScope.flush() -> None\n\nFlush any changes in the context to the underlying stream or file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#NonManagingFileScope.close",
        "title": "NonManagingFileScope > Method detail > close",
        "section": "Method detail > close",
        "text": "NonManagingFileScope.close() -> None\n\nClose the FileScope instance, cleaning up any files it contains.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.html#classes",
        "title": "NonManagingFileScope > Classes",
        "section": "Classes",
        "text": "NonManagingFileValue\nImplementation of a FileValue instance used by this scope.\nClasses\nNonManagingFileValue\nFileValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue",
        "href": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue.html#commonarrayvalue",
        "title": "CommonArrayValue",
        "section": "CommonArrayValue",
        "text": "Bases: Generic[T], numpy.typing.NDArray[T], IVariableValue, abc.ABC\nDefines an interface for the behavior common among all array types.\nThis class inherits the IVariableValue class.\nCommonArrayValue\nCommonArrayValue\nGeneric\nT\nnumpy.typing.NDArray\nT\nIVariableValue\nabc.ABC\nIVariableValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue",
        "href": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue.html#ansys.tools.variableinterop.variable_value.CommonArrayValue",
        "title": "CommonArrayValue > CommonArrayValue > CommonArrayValue",
        "section": "CommonArrayValue > CommonArrayValue",
        "text": "class ansys.tools.variableinterop.variable_value.CommonArrayValue\n\nBases: Generic[T], numpy.typing.NDArray[T], IVariableValue, abc.ABC\n\nDefines an interface for the behavior common among all array types.\n\nThis class inherits the IVariableValue class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue",
        "href": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue.html#overview",
        "title": "CommonArrayValue > Overview",
        "section": "Overview",
        "text": "get_lengths\nGet the dimension sizes of the array.\nrank\nGet the number of dimensions in the array.\nOverview\nget_lengths\nrank"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue",
        "href": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue.html#import-detail",
        "title": "CommonArrayValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue",
        "href": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue.html#method-detail",
        "title": "CommonArrayValue > Method detail",
        "section": "Method detail",
        "text": "Get the dimension sizes of the array.\nDimension sizes of the array.\nGet the number of dimensions in the array.\nNumber of dimensions in the array.\nMethod detail\nTuple\npython:int\npython:int"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue",
        "href": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue.html#CommonArrayValue.get_lengths",
        "title": "CommonArrayValue > Method detail > get_lengths",
        "section": "Method detail > get_lengths",
        "text": "CommonArrayValue.get_lengths() -> Tuple[int]\n\nGet the dimension sizes of the array.\n\nReturns\n\nTuple[python:int]\n\nDimension sizes of the array.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue",
        "href": "api/ansys/tools/variableinterop/variable_value/CommonArrayValue.html#CommonArrayValue.rank",
        "title": "CommonArrayValue > Method detail > rank",
        "section": "Method detail > rank",
        "text": "CommonArrayValue.rank() -> int\n\nGet the number of dimensions in the array.\n\nReturns\n\npython:int\n\nNumber of dimensions in the array.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/IVariableValue",
        "href": "api/ansys/tools/variableinterop/variable_value/IVariableValue.html#ivariablevalue",
        "title": "IVariableValue",
        "section": "IVariableValue",
        "text": "Bases: abc.ABC\nDefines an interface for the behavior common among all variable types.\nIVariableValue\nIVariableValue\nabc.ABC"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/IVariableValue",
        "href": "api/ansys/tools/variableinterop/variable_value/IVariableValue.html#ansys.tools.variableinterop.variable_value.IVariableValue",
        "title": "IVariableValue > IVariableValue > IVariableValue",
        "section": "IVariableValue > IVariableValue",
        "text": "class ansys.tools.variableinterop.variable_value.IVariableValue\n\nBases: abc.ABC\n\nDefines an interface for the behavior common among all variable types.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/IVariableValue",
        "href": "api/ansys/tools/variableinterop/variable_value/IVariableValue.html#overview",
        "title": "IVariableValue > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nto_api_string\nConvert the value to an API string.\nto_display_string\nConvert the value to a formatted string.\nclone\nGet a deep copy of this value.\nvariable_type\nVariable type of the object.\nOverview\naccept\nto_api_string\nto_display_string\nclone\nvariable_type"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/IVariableValue",
        "href": "api/ansys/tools/variableinterop/variable_value/IVariableValue.html#import-detail",
        "title": "IVariableValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/IVariableValue",
        "href": "api/ansys/tools/variableinterop/variable_value/IVariableValue.html#property-detail",
        "title": "IVariableValue > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/IVariableValue",
        "href": "api/ansys/tools/variableinterop/variable_value/IVariableValue.html#IVariableValue.variable_type",
        "title": "IVariableValue > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property IVariableValue.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nAbstractmethod\n\n\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/IVariableValue",
        "href": "api/ansys/tools/variableinterop/variable_value/IVariableValue.html#method-detail",
        "title": "IVariableValue > Method detail",
        "section": "Method detail",
        "text": "Get a deep copy of this value.\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nConvert the value to an API string.\nString appropriate for use in files and APIs.\nConvert the value to a formatted string.\nLocale to format the string in.\nString appropriate for use in user-facing areas.\nMethod detail\nIVariableValueVisitor\nT\npython:str\npython:str\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/IVariableValue",
        "href": "api/ansys/tools/variableinterop/variable_value/IVariableValue.html#IVariableValue.clone",
        "title": "IVariableValue > Method detail > clone",
        "section": "Method detail > clone",
        "text": "IVariableValue.clone() -> IVariableValue\n\nGet a deep copy of this value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/IVariableValue",
        "href": "api/ansys/tools/variableinterop/variable_value/IVariableValue.html#IVariableValue.accept",
        "title": "IVariableValue > Method detail > accept",
        "section": "Method detail > accept",
        "text": "abstract IVariableValue.accept(visitor: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[T]) -> T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableValueVisitor\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/IVariableValue",
        "href": "api/ansys/tools/variableinterop/variable_value/IVariableValue.html#IVariableValue.to_api_string",
        "title": "IVariableValue > Method detail > to_api_string",
        "section": "Method detail > to_api_string",
        "text": "abstract IVariableValue.to_api_string(context: ansys.tools.variableinterop.isave_context.ISaveContext | None = None) -> str\n\nConvert the value to an API string.\n\nReturns\n\npython:str\n\nString appropriate for use in files and APIs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/IVariableValue",
        "href": "api/ansys/tools/variableinterop/variable_value/IVariableValue.html#IVariableValue.to_display_string",
        "title": "IVariableValue > Method detail > to_display_string",
        "section": "Method detail > to_display_string",
        "text": "abstract IVariableValue.to_display_string(locale_name: str) -> str\n\nConvert the value to a formatted string.\n\nParameters\n\nlocale_name\n\npython:str\n\nLocale to format the string in.\n\nReturns\n\npython:str\n\nString appropriate for use in user-facing areas.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#ivariabletypepseudovisitor",
        "title": "IVariableTypePseudoVisitor",
        "section": "IVariableTypePseudoVisitor",
        "text": "Bases: abc.ABC, Generic[T]\nDefines an interface for pseudo-visitors of the VariableType enumeration.\nThis interface defines a pseudo-visitor for possible VariableType values.\nAlthough this pattern ultimately requires the use of a single “switch-statement\nequivalent” (see the following __accept_map), it confines the said switch to a single\ninstance and allows it to essentially be reused with mypy “typesafety.”\nIVariableTypePseudoVisitor\nIVariableTypePseudoVisitor\nabc.ABC\nGeneric\nT\nVariableType\nVariableType\n__accept_map\nmypy"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#ansys.tools.variableinterop.ivariable_type_pseudovisitor.IVariableTypePseudoVisitor",
        "title": "IVariableTypePseudoVisitor > IVariableTypePseudoVisitor > IVariableTypePseudoVisitor",
        "section": "IVariableTypePseudoVisitor > IVariableTypePseudoVisitor",
        "text": "class ansys.tools.variableinterop.ivariable_type_pseudovisitor.IVariableTypePseudoVisitor\n\nBases: abc.ABC, Generic[T]\n\nDefines an interface for pseudo-visitors of the VariableType enumeration.\n\nThis interface defines a pseudo-visitor for possible VariableType values.\nAlthough this pattern ultimately requires the use of a single “switch-statement\nequivalent” (see the following __accept_map), it confines the said switch to a single\ninstance and allows it to essentially be reused with mypy “typesafety.”\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#overview",
        "title": "IVariableTypePseudoVisitor > Overview",
        "section": "Overview",
        "text": "visit_unknown\nVisit the UNKNOWN variable type.\nvisit_int\nVisit the INTEGER variable type.\nvisit_real\nVisit the REAL variable type.\nvisit_boolean\nVisit the BOOLEAN variable type.\nvisit_string\nVisit the STRING variable type.\nvisit_file\nVisit the FILE variable type.\nvisit_int_array\nVisit the INTEGER_ARRAY variable type.\nvisit_real_array\nVisit the REAL_ARRAY variable type.\nvisit_bool_array\nVisit the BOOLEAN_ARRAY variable type.\nvisit_string_array\nVisit the STRING_ARRAY variable type.\nvisit_file_array\nVisit the FILE_ARRAY variable type.\nOverview\nvisit_unknown\nUNKNOWN\nvisit_int\nINTEGER\nvisit_real\nREAL\nvisit_boolean\nBOOLEAN\nvisit_string\nSTRING\nvisit_file\nFILE\nvisit_int_array\nINTEGER_ARRAY\nvisit_real_array\nREAL_ARRAY\nvisit_bool_array\nBOOLEAN_ARRAY\nvisit_string_array\nSTRING_ARRAY\nvisit_file_array\nFILE_ARRAY"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#import-detail",
        "title": "IVariableTypePseudoVisitor > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#method-detail",
        "title": "IVariableTypePseudoVisitor > Method detail",
        "section": "Method detail",
        "text": "Visit the UNKNOWN variable type.\nResult, as documented by the implementing class.\nVisit the INTEGER variable type.\nResult, as documented by the implementing class.\nVisit the REAL variable type.\nResult, as documented by the implementing class.\nVisit the BOOLEAN variable type.\nResult, as documented by the implementing class.\nVisit the STRING variable type.\nResult, as documented by the implementing class.\nVisit the FILE variable type.\nResult, as documented by the implementing class.\nVisit the INTEGER_ARRAY variable type.\nResult, as documented by the implementing class.\nVisit the REAL_ARRAY variable type.\nResult, as documented by the implementing class.\nVisit the BOOLEAN_ARRAY variable type.\nResult, as documented by the implementing class.\nVisit the STRING_ARRAY variable type.\nResult, as documented by the implementing class.\nVisit the FILE_ARRAY variable type.\nResult, as documented by the implementing class.\nMethod detail\nUNKNOWN\nT\nINTEGER\nT\nREAL\nT\nBOOLEAN\nT\nSTRING\nT\nFILE\nT\nINTEGER_ARRAY\nT\nREAL_ARRAY\nT\nBOOLEAN_ARRAY\nT\nSTRING_ARRAY\nT\nFILE_ARRAY\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#IVariableTypePseudoVisitor.visit_unknown",
        "title": "IVariableTypePseudoVisitor > Method detail > visit_unknown",
        "section": "Method detail > visit_unknown",
        "text": "abstract IVariableTypePseudoVisitor.visit_unknown() -> T\n\nVisit the UNKNOWN variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#IVariableTypePseudoVisitor.visit_int",
        "title": "IVariableTypePseudoVisitor > Method detail > visit_int",
        "section": "Method detail > visit_int",
        "text": "abstract IVariableTypePseudoVisitor.visit_int() -> T\n\nVisit the INTEGER variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#IVariableTypePseudoVisitor.visit_real",
        "title": "IVariableTypePseudoVisitor > Method detail > visit_real",
        "section": "Method detail > visit_real",
        "text": "abstract IVariableTypePseudoVisitor.visit_real() -> T\n\nVisit the REAL variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#IVariableTypePseudoVisitor.visit_boolean",
        "title": "IVariableTypePseudoVisitor > Method detail > visit_boolean",
        "section": "Method detail > visit_boolean",
        "text": "abstract IVariableTypePseudoVisitor.visit_boolean() -> T\n\nVisit the BOOLEAN variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#IVariableTypePseudoVisitor.visit_string",
        "title": "IVariableTypePseudoVisitor > Method detail > visit_string",
        "section": "Method detail > visit_string",
        "text": "abstract IVariableTypePseudoVisitor.visit_string() -> T\n\nVisit the STRING variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#IVariableTypePseudoVisitor.visit_file",
        "title": "IVariableTypePseudoVisitor > Method detail > visit_file",
        "section": "Method detail > visit_file",
        "text": "abstract IVariableTypePseudoVisitor.visit_file() -> T\n\nVisit the FILE variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#IVariableTypePseudoVisitor.visit_int_array",
        "title": "IVariableTypePseudoVisitor > Method detail > visit_int_array",
        "section": "Method detail > visit_int_array",
        "text": "abstract IVariableTypePseudoVisitor.visit_int_array() -> T\n\nVisit the INTEGER_ARRAY variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#IVariableTypePseudoVisitor.visit_real_array",
        "title": "IVariableTypePseudoVisitor > Method detail > visit_real_array",
        "section": "Method detail > visit_real_array",
        "text": "abstract IVariableTypePseudoVisitor.visit_real_array() -> T\n\nVisit the REAL_ARRAY variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#IVariableTypePseudoVisitor.visit_bool_array",
        "title": "IVariableTypePseudoVisitor > Method detail > visit_bool_array",
        "section": "Method detail > visit_bool_array",
        "text": "abstract IVariableTypePseudoVisitor.visit_bool_array() -> T\n\nVisit the BOOLEAN_ARRAY variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#IVariableTypePseudoVisitor.visit_string_array",
        "title": "IVariableTypePseudoVisitor > Method detail > visit_string_array",
        "section": "Method detail > visit_string_array",
        "text": "abstract IVariableTypePseudoVisitor.visit_string_array() -> T\n\nVisit the STRING_ARRAY variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/IVariableTypePseudoVisitor.html#IVariableTypePseudoVisitor.visit_file_array",
        "title": "IVariableTypePseudoVisitor > Method detail > visit_file_array",
        "section": "Method detail > visit_file_array",
        "text": "abstract IVariableTypePseudoVisitor.visit_file_array() -> T\n\nVisit the FILE_ARRAY variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/index",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/index.html#the-ivariable_visitorpy-module",
        "title": "The ivariable_visitor.py module",
        "section": "The ivariable_visitor.py module",
        "text": "The ivariable_visitor.py module\nivariable_visitor.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/index",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/index.html#summary",
        "title": "The ivariable_visitor.py module > Summary",
        "section": "Summary",
        "text": "IVariableValueVisitor\nDefines the interface to be implemented for using the visitor pattern with variable\nT\nSummary\nIVariableValueVisitor\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/index",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/index.html#description",
        "title": "The ivariable_visitor.py module > Description",
        "section": "Description",
        "text": "Defines the IVariableValueVisitor class.\nDescription\nIVariableValueVisitor"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/index",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/index.html#module-detail",
        "title": "The ivariable_visitor.py module > Module detail",
        "section": "Module detail",
        "text": "Module detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/index",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/index.html#ivariable_visitor.T",
        "title": "The ivariable_visitor.py module > Module detail > T",
        "section": "Module detail > T",
        "text": "ivariable_visitor.T\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext.html#localfilecontentcontext",
        "title": "LocalFileContentContext",
        "section": "LocalFileContentContext",
        "text": "Bases: contextlib.AbstractContextManager, abc.ABC\nRepresents the context during which a locally available copy of file value content\nshould exist.\nThis is intended for use with a synchronous implementation.\nLocalFileContentContext\nLocalFileContentContext\ncontextlib.AbstractContextManager\nabc.ABC"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext.html#ansys.tools.variableinterop.file_value.LocalFileContentContext",
        "title": "LocalFileContentContext > LocalFileContentContext > LocalFileContentContext",
        "section": "LocalFileContentContext > LocalFileContentContext",
        "text": "class ansys.tools.variableinterop.file_value.LocalFileContentContext\n\nBases: contextlib.AbstractContextManager, abc.ABC\n\nRepresents the context during which a locally available copy of file value content\nshould exist.\n\nThis is intended for use with a synchronous implementation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext.html#overview",
        "title": "LocalFileContentContext > Overview",
        "section": "Overview",
        "text": "keep_file_on_exit\nCall this method before exiting to prevent deleting the file on exit.\ncontent_path\nGet the local path to the content.\nOverview\nkeep_file_on_exit\ncontent_path"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext.html#import-detail",
        "title": "LocalFileContentContext > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext.html#property-detail",
        "title": "LocalFileContentContext > Property detail",
        "section": "Property detail",
        "text": "Get the local path to the content.\nProperty detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext.html#LocalFileContentContext.content_path",
        "title": "LocalFileContentContext > Property detail > content_path",
        "section": "Property detail > content_path",
        "text": "property LocalFileContentContext.content_path: anyio.Path\n\nAbstractmethod\n\n\n\nGet the local path to the content.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext.html#method-detail",
        "title": "LocalFileContentContext > Method detail",
        "section": "Method detail",
        "text": "Call this method before exiting to prevent deleting the file on exit.\nMethod detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileContentContext.html#LocalFileContentContext.keep_file_on_exit",
        "title": "LocalFileContentContext > Method detail > keep_file_on_exit",
        "section": "Method detail > keep_file_on_exit",
        "text": "abstract LocalFileContentContext.keep_file_on_exit() -> None\n\nCall this method before exiting to prevent deleting the file on exit.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#getting-started",
        "title": "Getting started",
        "section": "Getting started",
        "text": "Getting started"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#installation",
        "title": "Getting started > Installation",
        "section": "Installation",
        "text": "Two installation modes of the pyansys-tools-variableinterop package are provided: user and developer.\nInstallation\npyansys-tools-variableinterop"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#install-in-user-mode",
        "title": "Getting started > Install in user mode",
        "section": "Install in user mode",
        "text": "Before installing the pyansys-tools-variableinterop package, make sure that you\nhave the latest version of pip with this command:\nThen, install the latest pyansys-tools-variableinterop package with this command:\nInstall in user mode\npyansys-tools-variableinterop\npyansys-tools-variableinterop"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#install-in-developer-mode",
        "title": "Getting started > Install in developer mode",
        "section": "Install in developer mode",
        "text": "Installing the pyansys-tools-variableinterop package in developer mode allows\nyou to modify the source and enhance it.\nFor more information, see ref_contribute.\nInstall in developer mode\npyansys-tools-variableinterop"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#style-and-testing",
        "title": "Getting started > Style and testing",
        "section": "Style and testing",
        "text": "If required, you can call style commands (such as black, isort,\nand flake8) or unit testing commands (such as pytest) from the command line.\nHowever, this does not guarantee that your project is being tested in an isolated\nenvironment, which is why you might consider using tox.\nStyle and testing"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#distributing",
        "title": "Getting started > Distributing",
        "section": "Distributing",
        "text": "If you would like to create either source or wheel files, start by running this\ncommand to install the building requirements:\nThen, run these commands:\nDistributing"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/VariableState",
        "href": "api/ansys/tools/variableinterop/variable_state/VariableState.html#variablestate",
        "title": "VariableState",
        "section": "VariableState",
        "text": "Bundles a variable value with a validity flag.\nVariableState\nVariableState"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/VariableState",
        "href": "api/ansys/tools/variableinterop/variable_state/VariableState.html#ansys.tools.variableinterop.variable_state.VariableState",
        "title": "VariableState > VariableState > VariableState",
        "section": "VariableState > VariableState",
        "text": "class ansys.tools.variableinterop.variable_state.VariableState(value: ansys.tools.variableinterop.variable_value.IVariableValue, is_valid: bool)\n\nBundles a variable value with a validity flag.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/VariableState",
        "href": "api/ansys/tools/variableinterop/variable_state/VariableState.html#overview",
        "title": "VariableState > Overview",
        "section": "Overview",
        "text": "clone\nClone the instance.\nvalue\nGet the variable value.\nis_valid\nFlag indicating that the object is equal to the other object.\nsafe_value\nVariable value.\n__eq__\nCheck if this object is equal to another object.\nOverview\nclone\nvalue\nis_valid\nsafe_value\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/VariableState",
        "href": "api/ansys/tools/variableinterop/variable_state/VariableState.html#import-detail",
        "title": "VariableState > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/VariableState",
        "href": "api/ansys/tools/variableinterop/variable_state/VariableState.html#property-detail",
        "title": "VariableState > Property detail",
        "section": "Property detail",
        "text": "Get the variable value.\nFlag indicating that the object is equal to the other object.\nTrue indicates that the objects are equal.\nVariable value.\nVariableValueInvalidError is raised if the variable value is not valid.\nProperty detail\nTrue\nVariableValueInvalidError"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/VariableState",
        "href": "api/ansys/tools/variableinterop/variable_state/VariableState.html#VariableState.value",
        "title": "VariableState > Property detail > value",
        "section": "Property detail > value",
        "text": "property VariableState.value: ansys.tools.variableinterop.variable_value.IVariableValue\n\nGet the variable value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/VariableState",
        "href": "api/ansys/tools/variableinterop/variable_state/VariableState.html#VariableState.is_valid",
        "title": "VariableState > Property detail > is_valid",
        "section": "Property detail > is_valid",
        "text": "property VariableState.is_valid: bool\n\nFlag indicating that the object is equal to the other object.\n\nTrue indicates that the objects are equal.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/VariableState",
        "href": "api/ansys/tools/variableinterop/variable_state/VariableState.html#VariableState.safe_value",
        "title": "VariableState > Property detail > safe_value",
        "section": "Property detail > safe_value",
        "text": "property VariableState.safe_value: ansys.tools.variableinterop.variable_value.IVariableValue\n\nVariable value.\n\nVariableValueInvalidError is raised if the variable value is not valid.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/VariableState",
        "href": "api/ansys/tools/variableinterop/variable_state/VariableState.html#method-detail",
        "title": "VariableState > Method detail",
        "section": "Method detail",
        "text": "Check if this object is equal to another object.\nOther object to compare.\nTrue if the objects are equal, False otherwise.\nClone the instance.\nThe returned instance contains a clone of this instance’s value.\nDeep copy of the instance.\nMethod detail\nAny\nTrue\nFalse\nVariableState"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/VariableState",
        "href": "api/ansys/tools/variableinterop/variable_state/VariableState.html#VariableState.__eq__",
        "title": "VariableState > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "VariableState.__eq__(other) -> bool\n\nCheck if this object is equal to another object.\n\nParameters\n\nother\n\nAny\n\nOther object to compare.\n\nReturns\n\nbool\n\nTrue if the objects are equal, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/VariableState",
        "href": "api/ansys/tools/variableinterop/variable_state/VariableState.html#VariableState.clone",
        "title": "VariableState > Method detail > clone",
        "section": "Method detail > clone",
        "text": "VariableState.clone() -> VariableState\n\nClone the instance.\n\nThe returned instance contains a clone of this instance’s value.\n\nReturns\n\nVariableState\n\nDeep copy of the instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/index",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/index.html#the-scalar_metadatapy-module",
        "title": "The scalar_metadata.py module",
        "section": "The scalar_metadata.py module",
        "text": "The scalar_metadata.py module\nscalar_metadata.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/index",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/index.html#summary",
        "title": "The scalar_metadata.py module > Summary",
        "section": "Summary",
        "text": "BooleanMetadata\nProvides metadata for BOOLEAN and BOOLEAN_ARRAY variable types.\nIntegerMetadata\nProvides metadata for INTEGER and INTEGER_ARRAY variable types.\nRealMetadata\nProvides metadata for REAL and REAL_ARRAY variable types.\nStringMetadata\nProvides common metadata for STRING and STRING_ARRAY variable types.\nSummary\nBooleanMetadata\nBOOLEAN\nBOOLEAN_ARRAY\nIntegerMetadata\nINTEGER\nINTEGER_ARRAY\nRealMetadata\nREAL\nREAL_ARRAY\nStringMetadata\nSTRING\nSTRING_ARRAY"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/index",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/index.html#description",
        "title": "The scalar_metadata.py module > Description",
        "section": "Description",
        "text": "Defines scalar metadata types.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata.html#realarraymetadata",
        "title": "RealArrayMetadata",
        "section": "RealArrayMetadata",
        "text": "Bases: ansys.tools.variableinterop.scalar_metadata.RealMetadata\nProvides metadata for the RealArrayValue variable type.\nRealArrayMetadata\nRealArrayMetadata\nansys.tools.variableinterop.scalar_metadata.RealMetadata\nRealArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata.html#ansys.tools.variableinterop.array_metadata.RealArrayMetadata",
        "title": "RealArrayMetadata > RealArrayMetadata > RealArrayMetadata",
        "section": "RealArrayMetadata > RealArrayMetadata",
        "text": "class ansys.tools.variableinterop.array_metadata.RealArrayMetadata\n\nBases: ansys.tools.variableinterop.scalar_metadata.RealMetadata\n\nProvides metadata for the RealArrayValue variable type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata.html#overview",
        "title": "RealArrayMetadata > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nvariable_type\nVariable type of the object.\nOverview\naccept\nvariable_type"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata.html#import-detail",
        "title": "RealArrayMetadata > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata.html#property-detail",
        "title": "RealArrayMetadata > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata.html#RealArrayMetadata.variable_type",
        "title": "RealArrayMetadata > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property RealArrayMetadata.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata.html#method-detail",
        "title": "RealArrayMetadata > Method detail",
        "section": "Method detail",
        "text": "Invoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nMethod detail\nIVariableMetadataVisitor\nT\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/RealArrayMetadata.html#RealArrayMetadata.accept",
        "title": "RealArrayMetadata > Method detail > accept",
        "section": "Method detail > accept",
        "text": "RealArrayMetadata.accept(visitor: ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor[ansys.tools.variableinterop.ivariablemetadata_visitor.T]) -> ansys.tools.variableinterop.ivariablemetadata_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableMetadataVisitor[T]\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/index",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/index.html#the-from_formatted_string_visitorpy-module",
        "title": "The from_formatted_string_visitor.py module",
        "section": "The from_formatted_string_visitor.py module",
        "text": "The from_formatted_string_visitor.py module\nfrom_formatted_string_visitor.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/index",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/index.html#summary",
        "title": "The from_formatted_string_visitor.py module > Summary",
        "section": "Summary",
        "text": "FromFormattedStringVisitor\nConverts a string formatted for a locale to the IVariableValue variable\nstrtobool\nConvert a string representation of truth to true (1) or false (0).\nSummary\nFromFormattedStringVisitor\nIVariableValue\nstrtobool"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/index",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/index.html#description",
        "title": "The from_formatted_string_visitor.py module > Description",
        "section": "Description",
        "text": "Defines the FromFormattedStringVisitor class.\nDescription\nFromFormattedStringVisitor"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/index",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/index.html#module-detail",
        "title": "The from_formatted_string_visitor.py module > Module detail",
        "section": "Module detail",
        "text": "Convert a string representation of truth to true (1) or false (0).\nTrue values are ‘y’, ‘yes’, ‘t’, ‘true’, ‘on’, and ‘1’; false values are ‘n’, ‘no’,\n‘f’, ‘false’, ‘off’, and ‘0’.  Raises ValueError if ‘val’ is anything else.\nModule detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/index",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/index.html#from_formatted_string_visitor.strtobool",
        "title": "The from_formatted_string_visitor.py module > Module detail > strtobool",
        "section": "Module detail > strtobool",
        "text": "from_formatted_string_visitor.strtobool(val)\n\nConvert a string representation of truth to true (1) or false (0).\n\nTrue values are ‘y’, ‘yes’, ‘t’, ‘true’, ‘on’, and ‘1’; false values are ‘n’, ‘no’,\n‘f’, ‘false’, ‘off’, and ‘0’.  Raises ValueError if ‘val’ is anything else.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/index",
        "href": "api/ansys/tools/variableinterop/api_serialization/index.html#the-api_serializationpy-module",
        "title": "The api_serialization.py module",
        "section": "The api_serialization.py module",
        "text": "The api_serialization.py module\napi_serialization.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/index",
        "href": "api/ansys/tools/variableinterop/api_serialization/index.html#summary",
        "title": "The api_serialization.py module > Summary",
        "section": "Summary",
        "text": "ToAPIStringVisitor\nVisits values and converts them to an API string.\nto_api_string\nConvert a variable value to an API string.\nfrom_api_string\nGenerate a value from an API string.\nSummary\nToAPIStringVisitor\nto_api_string\nfrom_api_string"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/index",
        "href": "api/ansys/tools/variableinterop/api_serialization/index.html#description",
        "title": "The api_serialization.py module > Description",
        "section": "Description",
        "text": "Defines the ToAPIStringVisitor class.\nDescription\nToAPIStringVisitor"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/index",
        "href": "api/ansys/tools/variableinterop/api_serialization/index.html#module-detail",
        "title": "The api_serialization.py module > Module detail",
        "section": "Module detail",
        "text": "Convert a variable value to an API string.\nValue to convert to an API string.\nSave context to use for conversion. The default value is None, which indicates\nthat you do not want to support file values.\nSerialized form of the value.\nGenerate a value from an API string.\nVariable type to generate.\nSource string.\nFile scope to use to deserialize file variables. The default is None,\nwhich indictates that file variables are not needed.\nLoad context to read file contents from. The default is None, which\nindicates file variables are not needed.\nImplementation of IVariableValue of the correct type with a value parsed from the\nspecified string.\nModule detail\nIVariableValue\nOptional\nISaveContext\noptional\nNone\npython:str\nVariableType\npython:str\nOptional\nFileScope\noptional\nNone\nOptional\nILoadContext\noptional\nNone\nIVariableValue\nIVariableValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/index",
        "href": "api/ansys/tools/variableinterop/api_serialization/index.html#api_serialization.to_api_string",
        "title": "The api_serialization.py module > Module detail > to_api_string",
        "section": "Module detail > to_api_string",
        "text": "api_serialization.to_api_string(value: ansys.tools.variableinterop.variable_value.IVariableValue, save_context: ansys.tools.variableinterop.isave_context.ISaveContext | None = None) -> str\n\nConvert a variable value to an API string.\n\nParameters\n\nvalue\n\nIVariableValue\n\nValue to convert to an API string.\n\nsave_context\n\nOptional[ISaveContext], optional\n\nSave context to use for conversion. The default value is None, which indicates\nthat you do not want to support file values.\n\nReturns\n\npython:str\n\nSerialized form of the value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/index",
        "href": "api/ansys/tools/variableinterop/api_serialization/index.html#api_serialization.from_api_string",
        "title": "The api_serialization.py module > Module detail > from_api_string",
        "section": "Module detail > from_api_string",
        "text": "api_serialization.from_api_string(var_type: ansys.tools.variableinterop.variable_type.VariableType, source: str, fscope: ansys.tools.variableinterop.file_scope.FileScope | None = None, load_context: ansys.tools.variableinterop.isave_context.ILoadContext | None = None) -> ansys.tools.variableinterop.variable_value.IVariableValue\n\nGenerate a value from an API string.\n\nParameters\n\nvar_type\n\nVariableType\n\nVariable type to generate.\n\nsource\n\npython:str\n\nSource string.\n\nfscope\n\nOptional[FileScope], optional\n\nFile scope to use to deserialize file variables. The default is None,\nwhich indictates that file variables are not needed.\n\nload_context\n\nOptional[ILoadContext], optional\n\nLoad context to read file contents from. The default is None, which\nindicates file variables are not needed.\n\nReturns\n\nIVariableValue\n\nImplementation of IVariableValue of the correct type with a value parsed from the\nspecified string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#fromformattedstringvisitor",
        "title": "FromFormattedStringVisitor",
        "section": "FromFormattedStringVisitor",
        "text": "Bases: ansys.tools.variableinterop.ivariable_type_pseudovisitor.IVariableTypePseudoVisitor[ansys.tools.variableinterop.variable_value.IVariableValue]\nConverts a string formatted for a locale to the IVariableValue variable\ntype.\nFromFormattedStringVisitor\nFromFormattedStringVisitor\nansys.tools.variableinterop.ivariable_type_pseudovisitor.IVariableTypePseudoVisitor\nansys.tools.variableinterop.variable_value.IVariableValue\nIVariableValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#ansys.tools.variableinterop.from_formatted_string_visitor.FromFormattedStringVisitor",
        "title": "FromFormattedStringVisitor > FromFormattedStringVisitor > FromFormattedStringVisitor",
        "section": "FromFormattedStringVisitor > FromFormattedStringVisitor",
        "text": "class ansys.tools.variableinterop.from_formatted_string_visitor.FromFormattedStringVisitor(value: numpy.str_, locale_name: str)\n\nBases: ansys.tools.variableinterop.ivariable_type_pseudovisitor.IVariableTypePseudoVisitor[ansys.tools.variableinterop.variable_value.IVariableValue]\n\nConverts a string formatted for a locale to the IVariableValue variable\ntype.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#overview",
        "title": "FromFormattedStringVisitor > Overview",
        "section": "Overview",
        "text": "visit_unknown\nVisit the UNKNOWN variable type.\nvisit_int\nVisit the INTEGER variable type.\nvisit_real\nVisit the REAL variable type.\nvisit_boolean\nVisit the BOOLEAN variable type.\nvisit_string\nVisit the STRING variable type.\nvisit_file\nVisit the FILE variable type.\nvisit_int_array\nVisit the INTEGER_ARRAY variable type.\nvisit_real_array\nVisit the REAL_ARRAY variable type.\nvisit_bool_array\nVisit the BOOLEAN_ARRAY variable type.\nvisit_string_array\nVisit the STRING_ARRAY variable type.\nvisit_file_array\nVisit the FILE_ARRAY variable type.\nOverview\nvisit_unknown\nUNKNOWN\nvisit_int\nINTEGER\nvisit_real\nREAL\nvisit_boolean\nBOOLEAN\nvisit_string\nSTRING\nvisit_file\nFILE\nvisit_int_array\nINTEGER_ARRAY\nvisit_real_array\nREAL_ARRAY\nvisit_bool_array\nBOOLEAN_ARRAY\nvisit_string_array\nSTRING_ARRAY\nvisit_file_array\nFILE_ARRAY"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#import-detail",
        "title": "FromFormattedStringVisitor > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#method-detail",
        "title": "FromFormattedStringVisitor > Method detail",
        "section": "Method detail",
        "text": "Visit the UNKNOWN variable type.\nResult, as documented by the implementing class.\nVisit the INTEGER variable type.\nResult, as documented by the implementing class.\nVisit the REAL variable type.\nResult, as documented by the implementing class.\nVisit the BOOLEAN variable type.\nResult, as documented by the implementing class.\nVisit the STRING variable type.\nResult, as documented by the implementing class.\nVisit the FILE variable type.\nResult, as documented by the implementing class.\nVisit the INTEGER_ARRAY variable type.\nResult, as documented by the implementing class.\nVisit the REAL_ARRAY variable type.\nResult, as documented by the implementing class.\nVisit the BOOLEAN_ARRAY variable type.\nResult, as documented by the implementing class.\nVisit the STRING_ARRAY variable type.\nResult, as documented by the implementing class.\nVisit the FILE_ARRAY variable type.\nResult, as documented by the implementing class.\nMethod detail\nUNKNOWN\nT\nINTEGER\nT\nREAL\nT\nBOOLEAN\nT\nSTRING\nT\nFILE\nT\nINTEGER_ARRAY\nT\nREAL_ARRAY\nT\nBOOLEAN_ARRAY\nT\nSTRING_ARRAY\nT\nFILE_ARRAY\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#FromFormattedStringVisitor.visit_unknown",
        "title": "FromFormattedStringVisitor > Method detail > visit_unknown",
        "section": "Method detail > visit_unknown",
        "text": "FromFormattedStringVisitor.visit_unknown() -> ansys.tools.variableinterop.variable_value.IVariableValue\n\nVisit the UNKNOWN variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#FromFormattedStringVisitor.visit_int",
        "title": "FromFormattedStringVisitor > Method detail > visit_int",
        "section": "Method detail > visit_int",
        "text": "FromFormattedStringVisitor.visit_int() -> ansys.tools.variableinterop.scalar_values.IntegerValue\n\nVisit the INTEGER variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#FromFormattedStringVisitor.visit_real",
        "title": "FromFormattedStringVisitor > Method detail > visit_real",
        "section": "Method detail > visit_real",
        "text": "FromFormattedStringVisitor.visit_real() -> ansys.tools.variableinterop.scalar_values.RealValue\n\nVisit the REAL variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#FromFormattedStringVisitor.visit_boolean",
        "title": "FromFormattedStringVisitor > Method detail > visit_boolean",
        "section": "Method detail > visit_boolean",
        "text": "FromFormattedStringVisitor.visit_boolean() -> ansys.tools.variableinterop.scalar_values.BooleanValue\n\nVisit the BOOLEAN variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#FromFormattedStringVisitor.visit_string",
        "title": "FromFormattedStringVisitor > Method detail > visit_string",
        "section": "Method detail > visit_string",
        "text": "FromFormattedStringVisitor.visit_string() -> ansys.tools.variableinterop.scalar_values.StringValue\n\nVisit the STRING variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#FromFormattedStringVisitor.visit_file",
        "title": "FromFormattedStringVisitor > Method detail > visit_file",
        "section": "Method detail > visit_file",
        "text": "FromFormattedStringVisitor.visit_file() -> ansys.tools.variableinterop.variable_value.IVariableValue\n\nVisit the FILE variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#FromFormattedStringVisitor.visit_int_array",
        "title": "FromFormattedStringVisitor > Method detail > visit_int_array",
        "section": "Method detail > visit_int_array",
        "text": "FromFormattedStringVisitor.visit_int_array() -> ansys.tools.variableinterop.variable_value.IVariableValue\n\nVisit the INTEGER_ARRAY variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#FromFormattedStringVisitor.visit_real_array",
        "title": "FromFormattedStringVisitor > Method detail > visit_real_array",
        "section": "Method detail > visit_real_array",
        "text": "FromFormattedStringVisitor.visit_real_array() -> ansys.tools.variableinterop.variable_value.IVariableValue\n\nVisit the REAL_ARRAY variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#FromFormattedStringVisitor.visit_bool_array",
        "title": "FromFormattedStringVisitor > Method detail > visit_bool_array",
        "section": "Method detail > visit_bool_array",
        "text": "FromFormattedStringVisitor.visit_bool_array() -> ansys.tools.variableinterop.variable_value.IVariableValue\n\nVisit the BOOLEAN_ARRAY variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#FromFormattedStringVisitor.visit_string_array",
        "title": "FromFormattedStringVisitor > Method detail > visit_string_array",
        "section": "Method detail > visit_string_array",
        "text": "FromFormattedStringVisitor.visit_string_array() -> ansys.tools.variableinterop.variable_value.IVariableValue\n\nVisit the STRING_ARRAY variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor",
        "href": "api/ansys/tools/variableinterop/from_formatted_string_visitor/FromFormattedStringVisitor.html#FromFormattedStringVisitor.visit_file_array",
        "title": "FromFormattedStringVisitor > Method detail > visit_file_array",
        "section": "Method detail > visit_file_array",
        "text": "FromFormattedStringVisitor.visit_file_array() -> ansys.tools.variableinterop.variable_value.IVariableValue\n\nVisit the FILE_ARRAY variable type.\n\nReturns\n\nT\n\nResult, as documented by the implementing class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.NonManagingFileValue",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.NonManagingFileValue.html#nonmanagingfilevalue",
        "title": "NonManagingFileValue",
        "section": "NonManagingFileValue",
        "text": "Bases: ansys.tools.variableinterop.file_value.LocalFileValue\nImplementation of a FileValue instance used by this scope.\nNonManagingFileValue\nNonManagingFileValue\nansys.tools.variableinterop.file_value.LocalFileValue\nFileValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.NonManagingFileValue",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.NonManagingFileValue.html#ansys.tools.variableinterop.non_managing_file_scope.NonManagingFileScope.NonManagingFileValue",
        "title": "NonManagingFileValue > NonManagingFileValue > NonManagingFileValue",
        "section": "NonManagingFileValue > NonManagingFileValue",
        "text": "class ansys.tools.variableinterop.non_managing_file_scope.NonManagingFileScope.NonManagingFileValue(to_read: os.PathLike, mime_type: str | None = None, encoding: str | None = None)\n\nBases: ansys.tools.variableinterop.file_value.LocalFileValue\n\nImplementation of a FileValue instance used by this scope.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.NonManagingFileValue",
        "href": "api/ansys/tools/variableinterop/non_managing_file_scope/NonManagingFileScope.NonManagingFileValue.html#import-detail",
        "title": "NonManagingFileValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/value_from_formatted_string/index",
        "href": "api/ansys/tools/variableinterop/value_from_formatted_string/index.html#the-value_from_formatted_stringpy-module",
        "title": "The value_from_formatted_string.py module",
        "section": "The value_from_formatted_string.py module",
        "text": "The value_from_formatted_string.py module\nvalue_from_formatted_string.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/value_from_formatted_string/index",
        "href": "api/ansys/tools/variableinterop/value_from_formatted_string/index.html#summary",
        "title": "The value_from_formatted_string.py module > Summary",
        "section": "Summary",
        "text": "from_formatted_string\nConvert a value formatted to a specific locale back into an IVariableValue.\nSummary\nfrom_formatted_string"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/value_from_formatted_string/index",
        "href": "api/ansys/tools/variableinterop/value_from_formatted_string/index.html#description",
        "title": "The value_from_formatted_string.py module > Description",
        "section": "Description",
        "text": "Provides a method for converting a formatted string to a value.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/value_from_formatted_string/index",
        "href": "api/ansys/tools/variableinterop/value_from_formatted_string/index.html#module-detail",
        "title": "The value_from_formatted_string.py module > Module detail",
        "section": "Module detail",
        "text": "Convert a value formatted to a specific locale back into an IVariableValue.\nThe type of variable to convert to.\nThe string to convert.\nThe locale the string was formatted in.\nAn IVariableValue of the specified type whose value matches the given string.\nModule detail\nVariableType\npython:str\npython:str\nIVariableValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/value_from_formatted_string/index",
        "href": "api/ansys/tools/variableinterop/value_from_formatted_string/index.html#value_from_formatted_string.from_formatted_string",
        "title": "The value_from_formatted_string.py module > Module detail > from_formatted_string",
        "section": "Module detail > from_formatted_string",
        "text": "value_from_formatted_string.from_formatted_string(var_type: ansys.tools.variableinterop.variable_type.VariableType, source: str, locale_name: str) -> ansys.tools.variableinterop.variable_value.IVariableValue\n\nConvert a value formatted to a specific locale back into an IVariableValue.\n\nParameters\n\nvar_type\n\nVariableType\n\nThe type of variable to convert to.\n\nsource\n\npython:str\n\nThe string to convert.\n\nlocale_name\n\npython:str\n\nThe locale the string was formatted in.\n\nReturns\n\nIVariableValue\n\nAn IVariableValue of the specified type whose value matches the given string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/string_escaping/index",
        "href": "api/ansys/tools/variableinterop/utils/string_escaping/index.html#the-string_escapingpy-module",
        "title": "The string_escaping.py module",
        "section": "The string_escaping.py module",
        "text": "The string_escaping.py module\nstring_escaping.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/string_escaping/index",
        "href": "api/ansys/tools/variableinterop/utils/string_escaping/index.html#summary",
        "title": "The string_escaping.py module > Summary",
        "section": "Summary",
        "text": "escape_string\nEscape a string according to ModelCenter conventions.\nunescape_string\nUnescape a string according to ModelCenter conventions.\nSummary\nescape_string\nunescape_string\nModelCenter"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/string_escaping/index",
        "href": "api/ansys/tools/variableinterop/utils/string_escaping/index.html#description",
        "title": "The string_escaping.py module > Description",
        "section": "Description",
        "text": "Provides functions for ModelCenter-standard string escaping.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/string_escaping/index",
        "href": "api/ansys/tools/variableinterop/utils/string_escaping/index.html#module-detail",
        "title": "The string_escaping.py module > Module detail",
        "section": "Module detail",
        "text": "Escape a string according to ModelCenter conventions.\nThe following characters are escaped: backslash, newline,\ncarriage return, tab, double-quote, and null. Backslash is itself\nused as an escape character.\nUnescaped string.\nString with the specified characters escaped.\nUnescape a string according to ModelCenter conventions.\nThe escape sequences \\n, \\r, \\t, and \\0 are transformed into\nnewline, carriage return, tab, and null respectively. In other\ncases where a backslash appears, it is simply removed\nand the following character is allowed to remain. (Note that this\nalso results in the correct behavior for double-quotatoin marks and\nthe backslash itself, even though those characters are escaped by\nthe escape_string() method.)\nString with the escape sequences.\nString with the escape sequences undone.\nModule detail\npython:str\npython:str\nModelCenter\n\\n\n\\r\n\\t\n\\0\nescape_string()\npython:str\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/string_escaping/index",
        "href": "api/ansys/tools/variableinterop/utils/string_escaping/index.html#string_escaping.escape_string",
        "title": "The string_escaping.py module > Module detail > escape_string",
        "section": "Module detail > escape_string",
        "text": "string_escaping.escape_string(unescaped: str) -> str\n\nEscape a string according to ModelCenter conventions.\n\nThe following characters are escaped: backslash, newline,\ncarriage return, tab, double-quote, and null. Backslash is itself\nused as an escape character.\n\nParameters\n\nunescaped\n\npython:str\n\nUnescaped string.\n\nReturns\n\npython:str\n\nString with the specified characters escaped.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/string_escaping/index",
        "href": "api/ansys/tools/variableinterop/utils/string_escaping/index.html#string_escaping.unescape_string",
        "title": "The string_escaping.py module > Module detail > unescape_string",
        "section": "Module detail > unescape_string",
        "text": "string_escaping.unescape_string(escaped: str) -> str\n\nUnescape a string according to ModelCenter conventions.\n\nThe escape sequences \\n, \\r, \\t, and \\0 are transformed into\nnewline, carriage return, tab, and null respectively. In other\ncases where a backslash appears, it is simply removed\nand the following character is allowed to remain. (Note that this\nalso results in the correct behavior for double-quotatoin marks and\nthe backslash itself, even though those characters are escaped by\nthe escape_string() method.)\n\nParameters\n\nescaped\n\npython:str\n\nString with the escape sequences.\n\nReturns\n\npython:str\n\nString with the escape sequences undone.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/index",
        "href": "api/ansys/tools/variableinterop/isave_context/index.html#the-isave_contextpy-module",
        "title": "The isave_context.py module",
        "section": "The isave_context.py module",
        "text": "The isave_context.py module\nisave_context.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/index",
        "href": "api/ansys/tools/variableinterop/isave_context/index.html#summary",
        "title": "The isave_context.py module > Summary",
        "section": "Summary",
        "text": "ISaveContext\nDefines an abstraction for a save medium.\nILoadContext\nDefines an abstraction for a load medium.\nSummary\nISaveContext\nILoadContext"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/index",
        "href": "api/ansys/tools/variableinterop/isave_context/index.html#description",
        "title": "The isave_context.py module > Description",
        "section": "Description",
        "text": "Defines the ISaveContext class.\nDescription\nISaveContext"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/index",
        "href": "api/ansys/tools/variableinterop/array_values/index.html#the-array_valuespy-module",
        "title": "The array_values.py module",
        "section": "The array_values.py module",
        "text": "The array_values.py module\narray_values.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/index",
        "href": "api/ansys/tools/variableinterop/array_values/index.html#summary",
        "title": "The array_values.py module > Summary",
        "section": "Summary",
        "text": "BooleanArrayValue\nStores a value as a BooleanArrayValue variable type.\nIntegerArrayValue\nStores a value as an IntegerArrayValue variable type.\nRealArrayValue\nStores a value as a RealArrayValue variable type.\nStringArrayValue\nStores a value as a StringArrayValue variable type.\nT\nSummary\nBooleanArrayValue\nBooleanArrayValue\nIntegerArrayValue\nIntegerArrayValue\nRealArrayValue\nRealArrayValue\nStringArrayValue\nStringArrayValue\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/index",
        "href": "api/ansys/tools/variableinterop/array_values/index.html#description",
        "title": "The array_values.py module > Description",
        "section": "Description",
        "text": "Defines all array value implementations of the IVariableValue variable type.\nDescription\nIVariableValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/index",
        "href": "api/ansys/tools/variableinterop/array_values/index.html#module-detail",
        "title": "The array_values.py module > Module detail",
        "section": "Module detail",
        "text": "Module detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/index",
        "href": "api/ansys/tools/variableinterop/array_values/index.html#array_values.T",
        "title": "The array_values.py module > Module detail > T",
        "section": "Module detail > T",
        "text": "array_values.T\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext.html#asynclocalfilecontentcontext",
        "title": "AsyncLocalFileContentContext",
        "section": "AsyncLocalFileContentContext",
        "text": "Bases: contextlib.AbstractAsyncContextManager, abc.ABC\nRepresents the context during which a locally available copy of file value content\nshould exist.\nThis is intended for use with an async implementation.\nAsyncLocalFileContentContext\nAsyncLocalFileContentContext\ncontextlib.AbstractAsyncContextManager\nabc.ABC"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext.html#ansys.tools.variableinterop.file_value.AsyncLocalFileContentContext",
        "title": "AsyncLocalFileContentContext > AsyncLocalFileContentContext > AsyncLocalFileContentContext",
        "section": "AsyncLocalFileContentContext > AsyncLocalFileContentContext",
        "text": "class ansys.tools.variableinterop.file_value.AsyncLocalFileContentContext\n\nBases: contextlib.AbstractAsyncContextManager, abc.ABC\n\nRepresents the context during which a locally available copy of file value content\nshould exist.\n\nThis is intended for use with an async implementation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext.html#overview",
        "title": "AsyncLocalFileContentContext > Overview",
        "section": "Overview",
        "text": "keep_file_on_exit\nCall this method before exiting to prevent deleting the file on exit.\ncontent_path\nGet the local path to the content.\nOverview\nkeep_file_on_exit\ncontent_path"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext.html#import-detail",
        "title": "AsyncLocalFileContentContext > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext.html#property-detail",
        "title": "AsyncLocalFileContentContext > Property detail",
        "section": "Property detail",
        "text": "Get the local path to the content.\nProperty detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext.html#AsyncLocalFileContentContext.content_path",
        "title": "AsyncLocalFileContentContext > Property detail > content_path",
        "section": "Property detail > content_path",
        "text": "property AsyncLocalFileContentContext.content_path: anyio.Path\n\nAbstractmethod\n\n\n\nGet the local path to the content.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext.html#method-detail",
        "title": "AsyncLocalFileContentContext > Method detail",
        "section": "Method detail",
        "text": "Call this method before exiting to prevent deleting the file on exit.\nMethod detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AsyncLocalFileContentContext.html#AsyncLocalFileContentContext.keep_file_on_exit",
        "title": "AsyncLocalFileContentContext > Method detail > keep_file_on_exit",
        "section": "Method detail > keep_file_on_exit",
        "text": "abstract AsyncLocalFileContentContext.keep_file_on_exit() -> None\n\nCall this method before exiting to prevent deleting the file on exit.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#booleanvalue",
        "title": "BooleanValue",
        "section": "BooleanValue",
        "text": "Bases: ansys.tools.variableinterop.variable_value.IVariableValue\nStores a value as a BooleanValue variable type.\nThis type is treated by Python as if it were any other Boolean type, such as\nnumpy.bool\\_ or a built-in Boolean.\nBooleanValue\nBooleanValue\nansys.tools.variableinterop.variable_value.IVariableValue\nBooleanValue\nnumpy.bool\\_"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#ansys.tools.variableinterop.scalar_values.BooleanValue",
        "title": "BooleanValue > BooleanValue > BooleanValue",
        "section": "BooleanValue > BooleanValue",
        "text": "class ansys.tools.variableinterop.scalar_values.BooleanValue(source: object = None)\n\nBases: ansys.tools.variableinterop.variable_value.IVariableValue\n\nStores a value as a BooleanValue variable type.\n\nThis type is treated by Python as if it were any other Boolean type, such as\nnumpy.bool\\_ or a built-in Boolean.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#overview",
        "title": "BooleanValue > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nto_api_string\nConvert the value to an API string.\nto_real_value\nConvert a given BooleanValue type to a RealValue type.\nto_integer_value\nConvert a given BooleanValue type to an IntegerValue type.\nto_display_string\nConvert the value to a formatted string.\nvariable_type\nVariable type of the object.\napi_str_to_bool\nMapping of acceptable normalized values for API string conversion to their\nint64_to_bool\nConvert a NumPy int64 type to a Boolean value per interchange\nint_to_bool\nConvert an integer to a Boolean value per interchange specifications.\nfloat_to_bool\nConvert a float value to a Boolean value per interchange specifications.\nstr_to_bool\nConvert a string to a Boolean value per interchange specifications.\nfrom_api_string\nConvert an API string back into a BooleanValue type.\n__add__\nMagic method add.\n__and__\nMagic method and.\n__bool__\nMagic method bool.\n__eq__\n__floordiv__\nMagic method floordiv.\n__gt__\nMagic method gt.\n__ge__\nMagic method ge.\n__hash__\n__lshift__\nMagic method lshift.\n__mod__\nMagic method mod.\n__mul__\nMagic method mul.\n__ne__\n__or__\nMagic method or.\n__pow__\nMagic method pow.\n__rshift__\nMagic method rshift.\n__str__\n__truediv__\nMagic method truediv.\n__xor__\nMagic method xor.\nOverview\naccept\nto_api_string\nto_real_value\nBooleanValue\nRealValue\nto_integer_value\nBooleanValue\nIntegerValue\nto_display_string\nvariable_type\napi_str_to_bool\nint64_to_bool\nint_to_bool\nfloat_to_bool\nstr_to_bool\nfrom_api_string\nBooleanValue\n__add__\n__and__\n__bool__\n__eq__\n__floordiv__\n__gt__\n__ge__\n__hash__\n__lshift__\n__mod__\n__mul__\n__ne__\n__or__\n__pow__\n__rshift__\n__str__\n__truediv__\n__xor__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#import-detail",
        "title": "BooleanValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#property-detail",
        "title": "BooleanValue > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.variable_type",
        "title": "BooleanValue > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property BooleanValue.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#attribute-detail",
        "title": "BooleanValue > Attribute detail",
        "section": "Attribute detail",
        "text": "Mapping of acceptable normalized values for API string conversion to their\ncorresponding Boolean value.\nAttribute detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.api_str_to_bool",
        "title": "BooleanValue > Attribute detail > api_str_to_bool",
        "section": "Attribute detail > api_str_to_bool",
        "text": "BooleanValue.api_str_to_bool: Dict[str, bool]\n\nMapping of acceptable normalized values for API string conversion to their\ncorresponding Boolean value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#method-detail",
        "title": "BooleanValue > Method detail",
        "section": "Method detail",
        "text": "Convert a NumPy int64 type to a Boolean value per interchange\nspecifications.\nConvert an integer to a Boolean value per interchange specifications.\nConvert a float value to a Boolean value per interchange specifications.\nConvert a string to a Boolean value per interchange specifications.\nMagic method add.\nMagic method and.\nMagic method bool.\nMagic method floordiv.\nMagic method gt.\nMagic method ge.\nMagic method lshift.\nMagic method mod.\nMagic method mul.\nMagic method or.\nMagic method pow.\nMagic method rshift.\nMagic method truediv.\nMagic method xor.\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nConvert the value to an API string.\nString appropriate for use in files and APIs.\nConvert a given BooleanValue type to a RealValue type.\nTrue is converted to 1.0,  and False is converted to 0.0.\nRealValue type with value representing the original BooleanValue type.\nConvert an API string back into a BooleanValue type.\nThe conversion is performed according to the type\ninteroperability specifications.\nValues that are parseable as floating-point numbers\nare parsed in that manner and then converted to a BooleanValue type.\nValues that are non-numeric are checked to see if they match\nany of the following values.  The comparison is case-insensitive.\nFor True: \"true\", \"yes\", or \"y\".\nFor False: \"false\", \"no\", or \"n\".\nValues not interpretable result in a ValueError.\nString to parse.\nBooleanValue type parsed from the API string.\nConvert a given BooleanValue type to an IntegerValue type.\nTrue is converted to 1, and False is converted to 0.\nIntegerValue type with the value representing the original BooleanValue type.\nConvert the value to a formatted string.\nLocale to format the string in.\nString appropriate for use in user-facing areas.\nMethod detail\nIVariableValueVisitor\nT\npython:str\nBooleanValue\nRealValue\nTrue\n1.0\nFalse\n0.0\nRealValue\nRealValue\nBooleanValue\nBooleanValue\nBooleanValue\nTrue\n\"true\"\n\"yes\"\n\"y\"\nFalse\n\"false\"\n\"no\"\n\"n\"\nValueError\npython:str\nBooleanValue\nBooleanValue\nBooleanValue\nIntegerValue\nTrue\n1\nFalse\n0\nIntegerValue\nIntegerValue\nBooleanValue\npython:str\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.int64_to_bool",
        "title": "BooleanValue > Method detail > int64_to_bool",
        "section": "Method detail > int64_to_bool",
        "text": "static BooleanValue.int64_to_bool(val: numpy.int64) -> bool\n\nConvert a NumPy int64 type to a Boolean value per interchange\nspecifications.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.int_to_bool",
        "title": "BooleanValue > Method detail > int_to_bool",
        "section": "Method detail > int_to_bool",
        "text": "static BooleanValue.int_to_bool(val: int) -> bool\n\nConvert an integer to a Boolean value per interchange specifications.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.float_to_bool",
        "title": "BooleanValue > Method detail > float_to_bool",
        "section": "Method detail > float_to_bool",
        "text": "static BooleanValue.float_to_bool(val: float) -> bool\n\nConvert a float value to a Boolean value per interchange specifications.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.str_to_bool",
        "title": "BooleanValue > Method detail > str_to_bool",
        "section": "Method detail > str_to_bool",
        "text": "static BooleanValue.str_to_bool(val: str) -> bool\n\nConvert a string to a Boolean value per interchange specifications.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__add__",
        "title": "BooleanValue > Method detail > __add__",
        "section": "Method detail > __add__",
        "text": "BooleanValue.__add__(other)\n\nMagic method add.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__and__",
        "title": "BooleanValue > Method detail > __and__",
        "section": "Method detail > __and__",
        "text": "BooleanValue.__and__(other)\n\nMagic method and.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__bool__",
        "title": "BooleanValue > Method detail > __bool__",
        "section": "Method detail > __bool__",
        "text": "BooleanValue.__bool__()\n\nMagic method bool.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__eq__",
        "title": "BooleanValue > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "BooleanValue.__eq__(other)\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__floordiv__",
        "title": "BooleanValue > Method detail > __floordiv__",
        "section": "Method detail > __floordiv__",
        "text": "BooleanValue.__floordiv__(other)\n\nMagic method floordiv.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__gt__",
        "title": "BooleanValue > Method detail > __gt__",
        "section": "Method detail > __gt__",
        "text": "BooleanValue.__gt__(other)\n\nMagic method gt.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__ge__",
        "title": "BooleanValue > Method detail > __ge__",
        "section": "Method detail > __ge__",
        "text": "BooleanValue.__ge__(other)\n\nMagic method ge.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__hash__",
        "title": "BooleanValue > Method detail > __hash__",
        "section": "Method detail > __hash__",
        "text": "BooleanValue.__hash__()\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__lshift__",
        "title": "BooleanValue > Method detail > __lshift__",
        "section": "Method detail > __lshift__",
        "text": "BooleanValue.__lshift__(other)\n\nMagic method lshift.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__mod__",
        "title": "BooleanValue > Method detail > __mod__",
        "section": "Method detail > __mod__",
        "text": "BooleanValue.__mod__(other)\n\nMagic method mod.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__mul__",
        "title": "BooleanValue > Method detail > __mul__",
        "section": "Method detail > __mul__",
        "text": "BooleanValue.__mul__(other)\n\nMagic method mul.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__ne__",
        "title": "BooleanValue > Method detail > __ne__",
        "section": "Method detail > __ne__",
        "text": "BooleanValue.__ne__(other)\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__or__",
        "title": "BooleanValue > Method detail > __or__",
        "section": "Method detail > __or__",
        "text": "BooleanValue.__or__(other)\n\nMagic method or.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__pow__",
        "title": "BooleanValue > Method detail > __pow__",
        "section": "Method detail > __pow__",
        "text": "BooleanValue.__pow__(other)\n\nMagic method pow.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__rshift__",
        "title": "BooleanValue > Method detail > __rshift__",
        "section": "Method detail > __rshift__",
        "text": "BooleanValue.__rshift__(other)\n\nMagic method rshift.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__str__",
        "title": "BooleanValue > Method detail > __str__",
        "section": "Method detail > __str__",
        "text": "BooleanValue.__str__()\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__truediv__",
        "title": "BooleanValue > Method detail > __truediv__",
        "section": "Method detail > __truediv__",
        "text": "BooleanValue.__truediv__(other)\n\nMagic method truediv.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.__xor__",
        "title": "BooleanValue > Method detail > __xor__",
        "section": "Method detail > __xor__",
        "text": "BooleanValue.__xor__(other)\n\nMagic method xor.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.accept",
        "title": "BooleanValue > Method detail > accept",
        "section": "Method detail > accept",
        "text": "BooleanValue.accept(visitor: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[ansys.tools.variableinterop.ivariable_visitor.T]) -> ansys.tools.variableinterop.ivariable_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableValueVisitor\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.to_api_string",
        "title": "BooleanValue > Method detail > to_api_string",
        "section": "Method detail > to_api_string",
        "text": "BooleanValue.to_api_string(context: ansys.tools.variableinterop.isave_context.ISaveContext | None = None) -> str\n\nConvert the value to an API string.\n\nReturns\n\npython:str\n\nString appropriate for use in files and APIs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.to_real_value",
        "title": "BooleanValue > Method detail > to_real_value",
        "section": "Method detail > to_real_value",
        "text": "BooleanValue.to_real_value() -> RealValue\n\nConvert a given BooleanValue type to a RealValue type.\n\nTrue is converted to 1.0,  and False is converted to 0.0.\n\nReturns\n\nRealValue\n\nRealValue type with value representing the original BooleanValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.from_api_string",
        "title": "BooleanValue > Method detail > from_api_string",
        "section": "Method detail > from_api_string",
        "text": "static BooleanValue.from_api_string(value: str) -> BooleanValue\n\nConvert an API string back into a BooleanValue type.\n\nThe conversion is performed according to the type\ninteroperability specifications.\n\nValues that are parseable as floating-point numbers\nare parsed in that manner and then converted to a BooleanValue type.\n\nValues that are non-numeric are checked to see if they match\nany of the following values.  The comparison is case-insensitive.\n\nFor True: \"true\", \"yes\", or \"y\".\n\nFor False: \"false\", \"no\", or \"n\".\n\nValues not interpretable result in a ValueError.\n\nParameters\n\nvalue\n\npython:str\n\nString to parse.\n\nReturns\n\nBooleanValue\n\nBooleanValue type parsed from the API string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.to_integer_value",
        "title": "BooleanValue > Method detail > to_integer_value",
        "section": "Method detail > to_integer_value",
        "text": "BooleanValue.to_integer_value() -> IntegerValue\n\nConvert a given BooleanValue type to an IntegerValue type.\n\nTrue is converted to 1, and False is converted to 0.\n\nReturns\n\nIntegerValue\n\nIntegerValue type with the value representing the original BooleanValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/BooleanValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/BooleanValue.html#BooleanValue.to_display_string",
        "title": "BooleanValue > Method detail > to_display_string",
        "section": "Method detail > to_display_string",
        "text": "BooleanValue.to_display_string(locale_name: str) -> str\n\nConvert the value to a formatted string.\n\nParameters\n\nlocale_name\n\npython:str\n\nLocale to format the string in.\n\nReturns\n\npython:str\n\nString appropriate for use in user-facing areas.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/index",
        "href": "api/ansys/tools/variableinterop/file_array_value/index.html#the-file_array_valuepy-module",
        "title": "The file_array_value.py module",
        "section": "The file_array_value.py module",
        "text": "The file_array_value.py module\nfile_array_value.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/index",
        "href": "api/ansys/tools/variableinterop/file_array_value/index.html#summary",
        "title": "The file_array_value.py module > Summary",
        "section": "Summary",
        "text": "FileArrayValue\nStores a value for the FileArrayValue variable type.\nT\nSummary\nFileArrayValue\nFileArrayValue\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/index",
        "href": "api/ansys/tools/variableinterop/file_array_value/index.html#description",
        "title": "The file_array_value.py module > Description",
        "section": "Description",
        "text": "Defines the FileArrayValue class.\nDescription\nFileArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/index",
        "href": "api/ansys/tools/variableinterop/file_array_value/index.html#module-detail",
        "title": "The file_array_value.py module > Module detail",
        "section": "Module detail",
        "text": "Module detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/index",
        "href": "api/ansys/tools/variableinterop/file_array_value/index.html#file_array_value.T",
        "title": "The file_array_value.py module > Module detail > T",
        "section": "Module detail > T",
        "text": "file_array_value.T\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#filevalue",
        "title": "FileValue",
        "section": "FileValue",
        "text": "Bases: ansys.tools.variableinterop.variable_value.IVariableValue, abc.ABC\nProvides an abstract base class for FileValue implementations.\nTo create instances, use the FileScope class.\nFileValue\nFileValue\nansys.tools.variableinterop.variable_value.IVariableValue\nabc.ABC\nFileValue\nFileScope"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#ansys.tools.variableinterop.file_value.FileValue",
        "title": "FileValue > FileValue > FileValue",
        "section": "FileValue > FileValue",
        "text": "class ansys.tools.variableinterop.file_value.FileValue(original_path: os.PathLike | None = None, mime_type: str | None = None, encoding: str | None = None, value_id: uuid.UUID | None = None, file_size: int | None = None)\n\nBases: ansys.tools.variableinterop.variable_value.IVariableValue, abc.ABC\n\nProvides an abstract base class for FileValue implementations.\n\nTo create instances, use the FileScope class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#overview",
        "title": "FileValue > Overview",
        "section": "Overview",
        "text": "get_reference_to_actual_content_file_async\nRealize the file contents to a local filesystem if needed.\nget_reference_to_actual_content_file\nRealizes the file contents to a local filesystem if needed.\nis_text_based_static\nDetermines if a file is text-based via its MIME type.\naccept\nInvoke the visitor pattern of this object using the passed-in visitor\nto_display_string\nConvert the value to a formatted string.\nwrite_file\nWrite the file’s contents to a new file.\nget_contents\nRead the contents of the file as a string.\nto_api_string\nConvert the value to an API string using a save context.\nto_api_object\nConvert this file to an API object.\nget_extension\nGet the file extension of the file, including the period.\nvariable_type\nVariable type of the object.\nmime_type\nMIME type of the file.\noriginal_file_name\nName of the original file that was wrapped.\nextension\nExtension of the file.\nfile_encoding\nEncoding of the file.\nid\nID of the file.\nfile_size\nSize of the file in bytes if known.\nis_text_based\nFlag indicating if this file is text-based via its MIME type.\nBINARY_MIMETYPE\nTEXT_MIMETYPE\nORIGINAL_FILENAME_KEY\nJSON key for API serialization representing the original file name.\nMIMETYPE_KEY\nENCODING_KEY\nCONTENTS_KEY\nSIZE_KEY\nread_bom\nOpen a file for reading and detect a byte order mark at the beginning.\n__eq__\n__hash__\nOverview\nget_reference_to_actual_content_file_async\nget_reference_to_actual_content_file\nis_text_based_static\naccept\nto_display_string\nwrite_file\nget_contents\nto_api_string\nto_api_object\nget_extension\nvariable_type\nmime_type\noriginal_file_name\nextension\nfile_encoding\nid\nfile_size\nis_text_based\nBINARY_MIMETYPE\nTEXT_MIMETYPE\nORIGINAL_FILENAME_KEY\nMIMETYPE_KEY\nENCODING_KEY\nCONTENTS_KEY\nSIZE_KEY\nread_bom\n__eq__\n__hash__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#import-detail",
        "title": "FileValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#property-detail",
        "title": "FileValue > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nMIME type of the file.\nName of the original file that was wrapped.\nExtension of the file.\nEncoding of the file.\nID of the file.\nID that identifies the file.\nSize of the file in bytes if known.\nA value of None indicates that the file size is not known,\nnot that the file size is zero bytes.\nFlag indicating if this file is text-based via its MIME type.\nTrue if the MIME type starts with text or is application/json,\nFalse otherwise.\nProperty detail\nVariableType\nUUID\nNone\nTrue\ntext\napplication/json\nFalse"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.variable_type",
        "title": "FileValue > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property FileValue.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.mime_type",
        "title": "FileValue > Property detail > mime_type",
        "section": "Property detail > mime_type",
        "text": "property FileValue.mime_type: str\n\nMIME type of the file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.original_file_name",
        "title": "FileValue > Property detail > original_file_name",
        "section": "Property detail > original_file_name",
        "text": "property FileValue.original_file_name: os.PathLike | None\n\nName of the original file that was wrapped.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.extension",
        "title": "FileValue > Property detail > extension",
        "section": "Property detail > extension",
        "text": "property FileValue.extension: str\n\nAbstractmethod\n\n\n\nExtension of the file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.file_encoding",
        "title": "FileValue > Property detail > file_encoding",
        "section": "Property detail > file_encoding",
        "text": "property FileValue.file_encoding: str | None\n\nEncoding of the file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.id",
        "title": "FileValue > Property detail > id",
        "section": "Property detail > id",
        "text": "property FileValue.id: uuid.UUID\n\nID of the file.\n\nReturns\n\nUUID\n\nID that identifies the file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.file_size",
        "title": "FileValue > Property detail > file_size",
        "section": "Property detail > file_size",
        "text": "property FileValue.file_size: int | None\n\nSize of the file in bytes if known.\n\nA value of None indicates that the file size is not known,\nnot that the file size is zero bytes.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.is_text_based",
        "title": "FileValue > Property detail > is_text_based",
        "section": "Property detail > is_text_based",
        "text": "property FileValue.is_text_based: bool | None\n\nFlag indicating if this file is text-based via its MIME type.\n\nReturns\n\nbool\n\nTrue if the MIME type starts with text or is application/json,\nFalse otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#attribute-detail",
        "title": "FileValue > Attribute detail",
        "section": "Attribute detail",
        "text": "JSON key for API serialization representing the original file name.\nAttribute detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.BINARY_MIMETYPE",
        "title": "FileValue > Attribute detail > BINARY_MIMETYPE",
        "section": "Attribute detail > BINARY_MIMETYPE",
        "text": "FileValue.BINARY_MIMETYPE: Final[str] = 'application/octet-stream'\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.TEXT_MIMETYPE",
        "title": "FileValue > Attribute detail > TEXT_MIMETYPE",
        "section": "Attribute detail > TEXT_MIMETYPE",
        "text": "FileValue.TEXT_MIMETYPE: Final[str] = 'text/plain'\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.ORIGINAL_FILENAME_KEY",
        "title": "FileValue > Attribute detail > ORIGINAL_FILENAME_KEY",
        "section": "Attribute detail > ORIGINAL_FILENAME_KEY",
        "text": "FileValue.ORIGINAL_FILENAME_KEY: Final[str] = 'originalFilename'\n\nJSON key for API serialization representing the original file name.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.MIMETYPE_KEY",
        "title": "FileValue > Attribute detail > MIMETYPE_KEY",
        "section": "Attribute detail > MIMETYPE_KEY",
        "text": "FileValue.MIMETYPE_KEY: Final[str] = 'mimeType'\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.ENCODING_KEY",
        "title": "FileValue > Attribute detail > ENCODING_KEY",
        "section": "Attribute detail > ENCODING_KEY",
        "text": "FileValue.ENCODING_KEY: Final[str] = 'encoding'\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.CONTENTS_KEY",
        "title": "FileValue > Attribute detail > CONTENTS_KEY",
        "section": "Attribute detail > CONTENTS_KEY",
        "text": "FileValue.CONTENTS_KEY: Final[str] = 'contents'\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.SIZE_KEY",
        "title": "FileValue > Attribute detail > SIZE_KEY",
        "section": "Attribute detail > SIZE_KEY",
        "text": "FileValue.SIZE_KEY: Final[str] = 'size'\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#method-detail",
        "title": "FileValue > Method detail",
        "section": "Method detail",
        "text": "Invoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nConvert the value to a formatted string.\nLocale to format the string in.\nString appropriate for use in user-facing areas.\nOpen a file for reading and detect a byte order mark at the beginning.\nFile to read.\nIf the file contains a BOM, an appropriate encoding is returned.\nIf the file does not contain a BOM, None is returned.\nWrite the file’s contents to a new file.\nPath to the file to create.\nRealize the file contents to a local filesystem if needed.\nThe FileValue instance is intended to represent an immutable value. The file\nreturned by this call may point to a cached file or even the original file. Callers\nmust not modify the file on disk. Otherwise, undefined behaviors, including class 3 errors,\nmay occur. If the caller needs to modify the file, consider using the write_file\nmethod or copying the file before modifying it.\nCallback that can be called to indicate progress in realizing the local copy.\nThe default is None, in which case this method makes no attempt\nto report its progress. This method may call a provided callback with a\npercentage value between 0 and 100 inclusive. The provided callback may not\nnecessarily be called at all, and calls for 0 or 100 percent are not guaranteed,\neven if other calls occur.\nContext manager that, when exited, deletes the local copy\nif it is a temporary file.\nRealizes the file contents to a local filesystem if needed.\nThe FileValue instance is intended to represent an immutable value. The file\nreturned by this call may point to a cached file or even the original file. Callers\nmust not modify the file on disk. Otherwise, undefined behaviors, including class 3 errors,\nmay occur. If the caller needs to modify the file, consider using the write_file\nmethod or copying the file before modifying it.\nCallback that can be called to indicate progress in realizing the local copy.\nThe default is None, in which case this method makes no attempt\nto report its progress. This method may call a provided callback with a\npercentage value between 0 and 100 inclusive. The provided callback may not\nnecessarily be called at all, and calls for 0 or 100 percent are not guaranteed,\neven if other calls occur.\nContext manager that, when exited, deletes the local copy\nif it is a temporary file.\nDetermines if a file is text-based via its MIME type.\nFile’s MIME type.\nTrue if the MIME type starts with text or is an application (JSON),\nFalse otherwise.\nRead the contents of the file as a string.\nEncoding to use when reading. The default is None, in which case the\ncurrent locale’s encoding is used.\nContents of the file as a string.\nConvert the value to an API string using a save context.\nSave context to use. The default value is None,\nin which case file values are not supported.\nString appropriate for use in files and APIs.\nConvert this file to an API object.\nSave context to use for the conversion.\nAPI object that matches this FileValue instance.\nGet the file extension of the file, including the period.\nIf the file extension is not known, .tmp is returned.\nFile extension of the file if known, \".tmp\" otherwise.\nMethod detail\nIVariableValueVisitor\nT\npython:str\npython:str\npython:str\npython:str\nNone\nPathLike\npython:None\nFileValue\nwrite_file\nOptional\nCallable\npython:int\npython:None\noptional\nNone\nAsyncLocalFileContentContext\nFileValue\nwrite_file\nOptional\nCallable\npython:int\npython:None\noptional\nNone\nLocalFileContentContext\npython:str\nOptional\nTrue\nFalse\nOptional\npython:str\noptional\nNone\npython:str\nOptional\nISaveContext\noptional\nNone\npython:str\nISaveContext\nDict\npython:str\nOptional\npython:str\nFileValue\n.tmp\npython:str\n\".tmp\""
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.__eq__",
        "title": "FileValue > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "FileValue.__eq__(other)\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.__hash__",
        "title": "FileValue > Method detail > __hash__",
        "section": "Method detail > __hash__",
        "text": "FileValue.__hash__()\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.accept",
        "title": "FileValue > Method detail > accept",
        "section": "Method detail > accept",
        "text": "FileValue.accept(visitor: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[T]) -> T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableValueVisitor\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.to_display_string",
        "title": "FileValue > Method detail > to_display_string",
        "section": "Method detail > to_display_string",
        "text": "FileValue.to_display_string(locale_name: str) -> str\n\nConvert the value to a formatted string.\n\nParameters\n\nlocale_name\n\npython:str\n\nLocale to format the string in.\n\nReturns\n\npython:str\n\nString appropriate for use in user-facing areas.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.read_bom",
        "title": "FileValue > Method detail > read_bom",
        "section": "Method detail > read_bom",
        "text": "static FileValue.read_bom(filename: str) -> str\n\nOpen a file for reading and detect a byte order mark at the beginning.\n\nParameters\n\nfilename\n\npython:str\n\nFile to read.\n\nReturns\n\npython:str\n\nIf the file contains a BOM, an appropriate encoding is returned.\nIf the file does not contain a BOM, None is returned.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.write_file",
        "title": "FileValue > Method detail > write_file",
        "section": "Method detail > write_file",
        "text": "async FileValue.write_file(file_name: os.PathLike) -> None\n\nWrite the file’s contents to a new file.\n\nParameters\n\nfile_name\n\nPathLike\n\nPath to the file to create.\n\nReturns\n\npython:None\n\n\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.get_reference_to_actual_content_file_async",
        "title": "FileValue > Method detail > get_reference_to_actual_content_file_async",
        "section": "Method detail > get_reference_to_actual_content_file_async",
        "text": "abstract FileValue.get_reference_to_actual_content_file_async(progress_callback: Callable[[int], None] | None = None) -> AsyncLocalFileContentContext\n\nAsync\n\n\n\nRealize the file contents to a local filesystem if needed.\n\nThe FileValue instance is intended to represent an immutable value. The file\nreturned by this call may point to a cached file or even the original file. Callers\nmust not modify the file on disk. Otherwise, undefined behaviors, including class 3 errors,\nmay occur. If the caller needs to modify the file, consider using the write_file\nmethod or copying the file before modifying it.\n\nParameters\n\nprogress_callback\n\nOptional[Callable[[python:int], python:None]], optional\n\nCallback that can be called to indicate progress in realizing the local copy.\nThe default is None, in which case this method makes no attempt\nto report its progress. This method may call a provided callback with a\npercentage value between 0 and 100 inclusive. The provided callback may not\nnecessarily be called at all, and calls for 0 or 100 percent are not guaranteed,\neven if other calls occur.\n\nReturns\n\nAsyncLocalFileContentContext\n\nContext manager that, when exited, deletes the local copy\nif it is a temporary file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.get_reference_to_actual_content_file",
        "title": "FileValue > Method detail > get_reference_to_actual_content_file",
        "section": "Method detail > get_reference_to_actual_content_file",
        "text": "abstract FileValue.get_reference_to_actual_content_file(progress_callback: Callable[[int], None] | None = None) -> LocalFileContentContext\n\nRealizes the file contents to a local filesystem if needed.\n\nThe FileValue instance is intended to represent an immutable value. The file\nreturned by this call may point to a cached file or even the original file. Callers\nmust not modify the file on disk. Otherwise, undefined behaviors, including class 3 errors,\nmay occur. If the caller needs to modify the file, consider using the write_file\nmethod or copying the file before modifying it.\n\nParameters\n\nprogress_callback\n\nOptional[Callable[[python:int], python:None]], optional\n\nCallback that can be called to indicate progress in realizing the local copy.\nThe default is None, in which case this method makes no attempt\nto report its progress. This method may call a provided callback with a\npercentage value between 0 and 100 inclusive. The provided callback may not\nnecessarily be called at all, and calls for 0 or 100 percent are not guaranteed,\neven if other calls occur.\n\nReturns\n\nLocalFileContentContext\n\nContext manager that, when exited, deletes the local copy\nif it is a temporary file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.is_text_based_static",
        "title": "FileValue > Method detail > is_text_based_static",
        "section": "Method detail > is_text_based_static",
        "text": "classmethod FileValue.is_text_based_static(mimetype: str) -> bool | None\n\nDetermines if a file is text-based via its MIME type.\n\nParameters\n\nmimetype\n\npython:str\n\nFile’s MIME type.\n\nReturns\n\nOptional[bool]\n\nTrue if the MIME type starts with text or is an application (JSON),\nFalse otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.get_contents",
        "title": "FileValue > Method detail > get_contents",
        "section": "Method detail > get_contents",
        "text": "async FileValue.get_contents(encoding: str | None = None) -> str\n\nRead the contents of the file as a string.\n\nParameters\n\nencoding\n\nOptional[python:str], optional\n\nEncoding to use when reading. The default is None, in which case the\ncurrent locale’s encoding is used.\n\nReturns\n\npython:str\n\nContents of the file as a string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.to_api_string",
        "title": "FileValue > Method detail > to_api_string",
        "section": "Method detail > to_api_string",
        "text": "FileValue.to_api_string(context: ansys.tools.variableinterop.isave_context.ISaveContext | None = None) -> str\n\nConvert the value to an API string using a save context.\n\nParameters\n\ncontext\n\nOptional[ISaveContext], optional\n\nSave context to use. The default value is None,\nin which case file values are not supported.\n\nReturns\n\npython:str\n\nString appropriate for use in files and APIs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.to_api_object",
        "title": "FileValue > Method detail > to_api_object",
        "section": "Method detail > to_api_object",
        "text": "FileValue.to_api_object(save_context: ansys.tools.variableinterop.isave_context.ISaveContext) -> Dict[str, str | None]\n\nConvert this file to an API object.\n\nParameters\n\nsave_context\n\nISaveContext\n\nSave context to use for the conversion.\n\nReturns\n\nDict[python:str, Optional[python:str]]\n\nAPI object that matches this FileValue instance.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/FileValue",
        "href": "api/ansys/tools/variableinterop/file_value/FileValue.html#FileValue.get_extension",
        "title": "FileValue > Method detail > get_extension",
        "section": "Method detail > get_extension",
        "text": "FileValue.get_extension() -> str\n\nGet the file extension of the file, including the period.\n\nIf the file extension is not known, .tmp is returned.\n\nReturns\n\npython:str\n\nFile extension of the file if known, \".tmp\" otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#ivariablevaluevisitor",
        "title": "IVariableValueVisitor",
        "section": "IVariableValueVisitor",
        "text": "Bases: abc.ABC, Generic[T]\nDefines the interface to be implemented for using the visitor pattern with variable\nvalues.\nTo use an implementation of this interface, create and pass an instance to the\nIVariableValue.accept() method.\nIVariableValueVisitor\nIVariableValueVisitor\nabc.ABC\nGeneric\nT\nIVariableValue.accept()"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor",
        "title": "IVariableValueVisitor > IVariableValueVisitor > IVariableValueVisitor",
        "section": "IVariableValueVisitor > IVariableValueVisitor",
        "text": "class ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor\n\nBases: abc.ABC, Generic[T]\n\nDefines the interface to be implemented for using the visitor pattern with variable\nvalues.\n\nTo use an implementation of this interface, create and pass an instance to the\nIVariableValue.accept() method.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#overview",
        "title": "IVariableValueVisitor > Overview",
        "section": "Overview",
        "text": "visit_integer\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_real\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_boolean\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_string\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_integer_array\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_file\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_real_array\nMethod that is called if the :meth:`IVariableValue.accept() method is called\nvisit_boolean_array\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_string_array\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_file_array\nMethod that is called if the IVariableValue.accept() method is called on\nOverview\nvisit_integer\nIVariableValue.accept()\nvisit_real\nIVariableValue.accept()\nvisit_boolean\nIVariableValue.accept()\nvisit_string\nIVariableValue.accept()\nvisit_integer_array\nIVariableValue.accept()\nvisit_file\nIVariableValue.accept()\nvisit_real_array\nvisit_boolean_array\nIVariableValue.accept()\nvisit_string_array\nIVariableValue.accept()\nvisit_file_array\nIVariableValue.accept()"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#import-detail",
        "title": "IVariableValueVisitor > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#method-detail",
        "title": "IVariableValueVisitor > Method detail",
        "section": "Method detail",
        "text": "Method that is called if the IVariableValue.accept() method is called on\nan IntegerValue type.\nIntegerValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na RealValue type.\nRealValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na BooleanValue type.\nBooleanValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na StringValue type.\nStringValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\nan IntegerArrayValue type.\nIntegerArrayValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na FileValue type.\nFileValue type to visit.\nResult\nMethod that is called if the :meth:`IVariableValue.accept() method is called\non a RealArrayValue type.\nRealArrayValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na BooleanArrayValue type.\nBooleanArrayValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na StringArrayValue type.\nStringArrayValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na FileArrayValue type.\nFileArrayValue type to visit.\nResult.\nMethod detail\nIVariableValue.accept()\nIntegerValue\nIntegerValue\nIntegerValue\nT\nIVariableValue.accept()\nRealValue\nRealValue\nRealValue\nT\nIVariableValue.accept()\nBooleanValue\nBooleanValue\nBooleanValue\nT\nIVariableValue.accept()\nStringValue\nStringValue\nStringValue\nT\nIVariableValue.accept()\nIntegerArrayValue\nIntegerArrayValue\nIntegerArrayValue\nT\nIVariableValue.accept()\nFileValue\nFileValue\nFileValue\nT\nRealArrayValue\nRealArrayValue\nRealArrayValue\nT\nIVariableValue.accept()\nBooleanArrayValue\nBooleanArrayValue\nBooleanArrayValue\nT\nIVariableValue.accept()\nStringArrayValue\nStringArrayValue\nStringArrayValue\nT\nIVariableValue.accept()\nFileArrayValue\nFileArrayValue\nFileArrayValue\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#IVariableValueVisitor.visit_integer",
        "title": "IVariableValueVisitor > Method detail > visit_integer",
        "section": "Method detail > visit_integer",
        "text": "abstract IVariableValueVisitor.visit_integer(value: ansys.tools.variableinterop.scalar_values.IntegerValue) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on\nan IntegerValue type.\n\nParameters\n\nvalue\n\nIntegerValue\n\nIntegerValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#IVariableValueVisitor.visit_real",
        "title": "IVariableValueVisitor > Method detail > visit_real",
        "section": "Method detail > visit_real",
        "text": "abstract IVariableValueVisitor.visit_real(value: ansys.tools.variableinterop.scalar_values.RealValue) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on\na RealValue type.\n\nParameters\n\nvalue\n\nRealValue\n\nRealValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#IVariableValueVisitor.visit_boolean",
        "title": "IVariableValueVisitor > Method detail > visit_boolean",
        "section": "Method detail > visit_boolean",
        "text": "abstract IVariableValueVisitor.visit_boolean(value: ansys.tools.variableinterop.scalar_values.BooleanValue) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on\na BooleanValue type.\n\nParameters\n\nvalue\n\nBooleanValue\n\nBooleanValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#IVariableValueVisitor.visit_string",
        "title": "IVariableValueVisitor > Method detail > visit_string",
        "section": "Method detail > visit_string",
        "text": "abstract IVariableValueVisitor.visit_string(value: ansys.tools.variableinterop.scalar_values.StringValue) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on\na StringValue type.\n\nParameters\n\nvalue\n\nStringValue\n\nStringValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#IVariableValueVisitor.visit_integer_array",
        "title": "IVariableValueVisitor > Method detail > visit_integer_array",
        "section": "Method detail > visit_integer_array",
        "text": "abstract IVariableValueVisitor.visit_integer_array(value: ansys.tools.variableinterop.array_values.IntegerArrayValue) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on\nan IntegerArrayValue type.\n\nParameters\n\nvalue\n\nIntegerArrayValue\n\nIntegerArrayValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#IVariableValueVisitor.visit_file",
        "title": "IVariableValueVisitor > Method detail > visit_file",
        "section": "Method detail > visit_file",
        "text": "abstract IVariableValueVisitor.visit_file(value: ansys.tools.variableinterop.file_value.FileValue) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on\na FileValue type.\n\nParameters\n\nvalue\n\nFileValue\n\nFileValue type to visit.\n\nReturns\n\nT\n\nResult\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#IVariableValueVisitor.visit_real_array",
        "title": "IVariableValueVisitor > Method detail > visit_real_array",
        "section": "Method detail > visit_real_array",
        "text": "abstract IVariableValueVisitor.visit_real_array(value: ansys.tools.variableinterop.array_values.RealArrayValue) -> T\n\nMethod that is called if the :meth:`IVariableValue.accept() method is called\non a RealArrayValue type.\n\nParameters\n\nvalue\n\nRealArrayValue\n\nRealArrayValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#IVariableValueVisitor.visit_boolean_array",
        "title": "IVariableValueVisitor > Method detail > visit_boolean_array",
        "section": "Method detail > visit_boolean_array",
        "text": "abstract IVariableValueVisitor.visit_boolean_array(value: ansys.tools.variableinterop.array_values.BooleanArrayValue) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on\na BooleanArrayValue type.\n\nParameters\n\nvalue\n\nBooleanArrayValue\n\nBooleanArrayValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#IVariableValueVisitor.visit_string_array",
        "title": "IVariableValueVisitor > Method detail > visit_string_array",
        "section": "Method detail > visit_string_array",
        "text": "abstract IVariableValueVisitor.visit_string_array(value: ansys.tools.variableinterop.array_values.StringArrayValue) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on\na StringArrayValue type.\n\nParameters\n\nvalue\n\nStringArrayValue\n\nStringArrayValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor",
        "href": "api/ansys/tools/variableinterop/ivariable_visitor/IVariableValueVisitor.html#IVariableValueVisitor.visit_file_array",
        "title": "IVariableValueVisitor > Method detail > visit_file_array",
        "section": "Method detail > visit_file_array",
        "text": "abstract IVariableValueVisitor.visit_file_array(value: ansys.tools.variableinterop.file_array_value.FileArrayValue) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on\na FileArrayValue type.\n\nParameters\n\nvalue\n\nFileArrayValue\n\nFileArrayValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_scope/FileScope",
        "href": "api/ansys/tools/variableinterop/file_scope/FileScope.html#filescope",
        "title": "FileScope",
        "section": "FileScope",
        "text": "Bases: contextlib.AbstractContextManager, abc.ABC\nProvides an abstract base for file scopes.\nA file scope helps a program manage the disk space used for file storage and\nenables it to clean up caches and space in a reliable way.\nFileValue instances (except for ansys.tools.variableinterop.EMPTY_FILE)\nshould always be created by a FileScope instance. FileValue instances\ncreated by a FileScope instance are not valid once the FileScope instance\nhas been closed.\nThis abstract base class contains the logic to be a context manager\nfor use in with blocks. Any derived class’s close method is\nautomatically called when the with block is exited.\nFileScope\nFileScope\ncontextlib.AbstractContextManager\nabc.ABC\nFileValue\nansys.tools.variableinterop.EMPTY_FILE\nFileScope\nFileValue\nFileScope\nFileScope\nwith\nclose\nwith"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_scope/FileScope",
        "href": "api/ansys/tools/variableinterop/file_scope/FileScope.html#ansys.tools.variableinterop.file_scope.FileScope",
        "title": "FileScope > FileScope > FileScope",
        "section": "FileScope > FileScope",
        "text": "class ansys.tools.variableinterop.file_scope.FileScope\n\nBases: contextlib.AbstractContextManager, abc.ABC\n\nProvides an abstract base for file scopes.\n\nA file scope helps a program manage the disk space used for file storage and\nenables it to clean up caches and space in a reliable way.\nFileValue instances (except for ansys.tools.variableinterop.EMPTY_FILE)\nshould always be created by a FileScope instance. FileValue instances\ncreated by a FileScope instance are not valid once the FileScope instance\nhas been closed.\n\nThis abstract base class contains the logic to be a context manager\nfor use in with blocks. Any derived class’s close method is\nautomatically called when the with block is exited.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_scope/FileScope",
        "href": "api/ansys/tools/variableinterop/file_scope/FileScope.html#overview",
        "title": "FileScope > Overview",
        "section": "Overview",
        "text": "close\nClose the FileScope instance, cleaning up any files it contains.\nread_from_file\nRead the contents of a file and create a new FileValue object backed by a\nfrom_api_object\nCreate a FileScope instance from a map of API strings.\n__exit__\nRaise any exception triggered within the runtime context.\nOverview\nclose\nFileScope\nread_from_file\nFileValue\nfrom_api_object\nFileScope\n__exit__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_scope/FileScope",
        "href": "api/ansys/tools/variableinterop/file_scope/FileScope.html#import-detail",
        "title": "FileScope > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_scope/FileScope",
        "href": "api/ansys/tools/variableinterop/file_scope/FileScope.html#method-detail",
        "title": "FileScope > Method detail",
        "section": "Method detail",
        "text": "Raise any exception triggered within the runtime context.\nClose the FileScope instance, cleaning up any files it contains.\nRead the contents of a file and create a new FileValue object backed by a\nfile in this scope.\nPath to the file to read.\nMIME type of the file. The default is None, which indicates that the file\ndoes not have a MIME type or that the type is not known.\nEncoding of the file. The default is None, which indicates that the file\ndoes not have a text encoding (for example, because it is a binary file.)\nNew FileValue object with the contents of the specified file, backed by this scope.\nCreate a FileScope instance from a map of API strings.\nMap of API strings that define the scope.\nLoad context to read the file contents from.\nMethod detail\nFileScope\nFileValue\nPathLike\nOptional\npython:str\noptional\nOptional\npython:str\noptional\nFileValue\nFileValue\nFileScope\nDict\npython:str\nOptional\npython:str\nILoadContext"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_scope/FileScope",
        "href": "api/ansys/tools/variableinterop/file_scope/FileScope.html#FileScope.__exit__",
        "title": "FileScope > Method detail > __exit__",
        "section": "Method detail > __exit__",
        "text": "FileScope.__exit__(__exc_type: Type[BaseException] | None, __exc_value: BaseException | None, __traceback: types.TracebackType | None) -> bool | None\n\nRaise any exception triggered within the runtime context.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_scope/FileScope",
        "href": "api/ansys/tools/variableinterop/file_scope/FileScope.html#FileScope.close",
        "title": "FileScope > Method detail > close",
        "section": "Method detail > close",
        "text": "abstract FileScope.close() -> None\n\nClose the FileScope instance, cleaning up any files it contains.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_scope/FileScope",
        "href": "api/ansys/tools/variableinterop/file_scope/FileScope.html#FileScope.read_from_file",
        "title": "FileScope > Method detail > read_from_file",
        "section": "Method detail > read_from_file",
        "text": "abstract FileScope.read_from_file(to_read: os.PathLike, mime_type: str | None = None, encoding: str | None = None) -> ansys.tools.variableinterop.file_value.FileValue\n\nRead the contents of a file and create a new FileValue object backed by a\nfile in this scope.\n\nParameters\n\nto_read\n\nPathLike\n\nPath to the file to read.\n\nmime_type\n\nOptional[python:str], optional\n\nMIME type of the file. The default is None, which indicates that the file\ndoes not have a MIME type or that the type is not known.\n\nencoding\n\nOptional[python:str], optional\n\nEncoding of the file. The default is None, which indicates that the file\ndoes not have a text encoding (for example, because it is a binary file.)\n\nReturns\n\nFileValue\n\nNew FileValue object with the contents of the specified file, backed by this scope.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_scope/FileScope",
        "href": "api/ansys/tools/variableinterop/file_scope/FileScope.html#FileScope.from_api_object",
        "title": "FileScope > Method detail > from_api_object",
        "section": "Method detail > from_api_object",
        "text": "abstract FileScope.from_api_object(api_object: Dict[str, str | None], load_context: ansys.tools.variableinterop.isave_context.ILoadContext) -> ansys.tools.variableinterop.file_value.FileValue\n\nCreate a FileScope instance from a map of API strings.\n\nParameters\n\napi_object\n\nDict[python:str, Optional[python:str]]\n\nMap of API strings that define the scope.\n\nload_context\n\nILoadContext\n\nLoad context to read the file contents from.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ILoadContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ILoadContext.html#iloadcontext",
        "title": "ILoadContext",
        "section": "ILoadContext",
        "text": "Bases: contextlib.AbstractContextManager, abc.ABC\nDefines an abstraction for a load medium.\nThis interface was defined to separate the concerns of being able to save large\nassociated content in other transfer mediums. It allows out-of-bound data to be\ntransferred. Examples include saving to a ZIP file or using an SCP side-channel on\nan SSH connection to send files or other large data objects.\nILoadContext\nILoadContext\ncontextlib.AbstractContextManager\nabc.ABC"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ILoadContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ILoadContext.html#ansys.tools.variableinterop.isave_context.ILoadContext",
        "title": "ILoadContext > ILoadContext > ILoadContext",
        "section": "ILoadContext > ILoadContext",
        "text": "class ansys.tools.variableinterop.isave_context.ILoadContext\n\nBases: contextlib.AbstractContextManager, abc.ABC\n\nDefines an abstraction for a load medium.\n\nThis interface was defined to separate the concerns of being able to save large\nassociated content in other transfer mediums. It allows out-of-bound data to be\ntransferred. Examples include saving to a ZIP file or using an SCP side-channel on\nan SSH connection to send files or other large data objects.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ILoadContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ILoadContext.html#overview",
        "title": "ILoadContext > Overview",
        "section": "Overview",
        "text": "load_file\nLoad a file from the load medium.\nflush\nFlush any changes in the context to the underlying stream or file.\nclose\nClose the context.\n__exit__\nRaise any exception triggered within the runtime context.\nOverview\nload_file\nflush\nclose\n__exit__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ILoadContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ILoadContext.html#import-detail",
        "title": "ILoadContext > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ILoadContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ILoadContext.html#method-detail",
        "title": "ILoadContext > Method detail",
        "section": "Method detail",
        "text": "Raise any exception triggered within the runtime context.\nLoad a file from the load medium.\nThe ILoadContext implementation decides how or when to send the actual\ndata. Some ILoadContexts implementations may merely collect metadata as\npart of this call and send the data on flush.\nID generated by an equivalent ISaveContext instance to save a file into this\ncontext.\nPath to the loaded file.\nFlush any changes in the context to the underlying stream or file.\nClose the context.\nMethod detail\nILoadContext\nILoadContexts\nOptional\npython:str\nISaveContext\nOptional\nPathLike"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ILoadContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ILoadContext.html#ILoadContext.__exit__",
        "title": "ILoadContext > Method detail > __exit__",
        "section": "Method detail > __exit__",
        "text": "ILoadContext.__exit__(__exc_type: Type[BaseException] | None, __exc_value: BaseException | None, __traceback: types.TracebackType | None) -> bool | None\n\nRaise any exception triggered within the runtime context.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ILoadContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ILoadContext.html#ILoadContext.load_file",
        "title": "ILoadContext > Method detail > load_file",
        "section": "Method detail > load_file",
        "text": "abstract ILoadContext.load_file(content_id: str | None) -> os.PathLike | None\n\nLoad a file from the load medium.\n\nThe ILoadContext implementation decides how or when to send the actual\ndata. Some ILoadContexts implementations may merely collect metadata as\npart of this call and send the data on flush.\n\nParameters\n\ncontent_id\n\nOptional[python:str]\n\nID generated by an equivalent ISaveContext instance to save a file into this\ncontext.\n\nReturns\n\nOptional[PathLike]\n\nPath to the loaded file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ILoadContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ILoadContext.html#ILoadContext.flush",
        "title": "ILoadContext > Method detail > flush",
        "section": "Method detail > flush",
        "text": "abstract ILoadContext.flush() -> None\n\nFlush any changes in the context to the underlying stream or file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/isave_context/ILoadContext",
        "href": "api/ansys/tools/variableinterop/isave_context/ILoadContext.html#ILoadContext.close",
        "title": "ILoadContext > Method detail > close",
        "section": "Method detail > close",
        "text": "abstract ILoadContext.close() -> None\n\nClose the context.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/index",
        "href": "api/ansys/tools/variableinterop/variable_value/index.html#the-variable_valuepy-module",
        "title": "The variable_value.py module",
        "section": "The variable_value.py module",
        "text": "The variable_value.py module\nvariable_value.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/index",
        "href": "api/ansys/tools/variableinterop/variable_value/index.html#summary",
        "title": "The variable_value.py module > Summary",
        "section": "Summary",
        "text": "IVariableValue\nDefines an interface for the behavior common among all variable types.\nCommonArrayValue\nDefines an interface for the behavior common among all array types.\nVariableValueInvalidError\nRaises an error to indicate that a required variable value is invalid.\nT\nSummary\nIVariableValue\nCommonArrayValue\nVariableValueInvalidError\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/index",
        "href": "api/ansys/tools/variableinterop/variable_value/index.html#description",
        "title": "The variable_value.py module > Description",
        "section": "Description",
        "text": "Defines the IVariableValue class and related classes.\nDescription\nIVariableValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/index",
        "href": "api/ansys/tools/variableinterop/variable_value/index.html#module-detail",
        "title": "The variable_value.py module > Module detail",
        "section": "Module detail",
        "text": "Module detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/index",
        "href": "api/ansys/tools/variableinterop/variable_value/index.html#variable_value.T",
        "title": "The variable_value.py module > Module detail > T",
        "section": "Module detail > T",
        "text": "variable_value.T\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/index",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/index.html#the-ivariablemetadata_visitorpy-module",
        "title": "The ivariablemetadata_visitor.py module",
        "section": "The ivariablemetadata_visitor.py module",
        "text": "The ivariablemetadata_visitor.py module\nivariablemetadata_visitor.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/index",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/index.html#summary",
        "title": "The ivariablemetadata_visitor.py module > Summary",
        "section": "Summary",
        "text": "IVariableMetadataVisitor\nDefines the interface to be implemented for using the visitor pattern with variable\nT\nSummary\nIVariableMetadataVisitor\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/index",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/index.html#description",
        "title": "The ivariablemetadata_visitor.py module > Description",
        "section": "Description",
        "text": "Defines the IVariableMetadataVisitor class.\nDescription\nIVariableMetadataVisitor"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/index",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/index.html#module-detail",
        "title": "The ivariablemetadata_visitor.py module > Module detail",
        "section": "Module detail",
        "text": "Module detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/index",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/index.html#ivariablemetadata_visitor.T",
        "title": "The ivariablemetadata_visitor.py module > Module detail > T",
        "section": "Module detail > T",
        "text": "ivariablemetadata_visitor.T\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/index",
        "href": "api/ansys/tools/variableinterop/variable_state/index.html#the-variable_statepy-module",
        "title": "The variable_state.py module",
        "section": "The variable_state.py module",
        "text": "The variable_state.py module\nvariable_state.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/index",
        "href": "api/ansys/tools/variableinterop/variable_state/index.html#summary",
        "title": "The variable_state.py module > Summary",
        "section": "Summary",
        "text": "VariableState\nBundles a variable value with a validity flag.\nSummary\nVariableState"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_state/index",
        "href": "api/ansys/tools/variableinterop/variable_state/index.html#description",
        "title": "The variable_state.py module > Description",
        "section": "Description",
        "text": "Defines the VariableState class.\nDescription\nVariableState"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#integerarrayvalue",
        "title": "IntegerArrayValue",
        "section": "IntegerArrayValue",
        "text": "Bases: ansys.tools.variableinterop.variable_value.CommonArrayValue[numpy.int64]\nStores a value as an IntegerArrayValue variable type.\nIn Python, the IntegerArrayValue type is implemented by extending NumPy’s ndarray type.\nThis means that they decay naturally into numpy.ndarray objects when using NumPy’s\narray operators. It also means that they inherit many of the NumPy behaviors, which\nmay be slightly different from the behaviors specified in the variable interop\nstandards. For example, when converting from real to integer, the value is\nfloored instead of rounded. If you want the variable interop standard conversions,\ncall the to_integer_array_value method on the RealArrayValue type and use the resulting\nIntegerArrayValue type as you would a NumPy ndarray of int64 values.\nIntegerArrayValue\nIntegerArrayValue\nansys.tools.variableinterop.variable_value.CommonArrayValue\nnumpy.int64\nIntegerArrayValue\nIntegerArrayValue\nndarray\nnumpy.ndarray\nto_integer_array_value\nRealArrayValue\nIntegerArrayValue\nndarray"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#ansys.tools.variableinterop.array_values.IntegerArrayValue",
        "title": "IntegerArrayValue > IntegerArrayValue > IntegerArrayValue",
        "section": "IntegerArrayValue > IntegerArrayValue",
        "text": "class ansys.tools.variableinterop.array_values.IntegerArrayValue\n\nBases: ansys.tools.variableinterop.variable_value.CommonArrayValue[numpy.int64]\n\nStores a value as an IntegerArrayValue variable type.\n\nIn Python, the IntegerArrayValue type is implemented by extending NumPy’s ndarray type.\nThis means that they decay naturally into numpy.ndarray objects when using NumPy’s\narray operators. It also means that they inherit many of the NumPy behaviors, which\nmay be slightly different from the behaviors specified in the variable interop\nstandards. For example, when converting from real to integer, the value is\nfloored instead of rounded. If you want the variable interop standard conversions,\ncall the to_integer_array_value method on the RealArrayValue type and use the resulting\nIntegerArrayValue type as you would a NumPy ndarray of int64 values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#overview",
        "title": "IntegerArrayValue > Overview",
        "section": "Overview",
        "text": "clone\naccept\nto_boolean_array_value\nConvert this value to a BooleanArrayValue type.\nto_real_array_value\nConvert this value to a RealArrayValue type.\nto_string_array_value\nConvert this value to a StringArrayValue type.\nto_api_string\nto_display_string\nvariable_type\nfrom_api_string\nConvert an API-formatted string to an IntegerArrayValue type.\n__eq__\nOverview\nclone\naccept\nto_boolean_array_value\nBooleanArrayValue\nto_real_array_value\nRealArrayValue\nto_string_array_value\nStringArrayValue\nto_api_string\nto_display_string\nvariable_type\nfrom_api_string\nIntegerArrayValue\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#import-detail",
        "title": "IntegerArrayValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#property-detail",
        "title": "IntegerArrayValue > Property detail",
        "section": "Property detail",
        "text": "Property detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#IntegerArrayValue.variable_type",
        "title": "IntegerArrayValue > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property IntegerArrayValue.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#method-detail",
        "title": "IntegerArrayValue > Method detail",
        "section": "Method detail",
        "text": "Convert this value to a BooleanArrayValue type.\nBooleanArrayValue type with the same values converted to Boolean values.\nConvert this value to a RealArrayValue type.\nRealArrayValue type with the same values converted to real values.\nConvert this value to a StringArrayValue type.\nStringArrayValue type converted to an array of strings.\nConvert an API-formatted string to an IntegerArrayValue type.\nAPI string to parse.\nResult of parsing the IntegerArrayValue type.\nMethod detail\nBooleanArrayValue\nBooleanArrayValue\nBooleanArrayValue\nRealArrayValue\nRealArrayValue\nRealArrayValue\nStringArrayValue\nStringArrayValue\nStringArrayValue\nIntegerArrayValue\npython:str\nIntegerArrayValue\nIntegerArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#IntegerArrayValue.__eq__",
        "title": "IntegerArrayValue > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "IntegerArrayValue.__eq__(other)\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#IntegerArrayValue.clone",
        "title": "IntegerArrayValue > Method detail > clone",
        "section": "Method detail > clone",
        "text": "IntegerArrayValue.clone() -> IntegerArrayValue\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#IntegerArrayValue.accept",
        "title": "IntegerArrayValue > Method detail > accept",
        "section": "Method detail > accept",
        "text": "IntegerArrayValue.accept(visitor: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[T]) -> T\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#IntegerArrayValue.to_boolean_array_value",
        "title": "IntegerArrayValue > Method detail > to_boolean_array_value",
        "section": "Method detail > to_boolean_array_value",
        "text": "IntegerArrayValue.to_boolean_array_value() -> BooleanArrayValue\n\nConvert this value to a BooleanArrayValue type.\n\nReturns\n\nBooleanArrayValue\n\nBooleanArrayValue type with the same values converted to Boolean values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#IntegerArrayValue.to_real_array_value",
        "title": "IntegerArrayValue > Method detail > to_real_array_value",
        "section": "Method detail > to_real_array_value",
        "text": "IntegerArrayValue.to_real_array_value() -> RealArrayValue\n\nConvert this value to a RealArrayValue type.\n\nReturns\n\nRealArrayValue\n\nRealArrayValue type with the same values converted to real values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#IntegerArrayValue.to_string_array_value",
        "title": "IntegerArrayValue > Method detail > to_string_array_value",
        "section": "Method detail > to_string_array_value",
        "text": "IntegerArrayValue.to_string_array_value() -> StringArrayValue\n\nConvert this value to a StringArrayValue type.\n\nReturns\n\nStringArrayValue\n\nStringArrayValue type converted to an array of strings.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#IntegerArrayValue.to_api_string",
        "title": "IntegerArrayValue > Method detail > to_api_string",
        "section": "Method detail > to_api_string",
        "text": "IntegerArrayValue.to_api_string(context: ansys.tools.variableinterop.isave_context.ISaveContext | None = None) -> str\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#IntegerArrayValue.from_api_string",
        "title": "IntegerArrayValue > Method detail > from_api_string",
        "section": "Method detail > from_api_string",
        "text": "static IntegerArrayValue.from_api_string(value: str) -> IntegerArrayValue\n\nConvert an API-formatted string to an IntegerArrayValue type.\n\nParameters\n\nvalue\n\npython:str\n\nAPI string to parse.\n\nReturns\n\nIntegerArrayValue\n\nResult of parsing the IntegerArrayValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/IntegerArrayValue.html#IntegerArrayValue.to_display_string",
        "title": "IntegerArrayValue > Method detail > to_display_string",
        "section": "Method detail > to_display_string",
        "text": "IntegerArrayValue.to_display_string(locale_name: str) -> str\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#toapistringvisitor",
        "title": "ToAPIStringVisitor",
        "section": "ToAPIStringVisitor",
        "text": "Bases: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[str]\nVisits values and converts them to an API string.\nToAPIStringVisitor\nToAPIStringVisitor\nansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor\nstr"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#ansys.tools.variableinterop.api_serialization.ToAPIStringVisitor",
        "title": "ToAPIStringVisitor > ToAPIStringVisitor > ToAPIStringVisitor",
        "section": "ToAPIStringVisitor > ToAPIStringVisitor",
        "text": "class ansys.tools.variableinterop.api_serialization.ToAPIStringVisitor(save_context: ansys.tools.variableinterop.isave_context.ISaveContext | None)\n\nBases: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[str]\n\nVisits values and converts them to an API string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#overview",
        "title": "ToAPIStringVisitor > Overview",
        "section": "Overview",
        "text": "visit_integer\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_real\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_boolean\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_string\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_integer_array\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_file\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_real_array\nMethod that is called if the :meth:`IVariableValue.accept() method is called\nvisit_boolean_array\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_string_array\nMethod that is called if the IVariableValue.accept() method is called on\nvisit_file_array\nMethod that is called if the IVariableValue.accept() method is called on\nOverview\nvisit_integer\nIVariableValue.accept()\nvisit_real\nIVariableValue.accept()\nvisit_boolean\nIVariableValue.accept()\nvisit_string\nIVariableValue.accept()\nvisit_integer_array\nIVariableValue.accept()\nvisit_file\nIVariableValue.accept()\nvisit_real_array\nvisit_boolean_array\nIVariableValue.accept()\nvisit_string_array\nIVariableValue.accept()\nvisit_file_array\nIVariableValue.accept()"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#import-detail",
        "title": "ToAPIStringVisitor > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#method-detail",
        "title": "ToAPIStringVisitor > Method detail",
        "section": "Method detail",
        "text": "Method that is called if the IVariableValue.accept() method is called on\nan IntegerValue type.\nIntegerValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na RealValue type.\nRealValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na BooleanValue type.\nBooleanValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na StringValue type.\nStringValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\nan IntegerArrayValue type.\nIntegerArrayValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na FileValue type.\nFileValue type to visit.\nResult\nMethod that is called if the :meth:`IVariableValue.accept() method is called\non a RealArrayValue type.\nRealArrayValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na BooleanArrayValue type.\nBooleanArrayValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na StringArrayValue type.\nStringArrayValue type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on\na FileArrayValue type.\nFileArrayValue type to visit.\nResult.\nMethod detail\nIVariableValue.accept()\nIntegerValue\nIntegerValue\nIntegerValue\nT\nIVariableValue.accept()\nRealValue\nRealValue\nRealValue\nT\nIVariableValue.accept()\nBooleanValue\nBooleanValue\nBooleanValue\nT\nIVariableValue.accept()\nStringValue\nStringValue\nStringValue\nT\nIVariableValue.accept()\nIntegerArrayValue\nIntegerArrayValue\nIntegerArrayValue\nT\nIVariableValue.accept()\nFileValue\nFileValue\nFileValue\nT\nRealArrayValue\nRealArrayValue\nRealArrayValue\nT\nIVariableValue.accept()\nBooleanArrayValue\nBooleanArrayValue\nBooleanArrayValue\nT\nIVariableValue.accept()\nStringArrayValue\nStringArrayValue\nStringArrayValue\nT\nIVariableValue.accept()\nFileArrayValue\nFileArrayValue\nFileArrayValue\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#ToAPIStringVisitor.visit_integer",
        "title": "ToAPIStringVisitor > Method detail > visit_integer",
        "section": "Method detail > visit_integer",
        "text": "ToAPIStringVisitor.visit_integer(value: ansys.tools.variableinterop.scalar_values.IntegerValue) -> str\n\nMethod that is called if the IVariableValue.accept() method is called on\nan IntegerValue type.\n\nParameters\n\nvalue\n\nIntegerValue\n\nIntegerValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#ToAPIStringVisitor.visit_real",
        "title": "ToAPIStringVisitor > Method detail > visit_real",
        "section": "Method detail > visit_real",
        "text": "ToAPIStringVisitor.visit_real(value: ansys.tools.variableinterop.scalar_values.RealValue) -> str\n\nMethod that is called if the IVariableValue.accept() method is called on\na RealValue type.\n\nParameters\n\nvalue\n\nRealValue\n\nRealValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#ToAPIStringVisitor.visit_boolean",
        "title": "ToAPIStringVisitor > Method detail > visit_boolean",
        "section": "Method detail > visit_boolean",
        "text": "ToAPIStringVisitor.visit_boolean(value: ansys.tools.variableinterop.scalar_values.BooleanValue) -> str\n\nMethod that is called if the IVariableValue.accept() method is called on\na BooleanValue type.\n\nParameters\n\nvalue\n\nBooleanValue\n\nBooleanValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#ToAPIStringVisitor.visit_string",
        "title": "ToAPIStringVisitor > Method detail > visit_string",
        "section": "Method detail > visit_string",
        "text": "ToAPIStringVisitor.visit_string(value: ansys.tools.variableinterop.scalar_values.StringValue) -> str\n\nMethod that is called if the IVariableValue.accept() method is called on\na StringValue type.\n\nParameters\n\nvalue\n\nStringValue\n\nStringValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#ToAPIStringVisitor.visit_integer_array",
        "title": "ToAPIStringVisitor > Method detail > visit_integer_array",
        "section": "Method detail > visit_integer_array",
        "text": "ToAPIStringVisitor.visit_integer_array(value: ansys.tools.variableinterop.array_values.IntegerArrayValue) -> str\n\nMethod that is called if the IVariableValue.accept() method is called on\nan IntegerArrayValue type.\n\nParameters\n\nvalue\n\nIntegerArrayValue\n\nIntegerArrayValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#ToAPIStringVisitor.visit_file",
        "title": "ToAPIStringVisitor > Method detail > visit_file",
        "section": "Method detail > visit_file",
        "text": "ToAPIStringVisitor.visit_file(value: ansys.tools.variableinterop.file_value.FileValue) -> str\n\nMethod that is called if the IVariableValue.accept() method is called on\na FileValue type.\n\nParameters\n\nvalue\n\nFileValue\n\nFileValue type to visit.\n\nReturns\n\nT\n\nResult\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#ToAPIStringVisitor.visit_real_array",
        "title": "ToAPIStringVisitor > Method detail > visit_real_array",
        "section": "Method detail > visit_real_array",
        "text": "ToAPIStringVisitor.visit_real_array(value: ansys.tools.variableinterop.array_values.RealArrayValue) -> str\n\nMethod that is called if the :meth:`IVariableValue.accept() method is called\non a RealArrayValue type.\n\nParameters\n\nvalue\n\nRealArrayValue\n\nRealArrayValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#ToAPIStringVisitor.visit_boolean_array",
        "title": "ToAPIStringVisitor > Method detail > visit_boolean_array",
        "section": "Method detail > visit_boolean_array",
        "text": "ToAPIStringVisitor.visit_boolean_array(value: ansys.tools.variableinterop.array_values.BooleanArrayValue) -> str\n\nMethod that is called if the IVariableValue.accept() method is called on\na BooleanArrayValue type.\n\nParameters\n\nvalue\n\nBooleanArrayValue\n\nBooleanArrayValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#ToAPIStringVisitor.visit_string_array",
        "title": "ToAPIStringVisitor > Method detail > visit_string_array",
        "section": "Method detail > visit_string_array",
        "text": "ToAPIStringVisitor.visit_string_array(value: ansys.tools.variableinterop.array_values.StringArrayValue) -> str\n\nMethod that is called if the IVariableValue.accept() method is called on\na StringArrayValue type.\n\nParameters\n\nvalue\n\nStringArrayValue\n\nStringArrayValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor",
        "href": "api/ansys/tools/variableinterop/api_serialization/ToAPIStringVisitor.html#ToAPIStringVisitor.visit_file_array",
        "title": "ToAPIStringVisitor > Method detail > visit_file_array",
        "section": "Method detail > visit_file_array",
        "text": "ToAPIStringVisitor.visit_file_array(value: ansys.tools.variableinterop.file_array_value.FileArrayValue) -> str\n\nMethod that is called if the IVariableValue.accept() method is called on\na FileArrayValue type.\n\nParameters\n\nvalue\n\nFileArrayValue\n\nFileArrayValue type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException",
        "href": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException.html#incompatibletypesexception",
        "title": "IncompatibleTypesException",
        "section": "IncompatibleTypesException",
        "text": "Bases: BaseException\nIndicates that the types used in a conversion are incompatible.\nIncompatibleTypesException\nIncompatibleTypesException\nBaseException"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException",
        "href": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException.html#ansys.tools.variableinterop.exceptions.IncompatibleTypesException",
        "title": "IncompatibleTypesException > IncompatibleTypesException > IncompatibleTypesException",
        "section": "IncompatibleTypesException > IncompatibleTypesException",
        "text": "exception ansys.tools.variableinterop.exceptions.IncompatibleTypesException(from_type: ansys.tools.variableinterop.variable_type.VariableType | str, to_type: ansys.tools.variableinterop.variable_type.VariableType | str)\n\nBases: BaseException\n\nIndicates that the types used in a conversion are incompatible.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException",
        "href": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException.html#overview",
        "title": "IncompatibleTypesException > Overview",
        "section": "Overview",
        "text": "from_type\nfrom_type_str\nto_type\nOverview\nfrom_type\nfrom_type_str\nto_type"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException",
        "href": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException.html#import-detail",
        "title": "IncompatibleTypesException > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException",
        "href": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException.html#attribute-detail",
        "title": "IncompatibleTypesException > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException",
        "href": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException.html#IncompatibleTypesException.from_type",
        "title": "IncompatibleTypesException > Attribute detail > from_type",
        "section": "Attribute detail > from_type",
        "text": "IncompatibleTypesException.from_type: ansys.tools.variableinterop.variable_type.VariableType | None\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException",
        "href": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException.html#IncompatibleTypesException.from_type_str",
        "title": "IncompatibleTypesException > Attribute detail > from_type_str",
        "section": "Attribute detail > from_type_str",
        "text": "IncompatibleTypesException.from_type_str: str\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException",
        "href": "api/ansys/tools/variableinterop/exceptions/IncompatibleTypesException.html#IncompatibleTypesException.to_type",
        "title": "IncompatibleTypesException > Attribute detail > to_type",
        "section": "Attribute detail > to_type",
        "text": "IncompatibleTypesException.to_type: ansys.tools.variableinterop.variable_type.VariableType | None\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/index",
        "href": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/index.html#the-array_to_from_string_utilpy-module",
        "title": "The array_to_from_string_util.py module",
        "section": "The array_to_from_string_util.py module",
        "text": "The array_to_from_string_util.py module\narray_to_from_string_util.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/index",
        "href": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/index.html#summary",
        "title": "The array_to_from_string_util.py module > Summary",
        "section": "Summary",
        "text": "ArrayToFromStringUtil\nProvides utility methods for converting CommonValueArray objects to and from\nSummary\nArrayToFromStringUtil\nCommonValueArray"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/index",
        "href": "api/ansys/tools/variableinterop/utils/array_to_from_string_util/index.html#description",
        "title": "The array_to_from_string_util.py module > Description",
        "section": "Description",
        "text": "Defines the ArrayToFromStringUtil class.\nDescription\nArrayToFromStringUtil"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/index",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/index.html#the-ivariable_type_pseudovisitorpy-module",
        "title": "The ivariable_type_pseudovisitor.py module",
        "section": "The ivariable_type_pseudovisitor.py module",
        "text": "The ivariable_type_pseudovisitor.py module\nivariable_type_pseudovisitor.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/index",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/index.html#summary",
        "title": "The ivariable_type_pseudovisitor.py module > Summary",
        "section": "Summary",
        "text": "IVariableTypePseudoVisitor\nDefines an interface for pseudo-visitors of the VariableType enumeration.\nvartype_accept\nAccept a visitor to the specified variable type.\nT\nSummary\nIVariableTypePseudoVisitor\nVariableType\nvartype_accept\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/index",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/index.html#description",
        "title": "The ivariable_type_pseudovisitor.py module > Description",
        "section": "Description",
        "text": "Defines and implements a pseudo-visitor pattern for variable types.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/index",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/index.html#module-detail",
        "title": "The ivariable_type_pseudovisitor.py module > Module detail",
        "section": "Module detail",
        "text": "Accept a visitor to the specified variable type.\nVisitor to accept.\nVariable type that the visitor should visit.\nVisitor’s result.\nModule detail\nT\nVariableType\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/index",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/index.html#ivariable_type_pseudovisitor.vartype_accept",
        "title": "The ivariable_type_pseudovisitor.py module > Module detail > vartype_accept",
        "section": "Module detail > vartype_accept",
        "text": "ivariable_type_pseudovisitor.vartype_accept(visitor: IVariableTypePseudoVisitor[T], var_type: ansys.tools.variableinterop.variable_type.VariableType) -> T\n\nAccept a visitor to the specified variable type.\n\nParameters\n\nvisitor\n\nT\n\nVisitor to accept.\n\nvar_type\n\nVariableType\n\nVariable type that the visitor should visit.\n\nReturns\n\nT\n\nVisitor’s result.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/index",
        "href": "api/ansys/tools/variableinterop/ivariable_type_pseudovisitor/index.html#ivariable_type_pseudovisitor.T",
        "title": "The ivariable_type_pseudovisitor.py module > Module detail > T",
        "section": "Module detail > T",
        "text": "ivariable_type_pseudovisitor.T\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/index",
        "href": "api/ansys/tools/variableinterop/file_value/index.html#the-file_valuepy-module",
        "title": "The file_value.py module",
        "section": "The file_value.py module",
        "text": "The file_value.py module\nfile_value.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/index",
        "href": "api/ansys/tools/variableinterop/file_value/index.html#summary",
        "title": "The file_value.py module > Summary",
        "section": "Summary",
        "text": "AsyncLocalFileContentContext\nRepresents the context during which a locally available copy of file value content\nLocalFileContentContext\nRepresents the context during which a locally available copy of file value content\nAlreadyLocalFileContentContext\nProvides a default local file context for when the file is already hosted locally.\nFileValue\nProvides an abstract base class for FileValue implementations.\nLocalFileValue\nBase class for file values where the file contents already exist on the local disk.\nEmptyFileValue\nRepresents an empty file value.\nT\nRESOURCE_PARSER\nEMPTY_FILE\nSummary\nAsyncLocalFileContentContext\nLocalFileContentContext\nAlreadyLocalFileContentContext\nFileValue\nFileValue\nLocalFileValue\nEmptyFileValue\nT\nRESOURCE_PARSER\nEMPTY_FILE"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/index",
        "href": "api/ansys/tools/variableinterop/file_value/index.html#description",
        "title": "The file_value.py module > Description",
        "section": "Description",
        "text": "Defines the FileValue class.\nDescription\nFileValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/index",
        "href": "api/ansys/tools/variableinterop/file_value/index.html#module-detail",
        "title": "The file_value.py module > Module detail",
        "section": "Module detail",
        "text": "Module detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/index",
        "href": "api/ansys/tools/variableinterop/file_value/index.html#file_value.T",
        "title": "The file_value.py module > Module detail > T",
        "section": "Module detail > T",
        "text": "file_value.T\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/index",
        "href": "api/ansys/tools/variableinterop/file_value/index.html#file_value.RESOURCE_PARSER",
        "title": "The file_value.py module > Module detail > RESOURCE_PARSER",
        "section": "Module detail > RESOURCE_PARSER",
        "text": "file_value.RESOURCE_PARSER\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/index",
        "href": "api/ansys/tools/variableinterop/file_value/index.html#file_value.EMPTY_FILE",
        "title": "The file_value.py module > Module detail > EMPTY_FILE",
        "section": "Module detail > EMPTY_FILE",
        "text": "file_value.EMPTY_FILE\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/index",
        "href": "api/ansys/tools/variableinterop/array_metadata/index.html#the-array_metadatapy-module",
        "title": "The array_metadata.py module",
        "section": "The array_metadata.py module",
        "text": "The array_metadata.py module\narray_metadata.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/index",
        "href": "api/ansys/tools/variableinterop/array_metadata/index.html#summary",
        "title": "The array_metadata.py module > Summary",
        "section": "Summary",
        "text": "BooleanArrayMetadata\nProvides metadata for the BooleanArrayValue variable type.\nIntegerArrayMetadata\nProvides metadata for the IntegerArrayValue variable type.\nRealArrayMetadata\nProvides metadata for the RealArrayValue variable type.\nStringArrayMetadata\nProvides metadata for the StringArrayValue variable type.\nSummary\nBooleanArrayMetadata\nBooleanArrayValue\nIntegerArrayMetadata\nIntegerArrayValue\nRealArrayMetadata\nRealArrayValue\nStringArrayMetadata\nStringArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/index",
        "href": "api/ansys/tools/variableinterop/array_metadata/index.html#description",
        "title": "The array_metadata.py module > Description",
        "section": "Description",
        "text": "Defines array metadata types.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#integermetadata",
        "title": "IntegerMetadata",
        "section": "IntegerMetadata",
        "text": "Bases: ansys.tools.variableinterop.numeric_metadata.NumericMetadata\nProvides metadata for INTEGER and INTEGER_ARRAY variable types.\nIntegerMetadata\nIntegerMetadata\nansys.tools.variableinterop.numeric_metadata.NumericMetadata\nINTEGER\nINTEGER_ARRAY"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#ansys.tools.variableinterop.scalar_metadata.IntegerMetadata",
        "title": "IntegerMetadata > IntegerMetadata > IntegerMetadata",
        "section": "IntegerMetadata > IntegerMetadata",
        "text": "class ansys.tools.variableinterop.scalar_metadata.IntegerMetadata\n\nBases: ansys.tools.variableinterop.numeric_metadata.NumericMetadata\n\nProvides metadata for INTEGER and INTEGER_ARRAY variable types.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#overview",
        "title": "IntegerMetadata > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nequals\nDetermine if a given metadata is equal to this metadata.\nvariable_type\nVariable type of the object.\nlower_bound\nHard lower bound for the variable.\nupper_bound\nHard upper bound for the variable.\nenumerated_values\nList of enumerated values.\nenumerated_aliases\nList of enumerated aliases.\n__eq__\nDetermine if the object is equal to the metadata.\nOverview\naccept\nequals\nvariable_type\nlower_bound\nupper_bound\nenumerated_values\nenumerated_aliases\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#import-detail",
        "title": "IntegerMetadata > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#property-detail",
        "title": "IntegerMetadata > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nHard lower bound for the variable.\nSystems utilizing this variable should prevent setting the\nvalue below this lower bound. This is typically used to\nrepresent physical impossibilities (negative length) or limits\nof the simulation software. Values below this hard lower bound\ncause an error or invalid result. This may not be the soft bounds used\nfor an optimization design parameter or DOE exploration.\nLower bound or None if no lower bound is specified.\nHard upper bound for the variable.\nSystems utilizing this variable should prevent setting the\nvalue above this upper bound. This is typically used to\nrepresent physical impossibilities (100%) or limits of the\nsimulation software. Values above this hard upper bound cause\nan error or invalid result. This may not be the soft bounds used for an\noptimization design parameter or DOE exploration.\nUpper bound or None if no upper bound is specified.\nList of enumerated values.\nThis list may be empty to imply that there are no enumerated values.\nList of enumerated values.\nList of enumerated aliases.\nThis list may be empty to imply that there are no enumerated aliases.\nList of enumerated aliases.\nProperty detail\nVariableType\nOptional\nIntegerValue\nNone\nOptional\nIntegerValue\nNone\nList\nIntegerValue\nList\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#IntegerMetadata.variable_type",
        "title": "IntegerMetadata > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property IntegerMetadata.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#IntegerMetadata.lower_bound",
        "title": "IntegerMetadata > Property detail > lower_bound",
        "section": "Property detail > lower_bound",
        "text": "property IntegerMetadata.lower_bound: ansys.tools.variableinterop.scalar_values.IntegerValue | None\n\nHard lower bound for the variable.\n\nSystems utilizing this variable should prevent setting the\nvalue below this lower bound. This is typically used to\nrepresent physical impossibilities (negative length) or limits\nof the simulation software. Values below this hard lower bound\ncause an error or invalid result. This may not be the soft bounds used\nfor an optimization design parameter or DOE exploration.\n\nReturns\n\nOptional[IntegerValue]\n\nLower bound or None if no lower bound is specified.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#IntegerMetadata.upper_bound",
        "title": "IntegerMetadata > Property detail > upper_bound",
        "section": "Property detail > upper_bound",
        "text": "property IntegerMetadata.upper_bound: ansys.tools.variableinterop.scalar_values.IntegerValue | None\n\nHard upper bound for the variable.\n\nSystems utilizing this variable should prevent setting the\nvalue above this upper bound. This is typically used to\nrepresent physical impossibilities (100%) or limits of the\nsimulation software. Values above this hard upper bound cause\nan error or invalid result. This may not be the soft bounds used for an\noptimization design parameter or DOE exploration.\n\nReturns\n\nOptional[IntegerValue]\n\nUpper bound or None if no upper bound is specified.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#IntegerMetadata.enumerated_values",
        "title": "IntegerMetadata > Property detail > enumerated_values",
        "section": "Property detail > enumerated_values",
        "text": "property IntegerMetadata.enumerated_values: List[ansys.tools.variableinterop.scalar_values.IntegerValue]\n\nList of enumerated values.\n\nThis list may be empty to imply that there are no enumerated values.\n\nReturns\n\nList[IntegerValue]\n\nList of enumerated values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#IntegerMetadata.enumerated_aliases",
        "title": "IntegerMetadata > Property detail > enumerated_aliases",
        "section": "Property detail > enumerated_aliases",
        "text": "property IntegerMetadata.enumerated_aliases: List[str]\n\nList of enumerated aliases.\n\nThis list may be empty to imply that there are no enumerated aliases.\n\nReturns\n\nList[python:str]\n\nList of enumerated aliases.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#method-detail",
        "title": "IntegerMetadata > Method detail",
        "section": "Method detail",
        "text": "Determine if the object is equal to the metadata.\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nDetermine if a given metadata is equal to this metadata.\nGiven metadata to compare this metadate to.\nTrue if the two objects are equal, False otherwise.\nMethod detail\nIVariableMetadataVisitor\nT\nT\nAny\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#IntegerMetadata.__eq__",
        "title": "IntegerMetadata > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "IntegerMetadata.__eq__(other)\n\nDetermine if the object is equal to the metadata.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#IntegerMetadata.accept",
        "title": "IntegerMetadata > Method detail > accept",
        "section": "Method detail > accept",
        "text": "IntegerMetadata.accept(visitor: ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor[ansys.tools.variableinterop.ivariablemetadata_visitor.T]) -> ansys.tools.variableinterop.ivariablemetadata_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableMetadataVisitor[T]\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/IntegerMetadata.html#IntegerMetadata.equals",
        "title": "IntegerMetadata > Method detail > equals",
        "section": "Method detail > equals",
        "text": "IntegerMetadata.equals(other: Any) -> bool\n\nDetermine if a given metadata is equal to this metadata.\n\nParameters\n\nother\n\nAny\n\nGiven metadata to compare this metadate to.\n\nReturns\n\nbool\n\nTrue if the two objects are equal, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/index",
        "href": "api/ansys/tools/variableinterop/exceptions/index.html#the-exceptionspy-module",
        "title": "The exceptions.py module",
        "section": "The exceptions.py module",
        "text": "The exceptions.py module\nexceptions.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/index",
        "href": "api/ansys/tools/variableinterop/exceptions/index.html#summary",
        "title": "The exceptions.py module > Summary",
        "section": "Summary",
        "text": "IncompatibleTypesException\nIndicates that the types used in a conversion are incompatible.\nFormatException\nIndicates that the string used to create a variable value was incorrectly\nValueDeserializationUnsupportedException\nIndicates that deserializing a value is not allowed.\nSummary\nIncompatibleTypesException\nFormatException\nValueDeserializationUnsupportedException"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/index",
        "href": "api/ansys/tools/variableinterop/exceptions/index.html#description",
        "title": "The exceptions.py module > Description",
        "section": "Description",
        "text": "Provides custom exception types.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#realarrayvalue",
        "title": "RealArrayValue",
        "section": "RealArrayValue",
        "text": "Bases: ansys.tools.variableinterop.variable_value.CommonArrayValue[numpy.float64]\nStores a value as a RealArrayValue variable type.\nIn Python, the RealArrayValue type is implemented by extending NumPy’s ndarray type.\nThis means that they decay naturally into numpy.ndarray objects when using NumPy’s\narray operators. It also means that they inherit many of the NumPy behaviors, which\nmay be slightly different from the behaviors specified in the variable interop\nstandards. For example, when converting from real to integer, the value is\nfloored instead of rounded. If you want the variable interop standard conversions,\ncall the to_integer_array_value method on the RealArrayValue type and use the resulting\nIntegerArrayValue type as you would a NumPy ndarray of int64 values.\nRealArrayValue\nRealArrayValue\nansys.tools.variableinterop.variable_value.CommonArrayValue\nnumpy.float64\nRealArrayValue\nRealArrayValue\nndarray\nnumpy.ndarray\nto_integer_array_value\nRealArrayValue\nIntegerArrayValue\nndarray"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#ansys.tools.variableinterop.array_values.RealArrayValue",
        "title": "RealArrayValue > RealArrayValue > RealArrayValue",
        "section": "RealArrayValue > RealArrayValue",
        "text": "class ansys.tools.variableinterop.array_values.RealArrayValue\n\nBases: ansys.tools.variableinterop.variable_value.CommonArrayValue[numpy.float64]\n\nStores a value as a RealArrayValue variable type.\n\nIn Python, the RealArrayValue type is implemented by extending NumPy’s ndarray type.\nThis means that they decay naturally into numpy.ndarray objects when using NumPy’s\narray operators. It also means that they inherit many of the NumPy behaviors, which\nmay be slightly different from the behaviors specified in the variable interop\nstandards. For example, when converting from real to integer, the value is\nfloored instead of rounded. If you want the variable interop standard conversions,\ncall the to_integer_array_value method on the RealArrayValue type and use the resulting\nIntegerArrayValue type as you would a NumPy ndarray of int64 values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#overview",
        "title": "RealArrayValue > Overview",
        "section": "Overview",
        "text": "clone\naccept\nto_boolean_array_value\nConvert this value to a BooleanArrayValue type.\nto_integer_array_value\nConvert this value to an IntegerArrayValue type.\nto_string_array_value\nConvert the value to a StringArrayValue type.\nto_api_string\nto_display_string\nvariable_type\nfrom_api_string\nConvert an API-formatted string to the RealArrayValue type.\n__eq__\nOverview\nclone\naccept\nto_boolean_array_value\nBooleanArrayValue\nto_integer_array_value\nIntegerArrayValue\nto_string_array_value\nStringArrayValue\nto_api_string\nto_display_string\nvariable_type\nfrom_api_string\nRealArrayValue\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#import-detail",
        "title": "RealArrayValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#property-detail",
        "title": "RealArrayValue > Property detail",
        "section": "Property detail",
        "text": "Property detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#RealArrayValue.variable_type",
        "title": "RealArrayValue > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property RealArrayValue.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#method-detail",
        "title": "RealArrayValue > Method detail",
        "section": "Method detail",
        "text": "Convert this value to a BooleanArrayValue type.\nBooleanArrayValue type with the same values converted to Boolean values.\nConvert this value to an IntegerArrayValue type.\nIntegerArrayValue type with the same values converted to integers.\nConvert the value to a StringArrayValue type.\nStringArrayValue type with the same value converted to strings.\nConvert an API-formatted string to the RealArrayValue type.\nAPI string to parse.\nResult of parsing the RealArrayValue type.\nMethod detail\nBooleanArrayValue\nBooleanArrayValue\nBooleanArrayValue\nIntegerArrayValue\nIntegerArrayValue\nIntegerArrayValue\nStringArrayValue\nStringArrayValue\nStringArrayValue\nRealArrayValue\npython:str\nRealArrayValue\nRealArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#RealArrayValue.__eq__",
        "title": "RealArrayValue > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "RealArrayValue.__eq__(other: RealArrayValue) -> bool\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#RealArrayValue.clone",
        "title": "RealArrayValue > Method detail > clone",
        "section": "Method detail > clone",
        "text": "RealArrayValue.clone() -> RealArrayValue\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#RealArrayValue.accept",
        "title": "RealArrayValue > Method detail > accept",
        "section": "Method detail > accept",
        "text": "RealArrayValue.accept(visitor: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[T]) -> T\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#RealArrayValue.to_boolean_array_value",
        "title": "RealArrayValue > Method detail > to_boolean_array_value",
        "section": "Method detail > to_boolean_array_value",
        "text": "RealArrayValue.to_boolean_array_value() -> BooleanArrayValue\n\nConvert this value to a BooleanArrayValue type.\n\nReturns\n\nBooleanArrayValue\n\nBooleanArrayValue type with the same values converted to Boolean values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#RealArrayValue.to_integer_array_value",
        "title": "RealArrayValue > Method detail > to_integer_array_value",
        "section": "Method detail > to_integer_array_value",
        "text": "RealArrayValue.to_integer_array_value() -> IntegerArrayValue\n\nConvert this value to an IntegerArrayValue type.\n\nReturns\n\nIntegerArrayValue\n\nIntegerArrayValue type with the same values converted to integers.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#RealArrayValue.to_string_array_value",
        "title": "RealArrayValue > Method detail > to_string_array_value",
        "section": "Method detail > to_string_array_value",
        "text": "RealArrayValue.to_string_array_value() -> StringArrayValue\n\nConvert the value to a StringArrayValue type.\n\nReturns\n\nStringArrayValue\n\nStringArrayValue type with the same value converted to strings.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#RealArrayValue.to_api_string",
        "title": "RealArrayValue > Method detail > to_api_string",
        "section": "Method detail > to_api_string",
        "text": "RealArrayValue.to_api_string(context: ansys.tools.variableinterop.isave_context.ISaveContext | None = None) -> str\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#RealArrayValue.from_api_string",
        "title": "RealArrayValue > Method detail > from_api_string",
        "section": "Method detail > from_api_string",
        "text": "static RealArrayValue.from_api_string(value: str) -> RealArrayValue\n\nConvert an API-formatted string to the RealArrayValue type.\n\nParameters\n\nvalue\n\npython:str\n\nAPI string to parse.\n\nReturns\n\nRealArrayValue\n\nResult of parsing the RealArrayValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_values/RealArrayValue",
        "href": "api/ansys/tools/variableinterop/array_values/RealArrayValue.html#RealArrayValue.to_display_string",
        "title": "RealArrayValue > Method detail > to_display_string",
        "section": "Method detail > to_display_string",
        "text": "RealArrayValue.to_display_string(locale_name: str) -> str\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/index",
        "href": "api/ansys/tools/variableinterop/file_metadata/index.html#the-file_metadatapy-module",
        "title": "The file_metadata.py module",
        "section": "The file_metadata.py module",
        "text": "The file_metadata.py module\nfile_metadata.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/index",
        "href": "api/ansys/tools/variableinterop/file_metadata/index.html#summary",
        "title": "The file_metadata.py module > Summary",
        "section": "Summary",
        "text": "FileMetadata\nProvides metadata for the File variable type.\nT\nSummary\nFileMetadata\nFile\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/index",
        "href": "api/ansys/tools/variableinterop/file_metadata/index.html#description",
        "title": "The file_metadata.py module > Description",
        "section": "Description",
        "text": "Defines the FileMetadata class.\nDescription\nFileMetadata"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/index",
        "href": "api/ansys/tools/variableinterop/file_metadata/index.html#module-detail",
        "title": "The file_metadata.py module > Module detail",
        "section": "Module detail",
        "text": "Module detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/index",
        "href": "api/ansys/tools/variableinterop/file_metadata/index.html#file_metadata.T",
        "title": "The file_metadata.py module > Module detail > T",
        "section": "Module detail > T",
        "text": "file_metadata.T\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_metadata/index",
        "href": "api/ansys/tools/variableinterop/file_array_metadata/index.html#the-file_array_metadatapy-module",
        "title": "The file_array_metadata.py module",
        "section": "The file_array_metadata.py module",
        "text": "The file_array_metadata.py module\nfile_array_metadata.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_metadata/index",
        "href": "api/ansys/tools/variableinterop/file_array_metadata/index.html#summary",
        "title": "The file_array_metadata.py module > Summary",
        "section": "Summary",
        "text": "FileArrayMetadata\nProvides metadata for the FileArray variable type.\nSummary\nFileArrayMetadata\nFileArray"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_metadata/index",
        "href": "api/ansys/tools/variableinterop/file_array_metadata/index.html#description",
        "title": "The file_array_metadata.py module > Description",
        "section": "Description",
        "text": "Defines the FileArrayMetadata class.\nDescription\nFileArrayMetadata"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileValue.html#localfilevalue",
        "title": "LocalFileValue",
        "section": "LocalFileValue",
        "text": "Bases: FileValue, abc.ABC\nBase class for file values where the file contents already exist on the local disk.\nGenerally speaking, clients of this library should not attempt to use this class. It\nis intended for dependents of this library who are attempting to implement a new\nFileScope instance that always stores the content of a file on the local disk.\nClients are discouraged from attempting to introspect a FileValues``instance to\ndetermine if they are instances of ``LocalFileValue for the purpose of getting a path to the\nlocally stored content. Instead, always correctly use the\nget_reference_to_actual_content_file method for the FileValue instance to\nallow the code in question to get the local path, even for files that are not\noriginally hosted locally. For files that are originally hosted locally, this\ndoes not produce an additional copy but rather gives a context manager that does\nnothing on enter or exit but still allows access to the actual content path.\nLocalFileValue\nLocalFileValue\nFileValue\nabc.ABC\nFileScope\nFileValues``instance to\ndetermine if they are instances of ``LocalFileValue\nget_reference_to_actual_content_file\nFileValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileValue.html#ansys.tools.variableinterop.file_value.LocalFileValue",
        "title": "LocalFileValue > LocalFileValue > LocalFileValue",
        "section": "LocalFileValue > LocalFileValue",
        "text": "class ansys.tools.variableinterop.file_value.LocalFileValue(original_path: os.PathLike | None = None, mime_type: str | None = None, encoding: str | None = None, value_id: uuid.UUID | None = None, file_size: int | None = None, actual_content_file_name: os.PathLike | None = None)\n\nBases: FileValue, abc.ABC\n\nBase class for file values where the file contents already exist on the local disk.\n\nGenerally speaking, clients of this library should not attempt to use this class. It\nis intended for dependents of this library who are attempting to implement a new\nFileScope instance that always stores the content of a file on the local disk.\nClients are discouraged from attempting to introspect a FileValues``instance to\ndetermine if they are instances of ``LocalFileValue for the purpose of getting a path to the\nlocally stored content. Instead, always correctly use the\nget_reference_to_actual_content_file method for the FileValue instance to\nallow the code in question to get the local path, even for files that are not\noriginally hosted locally. For files that are originally hosted locally, this\ndoes not produce an additional copy but rather gives a context manager that does\nnothing on enter or exit but still allows access to the actual content path.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileValue.html#overview",
        "title": "LocalFileValue > Overview",
        "section": "Overview",
        "text": "get_reference_to_actual_content_file_async\nRealize the file contents to a local filesystem if needed.\nget_reference_to_actual_content_file\nRealizes the file contents to a local filesystem if needed.\nactual_content_file_name\nGet the path to the file that this FileValue instance wraps.\nOverview\nget_reference_to_actual_content_file_async\nget_reference_to_actual_content_file\nactual_content_file_name\nFileValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileValue.html#import-detail",
        "title": "LocalFileValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileValue.html#property-detail",
        "title": "LocalFileValue > Property detail",
        "section": "Property detail",
        "text": "Get the path to the file that this FileValue instance wraps.\nPathLike to the file.\nProperty detail\nFileValue\nOptional\nPathLike"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileValue.html#LocalFileValue.actual_content_file_name",
        "title": "LocalFileValue > Property detail > actual_content_file_name",
        "section": "Property detail > actual_content_file_name",
        "text": "property LocalFileValue.actual_content_file_name: os.PathLike | None\n\nGet the path to the file that this FileValue instance wraps.\n\nReturns\n\nOptional[PathLike]\n\nPathLike to the file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileValue.html#method-detail",
        "title": "LocalFileValue > Method detail",
        "section": "Method detail",
        "text": "Realize the file contents to a local filesystem if needed.\nThe FileValue instance is intended to represent an immutable value. The file\nreturned by this call may point to a cached file or even the original file. Callers\nmust not modify the file on disk. Otherwise, undefined behaviors, including class 3 errors,\nmay occur. If the caller needs to modify the file, consider using the write_file\nmethod or copying the file before modifying it.\nCallback that can be called to indicate progress in realizing the local copy.\nThe default is None, in which case this method makes no attempt\nto report its progress. This method may call a provided callback with a\npercentage value between 0 and 100 inclusive. The provided callback may not\nnecessarily be called at all, and calls for 0 or 100 percent are not guaranteed,\neven if other calls occur.\nContext manager that, when exited, deletes the local copy\nif it is a temporary file.\nRealizes the file contents to a local filesystem if needed.\nThe FileValue instance is intended to represent an immutable value. The file\nreturned by this call may point to a cached file or even the original file. Callers\nmust not modify the file on disk. Otherwise, undefined behaviors, including class 3 errors,\nmay occur. If the caller needs to modify the file, consider using the write_file\nmethod or copying the file before modifying it.\nCallback that can be called to indicate progress in realizing the local copy.\nThe default is None, in which case this method makes no attempt\nto report its progress. This method may call a provided callback with a\npercentage value between 0 and 100 inclusive. The provided callback may not\nnecessarily be called at all, and calls for 0 or 100 percent are not guaranteed,\neven if other calls occur.\nContext manager that, when exited, deletes the local copy\nif it is a temporary file.\nMethod detail\nFileValue\nwrite_file\nOptional\nCallable\npython:int\npython:None\noptional\nNone\nAsyncLocalFileContentContext\nFileValue\nwrite_file\nOptional\nCallable\npython:int\npython:None\noptional\nNone\nLocalFileContentContext"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileValue.html#LocalFileValue.get_reference_to_actual_content_file_async",
        "title": "LocalFileValue > Method detail > get_reference_to_actual_content_file_async",
        "section": "Method detail > get_reference_to_actual_content_file_async",
        "text": "async LocalFileValue.get_reference_to_actual_content_file_async(progress_callback: Callable[[int], None] | None = None) -> AsyncLocalFileContentContext\n\nRealize the file contents to a local filesystem if needed.\n\nThe FileValue instance is intended to represent an immutable value. The file\nreturned by this call may point to a cached file or even the original file. Callers\nmust not modify the file on disk. Otherwise, undefined behaviors, including class 3 errors,\nmay occur. If the caller needs to modify the file, consider using the write_file\nmethod or copying the file before modifying it.\n\nParameters\n\nprogress_callback\n\nOptional[Callable[[python:int], python:None]], optional\n\nCallback that can be called to indicate progress in realizing the local copy.\nThe default is None, in which case this method makes no attempt\nto report its progress. This method may call a provided callback with a\npercentage value between 0 and 100 inclusive. The provided callback may not\nnecessarily be called at all, and calls for 0 or 100 percent are not guaranteed,\neven if other calls occur.\n\nReturns\n\nAsyncLocalFileContentContext\n\nContext manager that, when exited, deletes the local copy\nif it is a temporary file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/LocalFileValue",
        "href": "api/ansys/tools/variableinterop/file_value/LocalFileValue.html#LocalFileValue.get_reference_to_actual_content_file",
        "title": "LocalFileValue > Method detail > get_reference_to_actual_content_file",
        "section": "Method detail > get_reference_to_actual_content_file",
        "text": "LocalFileValue.get_reference_to_actual_content_file(progress_callback: Callable[[int], None] | None = None) -> LocalFileContentContext\n\nRealizes the file contents to a local filesystem if needed.\n\nThe FileValue instance is intended to represent an immutable value. The file\nreturned by this call may point to a cached file or even the original file. Callers\nmust not modify the file on disk. Otherwise, undefined behaviors, including class 3 errors,\nmay occur. If the caller needs to modify the file, consider using the write_file\nmethod or copying the file before modifying it.\n\nParameters\n\nprogress_callback\n\nOptional[Callable[[python:int], python:None]], optional\n\nCallback that can be called to indicate progress in realizing the local copy.\nThe default is None, in which case this method makes no attempt\nto report its progress. This method may call a provided callback with a\npercentage value between 0 and 100 inclusive. The provided callback may not\nnecessarily be called at all, and calls for 0 or 100 percent are not guaranteed,\neven if other calls occur.\n\nReturns\n\nLocalFileContentContext\n\nContext manager that, when exited, deletes the local copy\nif it is a temporary file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/ValueDeserializationUnsupportedException",
        "href": "api/ansys/tools/variableinterop/exceptions/ValueDeserializationUnsupportedException.html#valuedeserializationunsupportedexception",
        "title": "ValueDeserializationUnsupportedException",
        "section": "ValueDeserializationUnsupportedException",
        "text": "Bases: Exception\nIndicates that deserializing a value is not allowed.\nValueDeserializationUnsupportedException\nValueDeserializationUnsupportedException\nException"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/ValueDeserializationUnsupportedException",
        "href": "api/ansys/tools/variableinterop/exceptions/ValueDeserializationUnsupportedException.html#ansys.tools.variableinterop.exceptions.ValueDeserializationUnsupportedException",
        "title": "ValueDeserializationUnsupportedException > ValueDeserializationUnsupportedException > ValueDeserializationUnsupportedException",
        "section": "ValueDeserializationUnsupportedException > ValueDeserializationUnsupportedException",
        "text": "exception ansys.tools.variableinterop.exceptions.ValueDeserializationUnsupportedException(message: str)\n\nBases: Exception\n\nIndicates that deserializing a value is not allowed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/ValueDeserializationUnsupportedException",
        "href": "api/ansys/tools/variableinterop/exceptions/ValueDeserializationUnsupportedException.html#import-detail",
        "title": "ValueDeserializationUnsupportedException > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/index",
        "href": "api/ansys/tools/variableinterop/scalar_values/index.html#the-scalar_valuespy-module",
        "title": "The scalar_values.py module",
        "section": "The scalar_values.py module",
        "text": "The scalar_values.py module\nscalar_values.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/index",
        "href": "api/ansys/tools/variableinterop/scalar_values/index.html#summary",
        "title": "The scalar_values.py module > Summary",
        "section": "Summary",
        "text": "BooleanValue\nStores a value as a BooleanValue variable type.\nIntegerValue\nStores a value as an IntegerValue variable type.\nRealValue\nStores a value as a RealValue variable type.\nStringValue\nStores a value as an IVariableValue variable type.\nSummary\nBooleanValue\nBooleanValue\nIntegerValue\nIntegerValue\nRealValue\nRealValue\nStringValue\nIVariableValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/index",
        "href": "api/ansys/tools/variableinterop/scalar_values/index.html#description",
        "title": "The scalar_values.py module > Description",
        "section": "Description",
        "text": "Defines all scalar value implementations of the IVariableValue variable type.\nDescription\nIVariableValue"
    },
    {
        "objectID": "user_guide/index",
        "href": "user_guide/index.html#user-guide",
        "title": "User guide",
        "section": "User guide",
        "text": "You can create values and metadata like any other Python object:\nUser guide"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/Strings",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/Strings.html#strings",
        "title": "Strings",
        "section": "Strings",
        "text": "Provides utilities for obtaining string resources.\nStrings\nStrings"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/Strings",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/Strings.html#ansys.tools.variableinterop.utils.locale_utils.Strings",
        "title": "Strings > Strings > Strings",
        "section": "Strings > Strings",
        "text": "class ansys.tools.variableinterop.utils.locale_utils.Strings\n\nProvides utilities for obtaining string resources.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/Strings",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/Strings.html#overview",
        "title": "Strings > Overview",
        "section": "Overview",
        "text": "get\nGet a localized string from strings.properties.\nOverview\nget\nstrings.properties"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/Strings",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/Strings.html#import-detail",
        "title": "Strings > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/Strings",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/Strings.html#method-detail",
        "title": "Strings > Method detail",
        "section": "Method detail",
        "text": "Get a localized string from strings.properties.\nSection of strings.properties to get the localized string from.\nIdentifier for the string to get.\nOptional formatting arguments.\nLocalized string.\nMethod detail\nstrings.properties\npython:str\nstrings.properties\npython:str\nobject\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/Strings",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/Strings.html#Strings.get",
        "title": "Strings > Method detail > get",
        "section": "Method detail > get",
        "text": "static Strings.get(section: str, name: str, *args: object) -> str\n\nGet a localized string from strings.properties.\n\nParameters\n\nsection\n\npython:str\n\nSection of strings.properties to get the localized string from.\n\nname\n\npython:str\n\nIdentifier for the string to get.\n\nargs\n\nobject\n\nOptional formatting arguments.\n\nReturns\n\npython:str\n\nLocalized string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/FileMetadata",
        "href": "api/ansys/tools/variableinterop/file_metadata/FileMetadata.html#filemetadata",
        "title": "FileMetadata",
        "section": "FileMetadata",
        "text": "Bases: ansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata\nProvides metadata for the File variable type.\nFileMetadata\nFileMetadata\nansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata\nFile"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/FileMetadata",
        "href": "api/ansys/tools/variableinterop/file_metadata/FileMetadata.html#ansys.tools.variableinterop.file_metadata.FileMetadata",
        "title": "FileMetadata > FileMetadata > FileMetadata",
        "section": "FileMetadata > FileMetadata",
        "text": "class ansys.tools.variableinterop.file_metadata.FileMetadata\n\nBases: ansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata\n\nProvides metadata for the File variable type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/FileMetadata",
        "href": "api/ansys/tools/variableinterop/file_metadata/FileMetadata.html#overview",
        "title": "FileMetadata > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nequals\nDetermine if the object is equal to the metadata.\nvariable_type\nVariable type of the object.\n__eq__\nDetermine if the object is equal to the metadata.\nOverview\naccept\nequals\nvariable_type\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/FileMetadata",
        "href": "api/ansys/tools/variableinterop/file_metadata/FileMetadata.html#import-detail",
        "title": "FileMetadata > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/FileMetadata",
        "href": "api/ansys/tools/variableinterop/file_metadata/FileMetadata.html#property-detail",
        "title": "FileMetadata > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/FileMetadata",
        "href": "api/ansys/tools/variableinterop/file_metadata/FileMetadata.html#FileMetadata.variable_type",
        "title": "FileMetadata > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property FileMetadata.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/FileMetadata",
        "href": "api/ansys/tools/variableinterop/file_metadata/FileMetadata.html#method-detail",
        "title": "FileMetadata > Method detail",
        "section": "Method detail",
        "text": "Determine if the object is equal to the metadata.\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nDetermine if the object is equal to the metadata.\nOther object to compare this object to.\nTrue if the metadata objects are equal, False otherwise.\nMethod detail\nIVariableMetadataVisitor\nT\nT\nAny\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/FileMetadata",
        "href": "api/ansys/tools/variableinterop/file_metadata/FileMetadata.html#FileMetadata.__eq__",
        "title": "FileMetadata > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "FileMetadata.__eq__(other)\n\nDetermine if the object is equal to the metadata.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/FileMetadata",
        "href": "api/ansys/tools/variableinterop/file_metadata/FileMetadata.html#FileMetadata.accept",
        "title": "FileMetadata > Method detail > accept",
        "section": "Method detail > accept",
        "text": "FileMetadata.accept(visitor: ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor[T]) -> T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableMetadataVisitor[T]\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_metadata/FileMetadata",
        "href": "api/ansys/tools/variableinterop/file_metadata/FileMetadata.html#FileMetadata.equals",
        "title": "FileMetadata > Method detail > equals",
        "section": "Method detail > equals",
        "text": "FileMetadata.equals(other: Any) -> bool\n\nDetermine if the object is equal to the metadata.\n\nParameters\n\nother\n\nAny\n\nOther object to compare this object to.\n\nReturns\n\nbool\n\nTrue if the metadata objects are equal, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/IntegerValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/IntegerValue.html#integervalue",
        "title": "IntegerValue",
        "section": "IntegerValue",
        "text": "Bases: numpy.int64, ansys.tools.variableinterop.variable_value.IVariableValue\nStores a value as an IntegerValue variable type.\nIn Python, the IntegerValue type is implemented by extending NumPy’s int64 type.\nThis means that they will decay naturally into numpy.int64 objects when using NumPy’s\narithmetic operators. It also means that they inherit many of the NumPy behaviors,\nwhich may be slightly different from the behaviors specified in the variable interop\nstandards. For example, when converting from real to integer, the value is\nfloored instead of rounded. If you want the variable interop standard conversions,\nuse the to_real_value() method on this class to get a RealValue type, which\nis rounded according to the variable interop standards and decomposes naturally into a\nnumpy.float64 type. Other conversions to analogous Python or NumPy types are identical\nbetween the variable interop standards and the default Python and NumPy behaviors.\nIntegerValue\nIntegerValue\nnumpy.int64\nansys.tools.variableinterop.variable_value.IVariableValue\nIntegerValue\nIntegerValue\nnumpy.int64\nto_real_value()\nRealValue type\nnumpy.float64"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/IntegerValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/IntegerValue.html#ansys.tools.variableinterop.scalar_values.IntegerValue",
        "title": "IntegerValue > IntegerValue > IntegerValue",
        "section": "IntegerValue > IntegerValue",
        "text": "class ansys.tools.variableinterop.scalar_values.IntegerValue\n\nBases: numpy.int64, ansys.tools.variableinterop.variable_value.IVariableValue\n\nStores a value as an IntegerValue variable type.\n\nIn Python, the IntegerValue type is implemented by extending NumPy’s int64 type.\nThis means that they will decay naturally into numpy.int64 objects when using NumPy’s\narithmetic operators. It also means that they inherit many of the NumPy behaviors,\nwhich may be slightly different from the behaviors specified in the variable interop\nstandards. For example, when converting from real to integer, the value is\nfloored instead of rounded. If you want the variable interop standard conversions,\nuse the to_real_value() method on this class to get a RealValue type, which\nis rounded according to the variable interop standards and decomposes naturally into a\nnumpy.float64 type. Other conversions to analogous Python or NumPy types are identical\nbetween the variable interop standards and the default Python and NumPy behaviors.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/IntegerValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/IntegerValue.html#overview",
        "title": "IntegerValue > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nto_api_string\nConvert the value to an API string.\nto_real_value\nConvert this IntegerValue type to a RealValue type.\nto_display_string\nConvert the value to a formatted string.\nvariable_type\nVariable type of the object.\nfrom_api_string\nCreate an IntegerValue type from an API string.\nOverview\naccept\nto_api_string\nto_real_value\nIntegerValue\nRealValue\nto_display_string\nvariable_type\nfrom_api_string\nIntegerValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/IntegerValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/IntegerValue.html#import-detail",
        "title": "IntegerValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/IntegerValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/IntegerValue.html#property-detail",
        "title": "IntegerValue > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/IntegerValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/IntegerValue.html#IntegerValue.variable_type",
        "title": "IntegerValue > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property IntegerValue.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/IntegerValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/IntegerValue.html#method-detail",
        "title": "IntegerValue > Method detail",
        "section": "Method detail",
        "text": "Invoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nConvert the value to an API string.\nString appropriate for use in files and APIs.\nConvert this IntegerValue type to a RealValue type.\nBecause a RealValue type is a 64-bit floating point number, it has a 52-bit mantissa.\nThat means that a portion of the range of 64-bit IntegerValue types cannot be completely\naccurately represented by RealValue types. This conversion is sometimes lossy for\nIntegerValue types of sufficient magnitude.\nRealValue type with the same numeric value as the IntegerValue type.\nCreate an IntegerValue type from an API string.\nLeading and trailing whitespace is ignored.\nValues that can be correctly parsed as floating-point numbers\nare parsed in that manner and then rounded to integers. When rounding,\nvalues with a 5 in the tenths place are rounded away from zero.\nString to parse.\nIntegerValue type parsed from the API string.\nConvert the value to a formatted string.\nLocale to format the string in.\nString appropriate for use in user-facing areas.\nMethod detail\nIVariableValueVisitor\nT\npython:str\nIntegerValue\nRealValue\nRealValue\nIntegerValue\nRealValue\nIntegerValue\nRealValue\nRealValue\nIntegerValue\nIntegerValue\npython:str\nIntegerValue\nIntegerValue\npython:str\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/IntegerValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/IntegerValue.html#IntegerValue.accept",
        "title": "IntegerValue > Method detail > accept",
        "section": "Method detail > accept",
        "text": "IntegerValue.accept(visitor: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[ansys.tools.variableinterop.ivariable_visitor.T]) -> ansys.tools.variableinterop.ivariable_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableValueVisitor\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/IntegerValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/IntegerValue.html#IntegerValue.to_api_string",
        "title": "IntegerValue > Method detail > to_api_string",
        "section": "Method detail > to_api_string",
        "text": "IntegerValue.to_api_string(context: ansys.tools.variableinterop.isave_context.ISaveContext | None = None) -> str\n\nConvert the value to an API string.\n\nReturns\n\npython:str\n\nString appropriate for use in files and APIs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/IntegerValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/IntegerValue.html#IntegerValue.to_real_value",
        "title": "IntegerValue > Method detail > to_real_value",
        "section": "Method detail > to_real_value",
        "text": "IntegerValue.to_real_value() -> RealValue\n\nConvert this IntegerValue type to a RealValue type.\n\nBecause a RealValue type is a 64-bit floating point number, it has a 52-bit mantissa.\nThat means that a portion of the range of 64-bit IntegerValue types cannot be completely\naccurately represented by RealValue types. This conversion is sometimes lossy for\nIntegerValue types of sufficient magnitude.\n\nReturns\n\nRealValue\n\nRealValue type with the same numeric value as the IntegerValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/IntegerValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/IntegerValue.html#IntegerValue.from_api_string",
        "title": "IntegerValue > Method detail > from_api_string",
        "section": "Method detail > from_api_string",
        "text": "static IntegerValue.from_api_string(value: str) -> IntegerValue\n\nCreate an IntegerValue type from an API string.\n\nLeading and trailing whitespace is ignored.\nValues that can be correctly parsed as floating-point numbers\nare parsed in that manner and then rounded to integers. When rounding,\nvalues with a 5 in the tenths place are rounded away from zero.\n\nParameters\n\nvalue\n\npython:str\n\nString to parse.\n\nReturns\n\nIntegerValue\n\nIntegerValue type parsed from the API string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/IntegerValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/IntegerValue.html#IntegerValue.to_display_string",
        "title": "IntegerValue > Method detail > to_display_string",
        "section": "Method detail > to_display_string",
        "text": "IntegerValue.to_display_string(locale_name: str) -> str\n\nConvert the value to a formatted string.\n\nParameters\n\nlocale_name\n\npython:str\n\nLocale to format the string in.\n\nReturns\n\npython:str\n\nString appropriate for use in user-facing areas.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#realvalue",
        "title": "RealValue",
        "section": "RealValue",
        "text": "Bases: numpy.float64, ansys.tools.variableinterop.variable_value.IVariableValue\nStores a value as a RealValue variable type.\nIn Python, the RealValue type is implemented by extending NumPy’s float64 type. This means\nthat they decay naturally into numpy.float64 objects when using NumPy’s\narithmetic operators. It also means that they inherit many of the NumPy behaviors,\nwhich may be slightly different from the behaviors specified in the variable interop\nstandards. For example, when converting from real to integer, the value is\nfloored instead of rounded. If you want the variable interop standard conversions,\nuse the to_int_value() method to get an IntegerValue type with variable\ninterop standard rounding (away from zero). The IntegerValue type decomposes naturally to\nnumpy.int64 objects.\nRealValue\nRealValue\nnumpy.float64\nansys.tools.variableinterop.variable_value.IVariableValue\nRealValue\nRealValue\nnumpy.float64\nto_int_value()\nIntegerValue\nIntegerValue\nnumpy.int64"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#ansys.tools.variableinterop.scalar_values.RealValue",
        "title": "RealValue > RealValue > RealValue",
        "section": "RealValue > RealValue",
        "text": "class ansys.tools.variableinterop.scalar_values.RealValue\n\nBases: numpy.float64, ansys.tools.variableinterop.variable_value.IVariableValue\n\nStores a value as a RealValue variable type.\n\nIn Python, the RealValue type is implemented by extending NumPy’s float64 type. This means\nthat they decay naturally into numpy.float64 objects when using NumPy’s\narithmetic operators. It also means that they inherit many of the NumPy behaviors,\nwhich may be slightly different from the behaviors specified in the variable interop\nstandards. For example, when converting from real to integer, the value is\nfloored instead of rounded. If you want the variable interop standard conversions,\nuse the to_int_value() method to get an IntegerValue type with variable\ninterop standard rounding (away from zero). The IntegerValue type decomposes naturally to\nnumpy.int64 objects.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#overview",
        "title": "RealValue > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nto_api_string\nConvert the value to an API string.\nto_int_value\nConvert this RealValue type to an IntegerValue type.\nto_boolean_value\nConvert this RealValue``type to a ``BooleanValue type.\nto_display_string\nConvert the value to a formatted string.\nvariable_type\nVariable type of the object.\nfrom_api_string\nConvert an API string back into a RealValue type.\n__str__\nOverview\naccept\nto_api_string\nto_int_value\nRealValue\nIntegerValue\nto_boolean_value\nRealValue``type to a ``BooleanValue\nto_display_string\nvariable_type\nfrom_api_string\nRealValue\n__str__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#import-detail",
        "title": "RealValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#property-detail",
        "title": "RealValue > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#RealValue.variable_type",
        "title": "RealValue > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property RealValue.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#method-detail",
        "title": "RealValue > Method detail",
        "section": "Method detail",
        "text": "Invoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nConvert the value to an API string.\nString appropriate for use in files and APIs.\nConvert an API string back into a RealValue type.\nString to convert.\nConvert this RealValue type to an IntegerValue type.\nThe conversion is performed according to the type\ninteroperability specifications. The value is rounded to the\nnearest integer, where values with a 5 in the tenths place are\nalways rounded away from zero. (Note that this is different\nfrom the default Python rounding behavior.)\nIntegerValue type that is the result of rounding this value\nto the nearest integer. (Values with a 5 in the tenths place\nare rounded away from zero.)\nConvert this RealValue``type to a ``BooleanValue type.\nThe conversion is performed according to the type\ninteroperability specifications. Any value other than exactly 0\nis considered to be True.\nBooleanValue type that is the result of converting the RealValue type.\nConvert the value to a formatted string.\nLocale to format the string in.\nString appropriate for use in user-facing areas.\nMethod detail\nIVariableValueVisitor\nT\npython:str\nRealValue\npython:str\nRealValue\nIntegerValue\nIntegerValue\nIntegerValue\nRealValue``type to a ``BooleanValue\nTrue\nBooleanValue\nBooleanValue\nRealValue\npython:str\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#RealValue.accept",
        "title": "RealValue > Method detail > accept",
        "section": "Method detail > accept",
        "text": "RealValue.accept(visitor: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[ansys.tools.variableinterop.ivariable_visitor.T]) -> ansys.tools.variableinterop.ivariable_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableValueVisitor\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#RealValue.to_api_string",
        "title": "RealValue > Method detail > to_api_string",
        "section": "Method detail > to_api_string",
        "text": "RealValue.to_api_string(context: ansys.tools.variableinterop.isave_context.ISaveContext | None = None) -> str\n\nConvert the value to an API string.\n\nReturns\n\npython:str\n\nString appropriate for use in files and APIs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#RealValue.__str__",
        "title": "RealValue > Method detail > __str__",
        "section": "Method detail > __str__",
        "text": "RealValue.__str__() -> str\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#RealValue.from_api_string",
        "title": "RealValue > Method detail > from_api_string",
        "section": "Method detail > from_api_string",
        "text": "static RealValue.from_api_string(value: str) -> RealValue\n\nConvert an API string back into a RealValue type.\n\nParameters\n\nvalue\n\npython:str\n\nString to convert.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#RealValue.to_int_value",
        "title": "RealValue > Method detail > to_int_value",
        "section": "Method detail > to_int_value",
        "text": "RealValue.to_int_value() -> IntegerValue\n\nConvert this RealValue type to an IntegerValue type.\n\nThe conversion is performed according to the type\ninteroperability specifications. The value is rounded to the\nnearest integer, where values with a 5 in the tenths place are\nalways rounded away from zero. (Note that this is different\nfrom the default Python rounding behavior.)\n\nReturns\n\nIntegerValue\n\nIntegerValue type that is the result of rounding this value\nto the nearest integer. (Values with a 5 in the tenths place\nare rounded away from zero.)\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#RealValue.to_boolean_value",
        "title": "RealValue > Method detail > to_boolean_value",
        "section": "Method detail > to_boolean_value",
        "text": "RealValue.to_boolean_value() -> BooleanValue\n\nConvert this RealValue``type to a ``BooleanValue type.\n\nThe conversion is performed according to the type\ninteroperability specifications. Any value other than exactly 0\nis considered to be True.\n\nReturns\n\nBooleanValue\n\nBooleanValue type that is the result of converting the RealValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_values/RealValue",
        "href": "api/ansys/tools/variableinterop/scalar_values/RealValue.html#RealValue.to_display_string",
        "title": "RealValue > Method detail > to_display_string",
        "section": "Method detail > to_display_string",
        "text": "RealValue.to_display_string(locale_name: str) -> str\n\nConvert the value to a formatted string.\n\nParameters\n\nlocale_name\n\npython:str\n\nLocale to format the string in.\n\nReturns\n\npython:str\n\nString appropriate for use in user-facing areas.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue",
        "href": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue.html#filearrayvalue",
        "title": "FileArrayValue",
        "section": "FileArrayValue",
        "text": "Bases: ansys.tools.variableinterop.variable_value.CommonArrayValue[ansys.tools.variableinterop.file_value.FileValue]\nStores a value for the FileArrayValue variable type.\nIn Python, the FileArrayValue type is implemented by extending NumPy’s ndarray type.\nThis means that they decay naturally into numpy.ndarray objects when using NumPy’s\narray operators.\nFileArrayValue\nFileArrayValue\nansys.tools.variableinterop.variable_value.CommonArrayValue\nansys.tools.variableinterop.file_value.FileValue\nFileArrayValue\nFileArrayValue\nndarray\nnumpy.ndarray"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue",
        "href": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue.html#ansys.tools.variableinterop.file_array_value.FileArrayValue",
        "title": "FileArrayValue > FileArrayValue > FileArrayValue",
        "section": "FileArrayValue > FileArrayValue",
        "text": "class ansys.tools.variableinterop.file_array_value.FileArrayValue\n\nBases: ansys.tools.variableinterop.variable_value.CommonArrayValue[ansys.tools.variableinterop.file_value.FileValue]\n\nStores a value for the FileArrayValue variable type.\n\nIn Python, the FileArrayValue type is implemented by extending NumPy’s ndarray type.\nThis means that they decay naturally into numpy.ndarray objects when using NumPy’s\narray operators.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue",
        "href": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue.html#overview",
        "title": "FileArrayValue > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nto_api_string\nConvert this value to an API string.\nto_display_string\nConvert the value to a formatted string.\nvariable_type\nVariable type of the object.\nfrom_api_object\nInitialize a new FileArrayValue type from a list of API strings.\n__eq__\nOverview\naccept\nto_api_string\nto_display_string\nvariable_type\nfrom_api_object\nFileArrayValue\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue",
        "href": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue.html#import-detail",
        "title": "FileArrayValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue",
        "href": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue.html#property-detail",
        "title": "FileArrayValue > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue",
        "href": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue.html#FileArrayValue.variable_type",
        "title": "FileArrayValue > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property FileArrayValue.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue",
        "href": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue.html#method-detail",
        "title": "FileArrayValue > Method detail",
        "section": "Method detail",
        "text": "Invoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nConvert this value to an API string.\nContext used for saving.\nString appropriate for use in files and APIs.\nInitialize a new FileArrayValue type from a list of API strings.\nValue to use.\nLoad context to initialize the value with.\nScope to initialize the value in.\nNew FileArrayValue type initialized from the value.\nConvert the value to a formatted string.\nLocale to format the string in.\nString appropriate for use in user-facing areas.\nMethod detail\nIVariableValueVisitor\nT\nISaveContext\npython:str\nFileArrayValue\nAny\nILoadContext\nFileScope\nFileArrayValue\nFileArrayValue\npython:str\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue",
        "href": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue.html#FileArrayValue.__eq__",
        "title": "FileArrayValue > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "FileArrayValue.__eq__(other)\n\n"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue",
        "href": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue.html#FileArrayValue.accept",
        "title": "FileArrayValue > Method detail > accept",
        "section": "Method detail > accept",
        "text": "FileArrayValue.accept(visitor: ansys.tools.variableinterop.ivariable_visitor.IVariableValueVisitor[T]) -> T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableValueVisitor\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue",
        "href": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue.html#FileArrayValue.to_api_string",
        "title": "FileArrayValue > Method detail > to_api_string",
        "section": "Method detail > to_api_string",
        "text": "FileArrayValue.to_api_string(context: ansys.tools.variableinterop.isave_context.ISaveContext | None = None) -> str\n\nConvert this value to an API string.\n\nParameters\n\ncontext\n\nISaveContext\n\nContext used for saving.\n\nReturns\n\npython:str\n\nString appropriate for use in files and APIs.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue",
        "href": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue.html#FileArrayValue.from_api_object",
        "title": "FileArrayValue > Method detail > from_api_object",
        "section": "Method detail > from_api_object",
        "text": "static FileArrayValue.from_api_object(value: Any, context: ansys.tools.variableinterop.isave_context.ILoadContext, scope: ansys.tools.variableinterop.file_scope.FileScope) -> FileArrayValue\n\nInitialize a new FileArrayValue type from a list of API strings.\n\nParameters\n\nvalue\n\nAny\n\nValue to use.\n\ncontext\n\nILoadContext\n\nLoad context to initialize the value with.\n\nscope\n\nFileScope\n\nScope to initialize the value in.\n\nReturns\n\nFileArrayValue\n\nNew FileArrayValue type initialized from the value.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue",
        "href": "api/ansys/tools/variableinterop/file_array_value/FileArrayValue.html#FileArrayValue.to_display_string",
        "title": "FileArrayValue > Method detail > to_display_string",
        "section": "Method detail > to_display_string",
        "text": "FileArrayValue.to_display_string(locale_name: str) -> str\n\nConvert the value to a formatted string.\n\nParameters\n\nlocale_name\n\npython:str\n\nLocale to format the string in.\n\nReturns\n\npython:str\n\nString appropriate for use in user-facing areas.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#realmetadata",
        "title": "RealMetadata",
        "section": "RealMetadata",
        "text": "Bases: ansys.tools.variableinterop.numeric_metadata.NumericMetadata\nProvides metadata for REAL and REAL_ARRAY variable types.\nRealMetadata\nRealMetadata\nansys.tools.variableinterop.numeric_metadata.NumericMetadata\nREAL\nREAL_ARRAY"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#ansys.tools.variableinterop.scalar_metadata.RealMetadata",
        "title": "RealMetadata > RealMetadata > RealMetadata",
        "section": "RealMetadata > RealMetadata",
        "text": "class ansys.tools.variableinterop.scalar_metadata.RealMetadata\n\nBases: ansys.tools.variableinterop.numeric_metadata.NumericMetadata\n\nProvides metadata for REAL and REAL_ARRAY variable types.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#overview",
        "title": "RealMetadata > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nequals\nDetermine if a given metadata is equal to this metadata.\nvariable_type\nVariable type of the object.\nlower_bound\nHard lower bound for the variable.\nupper_bound\nHard upper bound for the variable.\nenumerated_values\nList of enumerated values.\nenumerated_aliases\nList of enumerated aliases.\n__eq__\nDetermine if the object is equal to the metadata.\nOverview\naccept\nequals\nvariable_type\nlower_bound\nupper_bound\nenumerated_values\nenumerated_aliases\n__eq__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#import-detail",
        "title": "RealMetadata > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#property-detail",
        "title": "RealMetadata > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nHard lower bound for the variable.\nSystems utilizing this variable should prevent setting the\nvalue below this lower bound. This is typically used to\nrepresent physical impossibilities (negative length) or limits\nof the simulation software. Values below this hard lower bound\ncause an error or invalid result. This may not be the soft bounds\nused for an optimization design parameter or DOE exploration.\nLower bound or None if no lower bound is specified.\nHard upper bound for the variable.\nSystems utilizing this variable should prevent setting the\nvalue above this upper bound. This is typically used\nto represent physical impossibilities (100%) or limits of the\nsimulation software. Values above this hard upper bound cause an error or\ninvalid result. This may not be the soft bounds used for an\noptimization design parameter or DOE exploration.\nUpper bound or None if no upper bound is specified.\nList of enumerated values.\nThis list may be empty to imply that there are no enumerated values.\nList of enumerated values.\nList of enumerated aliases.\nThis list may be empty to imply that there are no enumerated aliases.\nList of enumerated aliases.\nProperty detail\nVariableType\nOptional\nRealValue\nNone\nOptional\nRealValue\nNone\nList\nRealValue\nList\npython:str"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#RealMetadata.variable_type",
        "title": "RealMetadata > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property RealMetadata.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#RealMetadata.lower_bound",
        "title": "RealMetadata > Property detail > lower_bound",
        "section": "Property detail > lower_bound",
        "text": "property RealMetadata.lower_bound: ansys.tools.variableinterop.scalar_values.RealValue | None\n\nHard lower bound for the variable.\n\nSystems utilizing this variable should prevent setting the\nvalue below this lower bound. This is typically used to\nrepresent physical impossibilities (negative length) or limits\nof the simulation software. Values below this hard lower bound\ncause an error or invalid result. This may not be the soft bounds\nused for an optimization design parameter or DOE exploration.\n\nReturns\n\nOptional[RealValue]\n\nLower bound or None if no lower bound is specified.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#RealMetadata.upper_bound",
        "title": "RealMetadata > Property detail > upper_bound",
        "section": "Property detail > upper_bound",
        "text": "property RealMetadata.upper_bound: ansys.tools.variableinterop.scalar_values.RealValue | None\n\nHard upper bound for the variable.\n\nSystems utilizing this variable should prevent setting the\nvalue above this upper bound. This is typically used\nto represent physical impossibilities (100%) or limits of the\nsimulation software. Values above this hard upper bound cause an error or\ninvalid result. This may not be the soft bounds used for an\noptimization design parameter or DOE exploration.\n\nReturns\n\nOptional[RealValue]\n\nUpper bound or None if no upper bound is specified.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#RealMetadata.enumerated_values",
        "title": "RealMetadata > Property detail > enumerated_values",
        "section": "Property detail > enumerated_values",
        "text": "property RealMetadata.enumerated_values: List[ansys.tools.variableinterop.scalar_values.RealValue]\n\nList of enumerated values.\n\nThis list may be empty to imply that there are no enumerated values.\n\nReturns\n\nList[RealValue]\n\nList of enumerated values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#RealMetadata.enumerated_aliases",
        "title": "RealMetadata > Property detail > enumerated_aliases",
        "section": "Property detail > enumerated_aliases",
        "text": "property RealMetadata.enumerated_aliases: List[str]\n\nList of enumerated aliases.\n\nThis list may be empty to imply that there are no enumerated aliases.\n\nReturns\n\nList[python:str]\n\nList of enumerated aliases.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#method-detail",
        "title": "RealMetadata > Method detail",
        "section": "Method detail",
        "text": "Determine if the object is equal to the metadata.\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nDetermine if a given metadata is equal to this metadata.\nGiven metadata to compare this metadate to.\nTrue if the two objects are equal, False otherwise.\nMethod detail\nIVariableMetadataVisitor\nT\nT\nAny\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#RealMetadata.__eq__",
        "title": "RealMetadata > Method detail > __eq__",
        "section": "Method detail > __eq__",
        "text": "RealMetadata.__eq__(other)\n\nDetermine if the object is equal to the metadata.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#RealMetadata.accept",
        "title": "RealMetadata > Method detail > accept",
        "section": "Method detail > accept",
        "text": "RealMetadata.accept(visitor: ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor[ansys.tools.variableinterop.ivariablemetadata_visitor.T]) -> ansys.tools.variableinterop.ivariablemetadata_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableMetadataVisitor[T]\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata",
        "href": "api/ansys/tools/variableinterop/scalar_metadata/RealMetadata.html#RealMetadata.equals",
        "title": "RealMetadata > Method detail > equals",
        "section": "Method detail > equals",
        "text": "RealMetadata.equals(other: Any) -> bool\n\nDetermine if a given metadata is equal to this metadata.\n\nParameters\n\nother\n\nAny\n\nGiven metadata to compare this metadate to.\n\nReturns\n\nbool\n\nTrue if the two objects are equal, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/vartype_arrays_and_elements/index",
        "href": "api/ansys/tools/variableinterop/vartype_arrays_and_elements/index.html#the-vartype_arrays_and_elementspy-module",
        "title": "The vartype_arrays_and_elements.py module",
        "section": "The vartype_arrays_and_elements.py module",
        "text": "The vartype_arrays_and_elements.py module\nvartype_arrays_and_elements.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/vartype_arrays_and_elements/index",
        "href": "api/ansys/tools/variableinterop/vartype_arrays_and_elements/index.html#summary",
        "title": "The vartype_arrays_and_elements.py module > Summary",
        "section": "Summary",
        "text": "to_array_type\nGiven a variable type, find the corresponding array type, if one exists. Otherwise,\nget_element_type\nGiven a variable type representing an array, return the corresponding element type.\nSummary\nto_array_type\nget_element_type"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/vartype_arrays_and_elements/index",
        "href": "api/ansys/tools/variableinterop/vartype_arrays_and_elements/index.html#description",
        "title": "The vartype_arrays_and_elements.py module > Description",
        "section": "Description",
        "text": "Defines functions for determining the correct array type for a scalar type and vice-\nversa.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/vartype_arrays_and_elements/index",
        "href": "api/ansys/tools/variableinterop/vartype_arrays_and_elements/index.html#module-detail",
        "title": "The vartype_arrays_and_elements.py module > Module detail",
        "section": "Module detail",
        "text": "Given a variable type, find the corresponding array type, if one exists. Otherwise,\nValueError is raised.\nVariable type of interest.\nCorresponding array type.\nIf the specified type does not have a corresponding array type.\nGiven a variable type representing an array, return the corresponding element type.\nWhen a non-array type is passed, ValueError is raised.\nVariable type of interest.\nCorresponding element type.\nIf the specified type does not have a corresponding element type.\nModule detail\nVariableType\nVariableType\nValueError\nValueError\nVariableType\nVariableType\nValueError"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/vartype_arrays_and_elements/index",
        "href": "api/ansys/tools/variableinterop/vartype_arrays_and_elements/index.html#vartype_arrays_and_elements.to_array_type",
        "title": "The vartype_arrays_and_elements.py module > Module detail > to_array_type",
        "section": "Module detail > to_array_type",
        "text": "vartype_arrays_and_elements.to_array_type(vartype: ansys.tools.variableinterop.variable_type.VariableType) -> ansys.tools.variableinterop.variable_type.VariableType\n\nGiven a variable type, find the corresponding array type, if one exists. Otherwise,\nValueError is raised.\n\nParameters\n\nvartype\n\nVariableType\n\nVariable type of interest.\n\nReturns\n\nVariableType\n\nCorresponding array type.\n\nRaises\n\nValueError\n\nIf the specified type does not have a corresponding array type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/vartype_arrays_and_elements/index",
        "href": "api/ansys/tools/variableinterop/vartype_arrays_and_elements/index.html#vartype_arrays_and_elements.get_element_type",
        "title": "The vartype_arrays_and_elements.py module > Module detail > get_element_type",
        "section": "Module detail > get_element_type",
        "text": "vartype_arrays_and_elements.get_element_type(vartype: ansys.tools.variableinterop.variable_type.VariableType) -> ansys.tools.variableinterop.variable_type.VariableType\n\nGiven a variable type representing an array, return the corresponding element type.\n\nWhen a non-array type is passed, ValueError is raised.\n\nParameters\n\nvartype\n\nVariableType\n\nVariable type of interest.\n\nReturns\n\nVariableType\n\nCorresponding element type.\n\nRaises\n\nValueError\n\nIf the specified type does not have a corresponding element type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata.html#booleanarraymetadata",
        "title": "BooleanArrayMetadata",
        "section": "BooleanArrayMetadata",
        "text": "Bases: ansys.tools.variableinterop.scalar_metadata.BooleanMetadata\nProvides metadata for the BooleanArrayValue variable type.\nBooleanArrayMetadata\nBooleanArrayMetadata\nansys.tools.variableinterop.scalar_metadata.BooleanMetadata\nBooleanArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata.html#ansys.tools.variableinterop.array_metadata.BooleanArrayMetadata",
        "title": "BooleanArrayMetadata > BooleanArrayMetadata > BooleanArrayMetadata",
        "section": "BooleanArrayMetadata > BooleanArrayMetadata",
        "text": "class ansys.tools.variableinterop.array_metadata.BooleanArrayMetadata\n\nBases: ansys.tools.variableinterop.scalar_metadata.BooleanMetadata\n\nProvides metadata for the BooleanArrayValue variable type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata.html#overview",
        "title": "BooleanArrayMetadata > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nvariable_type\nVariable type of the object.\nOverview\naccept\nvariable_type"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata.html#import-detail",
        "title": "BooleanArrayMetadata > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata.html#property-detail",
        "title": "BooleanArrayMetadata > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata.html#BooleanArrayMetadata.variable_type",
        "title": "BooleanArrayMetadata > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property BooleanArrayMetadata.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata.html#method-detail",
        "title": "BooleanArrayMetadata > Method detail",
        "section": "Method detail",
        "text": "Invoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nMethod detail\nIVariableMetadataVisitor\nT\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/BooleanArrayMetadata.html#BooleanArrayMetadata.accept",
        "title": "BooleanArrayMetadata > Method detail > accept",
        "section": "Method detail > accept",
        "text": "BooleanArrayMetadata.accept(visitor: ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor[ansys.tools.variableinterop.ivariablemetadata_visitor.T]) -> ansys.tools.variableinterop.ivariablemetadata_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableMetadataVisitor[T]\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata.html#stringarraymetadata",
        "title": "StringArrayMetadata",
        "section": "StringArrayMetadata",
        "text": "Bases: ansys.tools.variableinterop.scalar_metadata.StringMetadata\nProvides metadata for the StringArrayValue variable type.\nStringArrayMetadata\nStringArrayMetadata\nansys.tools.variableinterop.scalar_metadata.StringMetadata\nStringArrayValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata.html#ansys.tools.variableinterop.array_metadata.StringArrayMetadata",
        "title": "StringArrayMetadata > StringArrayMetadata > StringArrayMetadata",
        "section": "StringArrayMetadata > StringArrayMetadata",
        "text": "class ansys.tools.variableinterop.array_metadata.StringArrayMetadata\n\nBases: ansys.tools.variableinterop.scalar_metadata.StringMetadata\n\nProvides metadata for the StringArrayValue variable type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata.html#overview",
        "title": "StringArrayMetadata > Overview",
        "section": "Overview",
        "text": "accept\nInvoke the visitor pattern of this object using the passed-in visitor\nvariable_type\nVariable type of the object.\nOverview\naccept\nvariable_type"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata.html#import-detail",
        "title": "StringArrayMetadata > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata.html#property-detail",
        "title": "StringArrayMetadata > Property detail",
        "section": "Property detail",
        "text": "Variable type of the object.\nVariable type of the object.\nProperty detail\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata.html#StringArrayMetadata.variable_type",
        "title": "StringArrayMetadata > Property detail > variable_type",
        "section": "Property detail > variable_type",
        "text": "property StringArrayMetadata.variable_type: ansys.tools.variableinterop.variable_type.VariableType\n\nVariable type of the object.\n\nReturns\n\nVariableType\n\nVariable type of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata.html#method-detail",
        "title": "StringArrayMetadata > Method detail",
        "section": "Method detail",
        "text": "Invoke the visitor pattern of this object using the passed-in visitor\nimplementation.\nVisitor object to call.\nResults of the visitor invocation.\nMethod detail\nIVariableMetadataVisitor\nT\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata",
        "href": "api/ansys/tools/variableinterop/array_metadata/StringArrayMetadata.html#StringArrayMetadata.accept",
        "title": "StringArrayMetadata > Method detail > accept",
        "section": "Method detail > accept",
        "text": "StringArrayMetadata.accept(visitor: ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor[ansys.tools.variableinterop.ivariablemetadata_visitor.T]) -> ansys.tools.variableinterop.ivariablemetadata_visitor.T\n\nInvoke the visitor pattern of this object using the passed-in visitor\nimplementation.\n\nParameters\n\nvisitor\n\nIVariableMetadataVisitor[T]\n\nVisitor object to call.\n\nReturns\n\nT\n\nResults of the visitor invocation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext.html#alreadylocalfilecontentcontext",
        "title": "AlreadyLocalFileContentContext",
        "section": "AlreadyLocalFileContentContext",
        "text": "Bases: LocalFileContentContext, AsyncLocalFileContentContext\nProvides a default local file context for when the file is already hosted locally.\nBecause the file is already hosted and managed locally, there is no need to create a\nnew copy. Therefore, this implementation basically does nothing but provide a way to\nabstract away the difference between a locally and remotely hosted file content.\nAlreadyLocalFileContentContext\nAlreadyLocalFileContentContext\nLocalFileContentContext\nAsyncLocalFileContentContext"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext.html#ansys.tools.variableinterop.file_value.AlreadyLocalFileContentContext",
        "title": "AlreadyLocalFileContentContext > AlreadyLocalFileContentContext > AlreadyLocalFileContentContext",
        "section": "AlreadyLocalFileContentContext > AlreadyLocalFileContentContext",
        "text": "class ansys.tools.variableinterop.file_value.AlreadyLocalFileContentContext(local_content_path: anyio.Path | None = None)\n\nBases: LocalFileContentContext, AsyncLocalFileContentContext\n\nProvides a default local file context for when the file is already hosted locally.\n\nBecause the file is already hosted and managed locally, there is no need to create a\nnew copy. Therefore, this implementation basically does nothing but provide a way to\nabstract away the difference between a locally and remotely hosted file content.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext.html#overview",
        "title": "AlreadyLocalFileContentContext > Overview",
        "section": "Overview",
        "text": "keep_file_on_exit\nCall this method before exiting to prevent deleting the file on exit.\ncontent_path\nGet the local path to the content.\n__exit__\nExit the context.\n__aexit__\nAsynchronously exit the context.\nOverview\nkeep_file_on_exit\ncontent_path\n__exit__\n__aexit__"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext.html#import-detail",
        "title": "AlreadyLocalFileContentContext > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext.html#property-detail",
        "title": "AlreadyLocalFileContentContext > Property detail",
        "section": "Property detail",
        "text": "Get the local path to the content.\nProperty detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext.html#AlreadyLocalFileContentContext.content_path",
        "title": "AlreadyLocalFileContentContext > Property detail > content_path",
        "section": "Property detail > content_path",
        "text": "property AlreadyLocalFileContentContext.content_path: os.PathLike | None\n\nGet the local path to the content.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext.html#method-detail",
        "title": "AlreadyLocalFileContentContext > Method detail",
        "section": "Method detail",
        "text": "Call this method before exiting to prevent deleting the file on exit.\nExit the context.\nThis does nothing as no additional temporary file was created.\nAsynchronously exit the context.\nThis does nothing as no additional temporary file was created.\nMethod detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext.html#AlreadyLocalFileContentContext.keep_file_on_exit",
        "title": "AlreadyLocalFileContentContext > Method detail > keep_file_on_exit",
        "section": "Method detail > keep_file_on_exit",
        "text": "AlreadyLocalFileContentContext.keep_file_on_exit() -> None\n\nCall this method before exiting to prevent deleting the file on exit.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext.html#AlreadyLocalFileContentContext.__exit__",
        "title": "AlreadyLocalFileContentContext > Method detail > __exit__",
        "section": "Method detail > __exit__",
        "text": "AlreadyLocalFileContentContext.__exit__(exc_type, exc_val, exc_tb) -> None\n\nExit the context.\n\nThis does nothing as no additional temporary file was created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext",
        "href": "api/ansys/tools/variableinterop/file_value/AlreadyLocalFileContentContext.html#AlreadyLocalFileContentContext.__aexit__",
        "title": "AlreadyLocalFileContentContext > Method detail > __aexit__",
        "section": "Method detail > __aexit__",
        "text": "async AlreadyLocalFileContentContext.__aexit__(exc_type, exc_val, exc_tb) -> None\n\nAsynchronously exit the context.\n\nThis does nothing as no additional temporary file was created.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/index",
        "href": "api/ansys/tools/variableinterop/utils/index.html#the-utils-package",
        "title": "The utils package",
        "section": "The utils package",
        "text": "The utils package\nutils"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/index",
        "href": "api/ansys/tools/variableinterop/utils/index.html#summary",
        "title": "The utils package > Summary",
        "section": "Summary",
        "text": "array_to_from_string_util\nDefines the ArrayToFromStringUtil class.\nimplicit_coercion\nProvides utilities for implicitly coercing arbitrary Python objects into the\nlocale_utils\nProvides utilities for dealing with locales.\nstring_escaping\nProvides functions for ModelCenter-standard string escaping.\nvariable_type_util\nDefines the VariableType type.\nSummary\narray_to_from_string_util\nArrayToFromStringUtil\nimplicit_coercion\nlocale_utils\nstring_escaping\nvariable_type_util\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/index",
        "href": "api/ansys/tools/variableinterop/utils/index.html#description",
        "title": "The utils package > Description",
        "section": "Description",
        "text": "Provides utility methods and classes used by the main package.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/LocaleUtils",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/LocaleUtils.html#localeutils",
        "title": "LocaleUtils",
        "section": "LocaleUtils",
        "text": "Provides utilities for dealing with locales.\nLocaleUtils\nLocaleUtils"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/LocaleUtils",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/LocaleUtils.html#ansys.tools.variableinterop.utils.locale_utils.LocaleUtils",
        "title": "LocaleUtils > LocaleUtils > LocaleUtils",
        "section": "LocaleUtils > LocaleUtils",
        "text": "class ansys.tools.variableinterop.utils.locale_utils.LocaleUtils\n\nProvides utilities for dealing with locales.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/LocaleUtils",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/LocaleUtils.html#overview",
        "title": "LocaleUtils > Overview",
        "section": "Overview",
        "text": "perform_safe_locale_action\nSwitches to the correct locale, performs the specified action, and then switches\nOverview\nperform_safe_locale_action"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/LocaleUtils",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/LocaleUtils.html#import-detail",
        "title": "LocaleUtils > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/LocaleUtils",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/LocaleUtils.html#method-detail",
        "title": "LocaleUtils > Method detail",
        "section": "Method detail",
        "text": "Switches to the correct locale, performs the specified action, and then switches\nback safely.\nName of the locale to perform the action in.\nAction to perform.\nObject returned by the action.\nMethod detail\nCallable\nAny"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/LocaleUtils",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/LocaleUtils.html#LocaleUtils.perform_safe_locale_action",
        "title": "LocaleUtils > Method detail > perform_safe_locale_action",
        "section": "Method detail > perform_safe_locale_action",
        "text": "static LocaleUtils.perform_safe_locale_action(locale_name: str, action: Callable) -> Any\n\nSwitches to the correct locale, performs the specified action, and then switches\nback safely.\n\nParameters\n\nlocale_name: str\n\nName of the locale to perform the action in.\n\naction\n\nCallable\n\nAction to perform.\n\nReturns\n\nAny\n\nObject returned by the action.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/variable_type_util/index",
        "href": "api/ansys/tools/variableinterop/utils/variable_type_util/index.html#the-variable_type_utilpy-module",
        "title": "The variable_type_util.py module",
        "section": "The variable_type_util.py module",
        "text": "The variable_type_util.py module\nvariable_type_util.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/variable_type_util/index",
        "href": "api/ansys/tools/variableinterop/utils/variable_type_util/index.html#summary",
        "title": "The variable_type_util.py module > Summary",
        "section": "Summary",
        "text": "to_type\nGet the associated IVariableValue type.\nto_type_name\nGet the name of the associated IVariableValue type.\nSummary\nto_type\nIVariableValue\nto_type_name\nIVariableValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/variable_type_util/index",
        "href": "api/ansys/tools/variableinterop/utils/variable_type_util/index.html#description",
        "title": "The variable_type_util.py module > Description",
        "section": "Description",
        "text": "Defines the VariableType type.\nDescription\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/variable_type_util/index",
        "href": "api/ansys/tools/variableinterop/utils/variable_type_util/index.html#module-detail",
        "title": "The variable_type_util.py module > Module detail",
        "section": "Module detail",
        "text": "Get the associated IVariableValue type.\nGet the name of the associated IVariableValue type.\nModule detail\nIVariableValue\nIVariableValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/variable_type_util/index",
        "href": "api/ansys/tools/variableinterop/utils/variable_type_util/index.html#variable_type_util.to_type",
        "title": "The variable_type_util.py module > Module detail > to_type",
        "section": "Module detail > to_type",
        "text": "variable_type_util.to_type(var_type: ansys.tools.variableinterop.variable_type.VariableType)\n\nGet the associated IVariableValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/variable_type_util/index",
        "href": "api/ansys/tools/variableinterop/utils/variable_type_util/index.html#variable_type_util.to_type_name",
        "title": "The variable_type_util.py module > Module detail > to_type_name",
        "section": "Module detail > to_type_name",
        "text": "variable_type_util.to_type_name(var_type: ansys.tools.variableinterop.variable_type.VariableType)\n\nGet the name of the associated IVariableValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#ivariablemetadatavisitor",
        "title": "IVariableMetadataVisitor",
        "section": "IVariableMetadataVisitor",
        "text": "Bases: abc.ABC, Generic[T]\nDefines the interface to be implemented for using the visitor pattern with variable\nmetadata.\nTo use an implementation of this interface, create and pass an instance to the\nIVariableValue.accept() method.\nIVariableMetadataVisitor\nIVariableMetadataVisitor\nabc.ABC\nGeneric\nT\nIVariableValue.accept()"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor",
        "title": "IVariableMetadataVisitor > IVariableMetadataVisitor > IVariableMetadataVisitor",
        "section": "IVariableMetadataVisitor > IVariableMetadataVisitor",
        "text": "class ansys.tools.variableinterop.ivariablemetadata_visitor.IVariableMetadataVisitor\n\nBases: abc.ABC, Generic[T]\n\nDefines the interface to be implemented for using the visitor pattern with variable\nmetadata.\n\nTo use an implementation of this interface, create and pass an instance to the\nIVariableValue.accept() method.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#overview",
        "title": "IVariableMetadataVisitor > Overview",
        "section": "Overview",
        "text": "visit_integer\nMethod that is called if the IVariableValue.accept() method is called on an\nvisit_real\nMethod that is called if the IVariableValue.accept() method is called on a\nvisit_boolean\nMethod that is called if the IVariableValue.accept() method is called on a\nvisit_string\nMethod that is called if the IVariableValue.accept() method is called on a\nvisit_file\nMethod that is called if the IVariableValue.accept() method is called on a\nvisit_integer_array\nMethod that is called if the IVariableValue.accept() method is called on an\nvisit_real_array\nMethod that is called if the IVariableValue.accept() method is called on a\nvisit_boolean_array\nMethod that is called if the IVariableValue.accept() method is called on a\nvisit_string_array\nMethod that is called if the IVariableValue.accept() method is called on a\nvisit_file_array\nMethod that is called if the IVariableValue.accept() method is called on a\nOverview\nvisit_integer\nIVariableValue.accept()\nvisit_real\nIVariableValue.accept()\nvisit_boolean\nIVariableValue.accept()\nvisit_string\nIVariableValue.accept()\nvisit_file\nIVariableValue.accept()\nvisit_integer_array\nIVariableValue.accept()\nvisit_real_array\nIVariableValue.accept()\nvisit_boolean_array\nIVariableValue.accept()\nvisit_string_array\nIVariableValue.accept()\nvisit_file_array\nIVariableValue.accept()"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#import-detail",
        "title": "IVariableMetadataVisitor > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#method-detail",
        "title": "IVariableMetadataVisitor > Method detail",
        "section": "Method detail",
        "text": "Method that is called if the IVariableValue.accept() method is called on an\nIntegerMetadata type.\nIntegerMetadata type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on a\nRealMetadata type.\nRealMetadata type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on a\nBooleanMetadata type.\nBooleanMetadata type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on a\nStringMetadata type.\nStringMetadata type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on a\nFileMetadata type.\nFileMetadata type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on an\nIntegerArrayMetaData type.\nIntegerArrayMetadata type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on a\nRealArrayMetaData type.\nRealArrayMetaData type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on a\nBooleanArrayMetaData type.\nBooleanArrayMetaData type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on a\nStringArrayMetaData type.\nStringArrayMetaData type to visit.\nResult.\nMethod that is called if the IVariableValue.accept() method is called on a\nFileArrayMetadata` type.\nFileArrayMetadata type to visit.\nResult.\nMethod detail\nIVariableValue.accept()\nIntegerMetadata\nIntegerMetadata\nIntegerMetadata\nT\nIVariableValue.accept()\nRealMetadata\nRealMetadata\nRealMetadata\nT\nIVariableValue.accept()\nBooleanMetadata\nBooleanMetadata\nBooleanMetadata\nT\nIVariableValue.accept()\nStringMetadata\nStringMetadata\nStringMetadata\nT\nIVariableValue.accept()\nFileMetadata\nFileMetadata\nFileMetadata\nT\nIVariableValue.accept()\nIntegerArrayMetaData\nIntegerArrayMetadata\nIntegerArrayMetadata\nT\nIVariableValue.accept()\nRealArrayMetaData\nRealArrayMetadata\nRealArrayMetaData\nT\nIVariableValue.accept()\nBooleanArrayMetaData\nBooleanArrayMetadata\nBooleanArrayMetaData\nT\nIVariableValue.accept()\nStringArrayMetaData\nStringArrayMetadata\nStringArrayMetaData\nT\nIVariableValue.accept()\nFileArrayMetadata`\nFileArrayMetadata\nFileArrayMetadata\nT"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#IVariableMetadataVisitor.visit_integer",
        "title": "IVariableMetadataVisitor > Method detail > visit_integer",
        "section": "Method detail > visit_integer",
        "text": "abstract IVariableMetadataVisitor.visit_integer(metadata: ansys.tools.variableinterop.scalar_metadata.IntegerMetadata) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on an\nIntegerMetadata type.\n\nParameters\n\nmetadata\n\nIntegerMetadata\n\nIntegerMetadata type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#IVariableMetadataVisitor.visit_real",
        "title": "IVariableMetadataVisitor > Method detail > visit_real",
        "section": "Method detail > visit_real",
        "text": "abstract IVariableMetadataVisitor.visit_real(metadata: ansys.tools.variableinterop.scalar_metadata.RealMetadata) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on a\nRealMetadata type.\n\nParameters\n\nmetadata\n\nRealMetadata\n\nRealMetadata type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#IVariableMetadataVisitor.visit_boolean",
        "title": "IVariableMetadataVisitor > Method detail > visit_boolean",
        "section": "Method detail > visit_boolean",
        "text": "abstract IVariableMetadataVisitor.visit_boolean(metadata: ansys.tools.variableinterop.scalar_metadata.BooleanMetadata) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on a\nBooleanMetadata type.\n\nParameters\n\nmetadata\n\nBooleanMetadata\n\nBooleanMetadata type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#IVariableMetadataVisitor.visit_string",
        "title": "IVariableMetadataVisitor > Method detail > visit_string",
        "section": "Method detail > visit_string",
        "text": "abstract IVariableMetadataVisitor.visit_string(metadata: ansys.tools.variableinterop.scalar_metadata.StringMetadata) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on a\nStringMetadata type.\n\nParameters\n\nmetadata\n\nStringMetadata\n\nStringMetadata type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#IVariableMetadataVisitor.visit_file",
        "title": "IVariableMetadataVisitor > Method detail > visit_file",
        "section": "Method detail > visit_file",
        "text": "abstract IVariableMetadataVisitor.visit_file(metadata: ansys.tools.variableinterop.file_metadata.FileMetadata) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on a\nFileMetadata type.\n\nParameters\n\nmetadata\n\nFileMetadata\n\nFileMetadata type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#IVariableMetadataVisitor.visit_integer_array",
        "title": "IVariableMetadataVisitor > Method detail > visit_integer_array",
        "section": "Method detail > visit_integer_array",
        "text": "abstract IVariableMetadataVisitor.visit_integer_array(metadata: ansys.tools.variableinterop.array_metadata.IntegerArrayMetadata) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on an\nIntegerArrayMetaData type.\n\nParameters\n\nmetadata\n\nIntegerArrayMetadata\n\nIntegerArrayMetadata type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#IVariableMetadataVisitor.visit_real_array",
        "title": "IVariableMetadataVisitor > Method detail > visit_real_array",
        "section": "Method detail > visit_real_array",
        "text": "abstract IVariableMetadataVisitor.visit_real_array(metadata: ansys.tools.variableinterop.array_metadata.RealArrayMetadata) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on a\nRealArrayMetaData type.\n\nParameters\n\nmetadata\n\nRealArrayMetadata\n\nRealArrayMetaData type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#IVariableMetadataVisitor.visit_boolean_array",
        "title": "IVariableMetadataVisitor > Method detail > visit_boolean_array",
        "section": "Method detail > visit_boolean_array",
        "text": "abstract IVariableMetadataVisitor.visit_boolean_array(metadata: ansys.tools.variableinterop.array_metadata.BooleanArrayMetadata) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on a\nBooleanArrayMetaData type.\n\nParameters\n\nmetadata\n\nBooleanArrayMetadata\n\nBooleanArrayMetaData type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#IVariableMetadataVisitor.visit_string_array",
        "title": "IVariableMetadataVisitor > Method detail > visit_string_array",
        "section": "Method detail > visit_string_array",
        "text": "abstract IVariableMetadataVisitor.visit_string_array(metadata: ansys.tools.variableinterop.array_metadata.StringArrayMetadata) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on a\nStringArrayMetaData type.\n\nParameters\n\nmetadata\n\nStringArrayMetadata\n\nStringArrayMetaData type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor",
        "href": "api/ansys/tools/variableinterop/ivariablemetadata_visitor/IVariableMetadataVisitor.html#IVariableMetadataVisitor.visit_file_array",
        "title": "IVariableMetadataVisitor > Method detail > visit_file_array",
        "section": "Method detail > visit_file_array",
        "text": "abstract IVariableMetadataVisitor.visit_file_array(metadata: ansys.tools.variableinterop.file_array_metadata.FileArrayMetadata) -> T\n\nMethod that is called if the IVariableValue.accept() method is called on a\nFileArrayMetadata` type.\n\nParameters\n\nmetadata\n\nFileArrayMetadata\n\nFileArrayMetadata type to visit.\n\nReturns\n\nT\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/FormatException",
        "href": "api/ansys/tools/variableinterop/exceptions/FormatException.html#formatexception",
        "title": "FormatException",
        "section": "FormatException",
        "text": "Bases: BaseException\nIndicates that the string used to create a variable value was incorrectly\nformatted.\nFormatException\nFormatException\nBaseException"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/FormatException",
        "href": "api/ansys/tools/variableinterop/exceptions/FormatException.html#ansys.tools.variableinterop.exceptions.FormatException",
        "title": "FormatException > FormatException > FormatException",
        "section": "FormatException > FormatException",
        "text": "exception ansys.tools.variableinterop.exceptions.FormatException\n\nBases: BaseException\n\nIndicates that the string used to create a variable value was incorrectly\nformatted.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/exceptions/FormatException",
        "href": "api/ansys/tools/variableinterop/exceptions/FormatException.html#import-detail",
        "title": "FormatException > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/index",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/index.html#the-locale_utilspy-module",
        "title": "The locale_utils.py module",
        "section": "The locale_utils.py module",
        "text": "The locale_utils.py module\nlocale_utils.py"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/index",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/index.html#summary",
        "title": "The locale_utils.py module > Summary",
        "section": "Summary",
        "text": "LocaleUtils\nProvides utilities for dealing with locales.\nStrings\nProvides utilities for obtaining string resources.\nSummary\nLocaleUtils\nStrings"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/utils/locale_utils/index",
        "href": "api/ansys/tools/variableinterop/utils/locale_utils/index.html#description",
        "title": "The locale_utils.py module > Description",
        "section": "Description",
        "text": "Provides utilities for dealing with locales.\nDescription"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/VariableValueInvalidError",
        "href": "api/ansys/tools/variableinterop/variable_value/VariableValueInvalidError.html#variablevalueinvaliderror",
        "title": "VariableValueInvalidError",
        "section": "VariableValueInvalidError",
        "text": "Bases: Exception\nRaises an error to indicate that a required variable value is invalid.\nVariableValueInvalidError\nVariableValueInvalidError\nException"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/VariableValueInvalidError",
        "href": "api/ansys/tools/variableinterop/variable_value/VariableValueInvalidError.html#ansys.tools.variableinterop.variable_value.VariableValueInvalidError",
        "title": "VariableValueInvalidError > VariableValueInvalidError > VariableValueInvalidError",
        "section": "VariableValueInvalidError > VariableValueInvalidError",
        "text": "exception ansys.tools.variableinterop.variable_value.VariableValueInvalidError\n\nBases: Exception\n\nRaises an error to indicate that a required variable value is invalid.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_value/VariableValueInvalidError",
        "href": "api/ansys/tools/variableinterop/variable_value/VariableValueInvalidError.html#import-detail",
        "title": "VariableValueInvalidError > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#variabletype",
        "title": "VariableType",
        "section": "VariableType",
        "text": "Bases: enum.Enum\nProvides an enumeration of the possible variable types.\nVariableType\nVariableType\nenum.Enum"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#ansys.tools.variableinterop.variable_type.VariableType",
        "title": "VariableType > VariableType > VariableType",
        "section": "VariableType > VariableType",
        "text": "class ansys.tools.variableinterop.variable_type.VariableType(*args, **kwds)\n\nBases: enum.Enum\n\nProvides an enumeration of the possible variable types.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#overview",
        "title": "VariableType > Overview",
        "section": "Overview",
        "text": "to_display_string\nGet the display string for the VariableType value.\nget_default_value\nConstruct the default value for this type.\nconstruct_variable_metadata\nConstruct the default metadata for this type.\nassociated_type_name\nGet the name of the associated IVariableValue type.\nUNKNOWN\nType is unknown.\nINTEGER\nInteger values.\nREAL\nReal values.\nBOOLEAN\nBoolean values.\nSTRING\nString values.\nFILE\nFile values.\nINTEGER_ARRAY\nArray of integer values.\nREAL_ARRAY\nArray of real values.\nBOOLEAN_ARRAY\nArray of Boolean values.\nSTRING_ARRAY\nArray of string values.\nFILE_ARRAY\nArray of file values.\nfrom_string\nGet the VariableType value from a string.\nOverview\nto_display_string\nVariableType\nget_default_value\nconstruct_variable_metadata\nassociated_type_name\nIVariableValue\nUNKNOWN\nINTEGER\nREAL\nBOOLEAN\nSTRING\nFILE\nINTEGER_ARRAY\nREAL_ARRAY\nBOOLEAN_ARRAY\nSTRING_ARRAY\nFILE_ARRAY\nfrom_string\nVariableType"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#import-detail",
        "title": "VariableType > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#property-detail",
        "title": "VariableType > Property detail",
        "section": "Property detail",
        "text": "Get the name of the associated IVariableValue type.\nProperty detail\nIVariableValue"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.associated_type_name",
        "title": "VariableType > Property detail > associated_type_name",
        "section": "Property detail > associated_type_name",
        "text": "property VariableType.associated_type_name: str\n\nGet the name of the associated IVariableValue type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#attribute-detail",
        "title": "VariableType > Attribute detail",
        "section": "Attribute detail",
        "text": "Type is unknown.\nInteger values.\nThese are stored as 64-bit signed integers\nReal values.\nThese are stored as 64-bit floating point numbers\nBoolean values.\nString values.\nFile values.\nArray of integer values.\nThese are stored as 64-bit signed integers. Multidimensional arrays are supported.\nArray of real values.\nThese are stored as 64-bit floating point numbers. Multidimensional arrays are\nsupported.\nArray of Boolean values.\nMultidimensional arrays are supported.\nArray of string values.\nMultidimensional arrays are supported.\nArray of file values.\nMultidimensional arrays are supported.\nAttribute detail"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.UNKNOWN",
        "title": "VariableType > Attribute detail > UNKNOWN",
        "section": "Attribute detail > UNKNOWN",
        "text": "VariableType.UNKNOWN = 0\n\nType is unknown.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.INTEGER",
        "title": "VariableType > Attribute detail > INTEGER",
        "section": "Attribute detail > INTEGER",
        "text": "VariableType.INTEGER = 1\n\nInteger values.\n\nThese are stored as 64-bit signed integers\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.REAL",
        "title": "VariableType > Attribute detail > REAL",
        "section": "Attribute detail > REAL",
        "text": "VariableType.REAL = 2\n\nReal values.\n\nThese are stored as 64-bit floating point numbers\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.BOOLEAN",
        "title": "VariableType > Attribute detail > BOOLEAN",
        "section": "Attribute detail > BOOLEAN",
        "text": "VariableType.BOOLEAN = 3\n\nBoolean values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.STRING",
        "title": "VariableType > Attribute detail > STRING",
        "section": "Attribute detail > STRING",
        "text": "VariableType.STRING = 4\n\nString values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.FILE",
        "title": "VariableType > Attribute detail > FILE",
        "section": "Attribute detail > FILE",
        "text": "VariableType.FILE = 5\n\nFile values.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.INTEGER_ARRAY",
        "title": "VariableType > Attribute detail > INTEGER_ARRAY",
        "section": "Attribute detail > INTEGER_ARRAY",
        "text": "VariableType.INTEGER_ARRAY = 6\n\nArray of integer values.\n\nThese are stored as 64-bit signed integers. Multidimensional arrays are supported.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.REAL_ARRAY",
        "title": "VariableType > Attribute detail > REAL_ARRAY",
        "section": "Attribute detail > REAL_ARRAY",
        "text": "VariableType.REAL_ARRAY = 7\n\nArray of real values.\n\nThese are stored as 64-bit floating point numbers. Multidimensional arrays are\nsupported.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.BOOLEAN_ARRAY",
        "title": "VariableType > Attribute detail > BOOLEAN_ARRAY",
        "section": "Attribute detail > BOOLEAN_ARRAY",
        "text": "VariableType.BOOLEAN_ARRAY = 8\n\nArray of Boolean values.\n\nMultidimensional arrays are supported.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.STRING_ARRAY",
        "title": "VariableType > Attribute detail > STRING_ARRAY",
        "section": "Attribute detail > STRING_ARRAY",
        "text": "VariableType.STRING_ARRAY = 9\n\nArray of string values.\n\nMultidimensional arrays are supported.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.FILE_ARRAY",
        "title": "VariableType > Attribute detail > FILE_ARRAY",
        "section": "Attribute detail > FILE_ARRAY",
        "text": "VariableType.FILE_ARRAY = 10\n\nArray of file values.\n\nMultidimensional arrays are supported.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#method-detail",
        "title": "VariableType > Method detail",
        "section": "Method detail",
        "text": "Get the VariableType value from a string.\nString to convert to a VariableType value.\nResult.\nGet the display string for the VariableType value.\nDisplay string.\nConstruct the default value for this type.\nNew value object whose type matches this type.\nConstruct the default metadata for this type.\nNew metadata object whose type matches this type.\nMethod detail\nVariableType\npython:str\nVariableType\nVariableType\nVariableType\npython:str\nIVariableValue\nCommonVariableMetadata"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.from_string",
        "title": "VariableType > Method detail > from_string",
        "section": "Method detail > from_string",
        "text": "static VariableType.from_string(s: str) -> VariableType\n\nGet the VariableType value from a string.\n\nParameters\n\ns\n\npython:str\n\nString to convert to a VariableType value.\n\nReturns\n\nVariableType\n\nResult.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.to_display_string",
        "title": "VariableType > Method detail > to_display_string",
        "section": "Method detail > to_display_string",
        "text": "VariableType.to_display_string() -> str\n\nGet the display string for the VariableType value.\n\nReturns\n\npython:str\n\nDisplay string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.get_default_value",
        "title": "VariableType > Method detail > get_default_value",
        "section": "Method detail > get_default_value",
        "text": "VariableType.get_default_value() -> ansys.tools.variableinterop.variable_value.IVariableValue\n\nConstruct the default value for this type.\n\nReturns\n\nIVariableValue\n\nNew value object whose type matches this type.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/ansys/tools/variableinterop/variable_type/VariableType",
        "href": "api/ansys/tools/variableinterop/variable_type/VariableType.html#VariableType.construct_variable_metadata",
        "title": "VariableType > Method detail > construct_variable_metadata",
        "section": "Method detail > construct_variable_metadata",
        "text": "VariableType.construct_variable_metadata() -> ansys.tools.variableinterop.common_variable_metadata.CommonVariableMetadata\n\nConstruct the default metadata for this type.\n\nReturns\n\nCommonVariableMetadata\n\nNew metadata object whose type matches this type.\n\n!! processed by numpydoc !!"
    }
]